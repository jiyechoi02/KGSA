[{"/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/index.js":"1","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/App.js":"2","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/Router.js":"3","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/pages/Footer.js":"4","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/pages/About.js":"5","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/pages/Events.js":"6","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/pages/Contact.js":"7","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/pages/SignUp.js":"8","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/pages/Gallery.js":"9","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/pages/Login.js":"10","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/pages/Home.js":"11","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/pages/UserDashboard.js":"12","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/pages/Announcements.js":"13","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/pages/Market.js":"14","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/pages/Housing.js":"15","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/MyNavbar.js":"16","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/pages/Resources.js":"17","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/Routes/PublicRoutes.js":"18","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/Routes/PrivateRoutes.js":"19","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/Routes/AdminRoutes.js":"20","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/services/ScrollToTop.js":"21","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/CustomContainer.js":"22","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/services/LoginHelper.js":"23","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/services/UseAPIs.js":"24","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/MyDiv.js":"25","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/MySpinner.js":"26","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/Styles.js":"27","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/CustomPagination.js":"28","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/MyModal.js":"29","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/services/config.js":"30","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/services/AlertHelper.js":"31","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/AccountForm.js":"32","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/AuthButtons.js":"33","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/MyTable.js":"34","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/EditPost.js":"35","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/Comments.js":"36","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/ViewPost.js":"37","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/Editor.js":"38","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/FileUploader.js":"39"},{"size":350,"mtime":1631462298843,"results":"40","hashOfConfig":"41"},{"size":304,"mtime":1633206637133,"results":"42","hashOfConfig":"41"},{"size":3402,"mtime":1634085665025,"results":"43","hashOfConfig":"41"},{"size":894,"mtime":1631226258200,"results":"44","hashOfConfig":"41"},{"size":3700,"mtime":1663964246235,"results":"45","hashOfConfig":"41"},{"size":18319,"mtime":1663984084686,"results":"46","hashOfConfig":"41"},{"size":6047,"mtime":1663964319286,"results":"47","hashOfConfig":"41"},{"size":2671,"mtime":1663982311623,"results":"48","hashOfConfig":"41"},{"size":13639,"mtime":1633313557884,"results":"49","hashOfConfig":"41"},{"size":4433,"mtime":1631226561615,"results":"50","hashOfConfig":"41"},{"size":6124,"mtime":1663962144271,"results":"51","hashOfConfig":"41"},{"size":12868,"mtime":1633319726161,"results":"52","hashOfConfig":"41"},{"size":7792,"mtime":1634085665025,"results":"53","hashOfConfig":"41"},{"size":7216,"mtime":1633313662770,"results":"54","hashOfConfig":"41"},{"size":7988,"mtime":1633313610415,"results":"55","hashOfConfig":"41"},{"size":13979,"mtime":1663961977069,"results":"56","hashOfConfig":"41"},{"size":2230,"mtime":1631226749081,"results":"57","hashOfConfig":"41"},{"size":267,"mtime":1629147453396,"results":"58","hashOfConfig":"41"},{"size":393,"mtime":1628984827507,"results":"59","hashOfConfig":"41"},{"size":450,"mtime":1633385650608,"results":"60","hashOfConfig":"41"},{"size":334,"mtime":1633314165998,"results":"61","hashOfConfig":"41"},{"size":499,"mtime":1629699078397,"results":"62","hashOfConfig":"41"},{"size":890,"mtime":1629844557300,"results":"63","hashOfConfig":"41"},{"size":980,"mtime":1633317778778,"results":"64","hashOfConfig":"41"},{"size":353,"mtime":1629847768992,"results":"65","hashOfConfig":"41"},{"size":266,"mtime":1631309682867,"results":"66","hashOfConfig":"41"},{"size":1431,"mtime":1629747194296,"results":"67","hashOfConfig":"41"},{"size":1249,"mtime":1629678859457,"results":"68","hashOfConfig":"41"},{"size":1327,"mtime":1633385679849,"results":"69","hashOfConfig":"41"},{"size":104,"mtime":1633206749935,"results":"70","hashOfConfig":"41"},{"size":452,"mtime":1629494926519,"results":"71","hashOfConfig":"41"},{"size":14131,"mtime":1633402866644,"results":"72","hashOfConfig":"41"},{"size":868,"mtime":1629916119848,"results":"73","hashOfConfig":"41"},{"size":5099,"mtime":1630117883020,"results":"74","hashOfConfig":"41"},{"size":11341,"mtime":1633313990004,"results":"75","hashOfConfig":"41"},{"size":7084,"mtime":1631309094295,"results":"76","hashOfConfig":"41"},{"size":2491,"mtime":1663981798408,"results":"77","hashOfConfig":"41"},{"size":8755,"mtime":1631310313919,"results":"78","hashOfConfig":"41"},{"size":2376,"mtime":1630035139267,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"18aqwk8",{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"82"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"82"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"82"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"82"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"82"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"82"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"82"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"82"},"/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/index.js",[],["185","186"],"/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/App.js",["187"],"import React, {useState} from \"react\"\nimport './styles.css'\nimport Footer from \"./components/pages/Footer\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport Router from \"./Router\"\n\nconst App = () => {\n  \n    return (\n      <>\n        <Router/>\n        <Footer/>\n      </>\n    );\n\n};\nexport default App","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/Router.js",["188"],"import React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport ScrollToTop from './services/ScrollToTop';\nimport Home from \"./components/pages/Home\";\nimport About from \"./components/pages/About\"\nimport Events from \"./components/pages/Events\"\nimport {Announcements,AnncmntNewPost,AnncmntPostView,AnncmntEditPost} from \"./components/pages/Announcements\"\nimport Gallery, { GalleryNewPost, GalleryView } from \"./components/pages/Gallery\"\nimport Contact from \"./components/pages/Contact\"\nimport Login from './components/pages/Login'\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport Signup from './components/pages/SignUp';\nimport UserDashboard from './components/pages/UserDashboard';\nimport PrivateRoutes from './Routes/PrivateRoutes';\nimport PublicRoutes from './Routes/PublicRoutes';\nimport AdmintRoutes from './Routes/AdminRoutes';\nimport MyNavbar from './components/MyNavbar';\nimport { Market, MarketEditPost, MarketNewPost, MarketPostView } from './components/pages/Market';\nimport { Housing, HousingEditPost, HousingNewPost, HousingPostView } from './components/pages/Housing';\nimport { Resources } from './components/pages/Resources';\nexport default function Routes(){\n\n\n    return (\n        <>\n            <MyNavbar/>\n            <ScrollToTop/>\n            <Switch>   \n                <PublicRoutes exact path = \"/\" component={Home}/>\n                <PublicRoutes path='/events' component={Events}/>\n                <PublicRoutes path=\"/about/:menu\" component={About} />\n                <PublicRoutes exact path=\"/announcements\" component={Announcements} />\n                <PublicRoutes path=\"/contact\" component={Contact} />\n                <PublicRoutes path=\"/login\" component={Login}/>\n                <PublicRoutes path=\"/signup\" component={Signup}/>\n                <PublicRoutes path=\"/resources\" component={Resources}/>\n\n                {/* <AdmintRoutes exact path=\"/announcements/edit/:token\" component={AnncmntEditPage}/> */}\n                <PublicRoutes  path=\"/announcements/view/:_id\" component={AnncmntPostView} />\n                <AdmintRoutes  path=\"/announcements/post/:username\" component={AnncmntNewPost}/>\n                <AdmintRoutes  path=\"/announcements/edit/:_id/:username\" component={AnncmntEditPost}/>\n\n                <PrivateRoutes exact path=\"/userdashboard/:menu\" component={UserDashboard}/>\n\n                <PublicRoutes exact path=\"/gallery\" component={Gallery}/>\n                <PublicRoutes path=\"/gallery/view/:_id\" component={GalleryView}/>\n                <PublicRoutes path=\"/gallery/post/:username\" component={GalleryNewPost}/>\n\n                <PublicRoutes exact path ='/market' component={Market}/>\n                <PublicRoutes exact path ='/market/view/:_id' component={MarketPostView}/>\n                <PrivateRoutes path = '/market/post' component={MarketNewPost}/>  \n                <PrivateRoutes path = '/market/edit/:_id' component={MarketEditPost}/>                              \n\n                <PublicRoutes exact path ='/housing' component={Housing}/>\n                <PublicRoutes exact path ='/housing/view/:_id' component={HousingPostView}/>   \n                <PrivateRoutes path = '/housing/post/' component={HousingNewPost}/>                \n                <PrivateRoutes path = '/housing/edit/:_id' component={HousingEditPost}/>                              \n\n            </Switch>\n        </>\n    )\n}\n","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/pages/Footer.js",[],"/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/pages/About.js",["189","190"],"import React from \"react\";\nimport { CustomContainer as Container } from '../CustomContainer' ;\nimport MyDiv from \"../MyDiv\";\nimport { useParams } from \"react-router-dom\";\nimport umass_logo from \"../../assets/images/umass_logo.png\"\nimport kgsa_pic from \"../../assets/images/kgsa_photo.jpeg\"\n\nexport const AboutUmass = ()=>{\n    return (\n        <div>\n            <Container containerSize=\"myContainer--small\">UMass Amherst 소개</Container>\n            <div class=\"aboutUmass\" >\n                <div style={{textAlign:\"center\"}}>\n                    <img src={umass_logo}/>\n                </div>\n                <div style={{marginTop:\"20px\"}}>\n                    <p>매사추세츠앰허스트대학교는 미국 매사추세츠주 앰허스트에 있는 공립 종합대학교이다.\n                    1863년에 매사추세츠농업대학으로 설립되었고 1931년에 매사추세츠주대학으로, 1947년에 매사추세츠앰허스트대학교로 이름이 바뀌었다. \n                    이 대학에는 9개 단과대학이 있고 109개 학부 과정, 77개 석사 과정, 48개 박사 과정이 있다. 매사추세츠앰허스트대학교는 매우 높은 연구 활동을 하는 'R1 박사대학'에 속해 있다. \n                    동문과 교수 중에는 4명의 노벨상 수상자와 많은 퓰리처상 수상자와 그래미상, 에미상, 아카데미상 수상자가 있다. </p>\n                    \n                    <p> 출처 [네이버 지식백과] 매사추세츠앰허스트대학교 [University of Massachusetts Amherst] (세계의 대학) </p>\n                </div>\n                <div>\n                    <p> 주요 Links </p>\n                    <ul style={{listStyleType: \"circle\"}}>\n                        <li><a href=\"https://www.umass.edu/\">Umass Amherst Website Link</a></li>\n                        <li><a href=\"https://en.wikipedia.org/wiki/University_of_Massachusetts_Amherst\">Learn more</a></li>\n                    </ul>\n\n                </div>\n            </div>\n        </div>\n        )\n}\n\nexport const AboutKGSA = ()=>{\n    return (\n        <div>\n            <Container containerSize=\"myContainer--small\">KGSA 소개</Container>\n            <div class=\"aboutUmass\" >\n            <div style={{textAlign:\"center\"}}>\n                    <img src={kgsa_pic} style={{ height:\"50%\", width:\"100%\"}}/>\n                </div>\n                <div style={{marginTop:\"20px\"}}>\n                    <p> Korean Graduate Student Association (KGSA)는 University of Massachusetts Amherst에 재학 중인 한인 대학원생들로 이루어진 그룹입니다.\n                        한인 유학생들이 Amherst에서 잘 적응하고 학업/연구에 집중 할 수 있도록 다양한 정보와 이벤트들을 주최하고 있습니다.\n                    </p>\n                </div>\n                <div>\n                    <p> 주요 Links </p>\n                    <ul style={{listStyleType: \"circle\"}}>\n                        <li><a href=\"https://www.facebook.com/groups/123384061073912\">Facebook</a></li>\n                    </ul>\n\n                </div>\n            </div>\n        </div>\n        )\n}\n\nexport const HistoryOfKGSA = ()=>{\n    return(\n            <Container containerSize=\"myContainer--small\">주요 연혁</Container>\n        )\n}\n\nconst aboutList ={\n    aboutKGSA : AboutKGSA,\n    aboutUMass : AboutUmass,\n    aboutHistory : HistoryOfKGSA\n}\n\nconst About = () => {\n    const {menu} = useParams();\n    const AboutContent = aboutList[menu]\n\n    return (\n    <div>\n        <Container>\n            <MyDiv>\n                <AboutContent/>\n            </MyDiv>\n        </Container>\n    </div>\n    )\n};\n\nexport default About","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/pages/Events.js",["191","192","193","194","195"],"/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/pages/Contact.js",["196"],"import React, { useState, useReducer } from 'react';\nimport {Form, Row, Col, Spinner} from 'react-bootstrap';\nimport contact_img from '../../assets/images/contact.jpg'\nimport { CustomContainer as Container } from '../CustomContainer' ;\nimport MyModal from '../MyModal';\nimport MyDiv from '../MyDiv';\n// import emailjs from 'emailjs-com';\nimport {reducer, initialData} from '../../services/AlertHelper';\nimport {StyledButton} from '../Styles';\nimport {BiMessageSquareDetail} from 'react-icons/bi';\nimport {RiAccountPinBoxLine ,RiKakaoTalkFill} from 'react-icons/ri';\nimport {HiOutlineMail} from 'react-icons/hi'\nimport {FaFacebookSquare, FaInstagramSquare} from 'react-icons/fa'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../../styles.css';\n\nconst Contact = () =>{\n    const TEMPLATE_ID = 'template_t3by3qv';\n    const SERVICE_ID = 'service_n10zokg';\n    const USER_ID = 'user_9x5OpEmuDoRRPamPUnu59';\n\n    const [{success, fail, loading}, dispatch]= useReducer(reducer, initialData);\n\n    const [ data, setData ] = useState({\n        from_name:\"\",\n        to_name:\"KGSA\",\n        message:\"\",\n        reply_to:\"\"\n    });\n\n    const handleChange = (e) =>{\n        setData({\n            ...data,[e.target.name]:e.target.value\n        })\n   }\n    const handleSubmit = (e)=>{\n        e.preventDefault();\n\n        dispatch({type:'loading', value : true})\n\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n\n        import('emailjs-com')\n        .then(({emailjs})=>{\n            emailjs.sendForm(SERVICE_ID,TEMPLATE_ID,e.target,USER_ID)\n        })\n        .then((res)=>{\n            if(res.status === 200){\n                dispatch({type:'success', value : true})\n                dispatch({type:'loading', value : false})\n            }\n        })\n        .catch((err)=>{\n            dispatch({type:'fail', value : true})\n        })\n    }\n\n    const handleOnClick = ()=>{\n        dispatch({type:'success', value : false})\n        dispatch({type:'fail', value : false})\n        dispatch({type: 'loading', value : false})\n\n        setData({\n            from_name:\"\",\n            to_name:\"KGSA\",\n            message:\"\",\n            reply_to:\"\"            \n        })\n\n    }\n    return (\n    <Container>\n        <MyDiv>\n            <Container containerSize=\"myContainer--small\">Contact</Container>\n            <div>\n                <Row className=\"sns-container\">\n                    <Col className=\"contact-info\"> \n                        <Row>\n                            <img src = {contact_img} alt=\"contact us\" style={{\"maxWidth\":\"100%\", \"height\":\"50%\", \"borderRadius\": \"10%\"}}/> \n                        </Row>\n                        <Row style={{ margin:\"10px\"}}>\n                            <ul>\n                                <li>\n                                    <HiOutlineMail/> Email : kgsa_umass@gmail.com\n                                </li>\n                                <li>\n                                    <RiKakaoTalkFill/> KakaoTalk : kgsa_umass\n                                </li>\n                                <li> \n                                    <a href=\"https://www.facebook.com/groups/123384061073912\"\n                                    target=\"_blank\" rel=\"noreferrer\">\n                                        <FaFacebookSquare/> KSGA Facebook\n                                    </a>\n                                </li>\n                                <li> \n                                    <a href=\"https://www.instagram.com/\" target=\"_blank\" rel=\"noreferrer\">\n                                        <FaInstagramSquare/> KSGA Instagram\n                                    </a>\n                                </li>\n                            </ul>\n                        </Row>\n                    </Col>\n                    <Col>\n                        <Form className=\"text-center\" onSubmit={handleSubmit} >\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label><RiAccountPinBoxLine size={30}/>TO</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"KGSA\" name=\"to_name\" value={data.to_name} disabled/>\n                            </Form.Group>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label><RiAccountPinBoxLine size={30}/>FROM</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Name*\" name=\"from_name\" onChange={handleChange} value={data.from_name} required/>\n                            </Form.Group>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label><HiOutlineMail size={30}/>EMAIL</Form.Label>\n                                <Form.Control type=\"email\" placeholder=\"Email\" name=\"reply_to\" onChange={handleChange} value={data.reply_to}/>\n                                <Form.Label className=\"text-muted\"> If you want a reply, please leave your email.</Form.Label>\n                            </Form.Group>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label><BiMessageSquareDetail size={30}/>MESSAGE</Form.Label>\n                                <Form.Control as=\"textarea\" rows={10}placeholder=\"Message*\"  name=\"message\" onChange={handleChange}  value={data.message} required/>\n                            </Form.Group>\n                            <StyledButton type=\"submit\">Sumbit</StyledButton>\n                        </Form>       \n                    </Col>     \n                </Row>\n            </div>\n            {loading?\n                <MyModal show={loading} handleOnClick={handleOnClick}>\n                    <Spinner animation=\"border\" variant=\"secondary\" />\n                    <span>Loading...</span>\n                </MyModal>:\n                <MyModal show={success} handleOnClick={handleOnClick} variant=\"success\"><p>Has sent an email to KGSA successfully</p></MyModal>}\n        </MyDiv>    \n    </Container>\n    )\n};\n\nexport default Contact;","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/pages/SignUp.js",["197"],"/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/pages/Gallery.js",["198","199"],"import React, {useState, useEffect, useReducer} from 'react'\nimport '../../styles.css';\nimport { StyledButton as Button } from '../Styles';\nimport { Card, Col, Form, Row,Carousel, ListGroup, Alert} from 'react-bootstrap';\nimport { CustomContainer as Container } from '../CustomContainer' ;\nimport { getUser } from '../../services/LoginHelper';\nimport { initialData, reducer } from '../../services/AlertHelper';\nimport MyModal from '../MyModal';\nimport MySpinner from '../MySpinner';\nimport { checkAuth } from '../AuthButtons';\nimport {RiDeleteBin2Line,RiCheckboxMultipleBlankLine} from 'react-icons/ri';\nimport styled from 'styled-components';\nimport { useHistory, useParams } from 'react-router-dom';\nimport MyDiv from '../MyDiv';\nimport {url} from '../../services/config';\n\nconst user = getUser();\n\nconst StyledP = styled.p`\n    color : black;\n    font-size : 13pt;\n    &:hover{\n        color : red;\n    }\n`\n\nexport const GalleryNewPost = () =>{\n    const [{success, fail,loading}, dispatch] = useReducer(reducer,initialData)\n\n    const [uploadedFiles, setUploadedFiles] = useState([])\n    const [inputKey, setInputKey]= useState(\"inputKey\")\n    const [ inputFileKey, setInputFileKey] = useState(\"inputFileKey\");\n    const [ data, setData] = useState({\n        name : \"\",\n        caption : \"\",\n    });\n\n    const handleFileChange = (e)=>{\n        const files = e.target.files\n        if(files.length> 10){\n            console.log(\"Too many files\") // replace it to Alert \n            // setInputFileKey(new Date()) //set a random key to reset the file form \n        }\n\n        for(let i =0; i<files.length; i++){\n            setUploadedFiles(prev=> [...prev, files[i]])\n        }\n\n        setInputFileKey(new Date())\n    }\n\n    const handleInputChange = (e)=>{\n        setData({...data, [e.target.name] : e.target.value})\n    }\n\n    const handleSumbit = (e) => {\n        e.preventDefault();\n        dispatch({type:\"loading\", value : true})\n        \n        var formData = new FormData();\n        formData.append(\"name\", data.name);\n        formData.append(\"caption\", data.caption);\n\n        for (let i =0; i< uploadedFiles.length; i ++){\n            formData.append(\"imgCollection\", uploadedFiles[i]);\n        }\n \n        var requestOptions = {\n            method: 'POST', \n            body: formData,\n        };\n\n        fetch(url+\"gallery\", requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                if(result.success){\n                    dispatch({type:\"loading\", value:false})\n                    dispatch({type:\"success\", value:true})\n                }\n                else dispatch({type:\"fail\", value:true})\n            })\n            .catch(error => dispatch({type:\"fail\", value:true}))\n            .finally(()=>{\n                dispatch({type:\"loading\", value:false})\n            })\n    }\n\n    const handleSuccessClick = ()=>{\n        dispatch({type:\"success\", value:false})\n        setInputFileKey(new Date())\n        setInputKey(new Date())\n    }\n    \n    const renderUploadedFilesList = ()=>{\n        const list = uploadedFiles.map((item,i)=>{\n            console.log(item)\n            return (\n                <li key={i} style={{fontSize:'10pt'}}>\n                    <Row>\n                        <Col xs={10}>\n                            {item.name}\n                        </Col>\n                        <Col xs={2}>\n                            <StyledP onClick={()=>handleDeleteUploadFiles(i)}><RiDeleteBin2Line/></StyledP>\n                        </Col>\n                    </Row>\n                </li>\n            )\n        })\n\n        return list\n    }\n\n    const handleDeleteUploadFiles = (index)=>{\n        setUploadedFiles(uploadedFiles.filter((item,i)=> i!== index));\n    }\n    return (\n        <Container>\n            <MyDiv>\n                <Container containerSize=\"myContainer--small\">갤러리</Container>\n                <Form onSubmit={handleSumbit} className=\"editor-form\"  key={inputKey}>\n                    <Form.Control className=\"editor-form-control\"  type=\"text\" name=\"name\" placeholder=\"Title\" onChange={handleInputChange}/>            \n                    <Form.Control className=\"editor-form-control\"  type=\"file\" multiple onChange={handleFileChange} key={inputFileKey} accept=\"image/jpg, image/jpeg, image/png, image/gif, image/bmp\"/>  \n                    {uploadedFiles && \n                        <ul>\n                            {renderUploadedFilesList()}\n                        </ul>\n                    }\n                    <Form.Control className=\"editor-form-control\" as=\"textarea\" name=\"caption\" placeholder=\"Caption\" onChange={handleInputChange} rows={3}/>\n                    <Button margin=\"0px\" type=\"submit\">Submit</Button>\n                </Form>\n                <MyModal show={loading} closeButton={false}>\n                    <MySpinner/>\n                </MyModal>\n                <MyModal show={success} handleOnClick={handleSuccessClick} variant='success'>\n                    <p>uploaded images successfully!</p>\n                </MyModal>\n                <MyModal show={fail} handleOnClick={()=>dispatch({type:\"fail\", value: false})} variant='danger'>\n                    <p>Opps, something is wrong.</p>\n                    <p>Try Again</p>\n                </MyModal>\n            </MyDiv>\n        </Container>\n    )\n}\n\nconst StyledCard = styled(Card)`\nwidth: 18rem;\n&:hover{\n    transform: scale(0.97); \n}\n`\n\n\nexport const GalleryView = (props)=>{\n    const data = props.location.state.data\n    // const {_id} = useParams();\n    const [deleted, setDeleted] = useState(false)\n    const history = useHistory()\n    let srcs = []\n\n    useEffect(()=>{\n        if(data) srcs = data.imgCollection.urls\n    },[data])\n\n    const handleDelete = ()=>{\n        const keys = data.imgCollection.keys\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        \n        var requestOptions = {\n            method : 'DELETE',\n            redirect: 'follow',\n            headers : myHeaders,\n            body : JSON.stringify({keys : keys})\n        };\n\n        fetch(`${url}gallery/${data._id}`,requestOptions)\n        .then(res=>res.json())\n        .then(res=>{\n            if(res.success) setDeleted(true)\n            else console.log(res)\n        })\n        .catch(err=>console.log('err',err));\n    }   \n    const handleUpdate = ()=>{\n\n    }\n\n    const handleDeleteModalClose = ()=>{\n        setDeleted(false)\n        history.push('/gallery');\n    }\n\n    return (\n        <Container>\n            {data? \n                <MyDiv breakPoint={8}>\n                    <Container containerSize=\"myContainer--small\">갤러리</Container>\n                    <ListGroup variant=\"secondary\">\n                        <ListGroup.Item variant=\"secondary\" style={{textAlign:\"center\"}}>\n                            <Row>\n                                <Col xs={9} style={{textAlign:'start'}}>\n                                    <p>{data.name}</p>\n                                </Col>\n                                <Col xs={3}>\n                                    <Row>\n                                        {checkAuth(\"\",handleDelete,handleUpdate)}\n                                    </Row>\n                                </Col>\n                            </Row>\n                        </ListGroup.Item>\n                        <ListGroup.Item style={{fontSize:\"10pt\"}}>\n                            <Row>\n                                <Col><p>Views : 10</p></Col>\n                                <Col><p>Date:{data.createdAt}</p></Col>\n                            </Row>\n                        </ListGroup.Item>\n                        <ListGroup.Item style={{textAlign:\"center\"}}>\n                            <Carousel>\n                                {srcs.map((item,i)=>{\n                                    return(\n                                        <Carousel.Item key={i}>\n                                            <img src={item} alt=\"Error\" width=\"80%\" height=\"80%\"/>\n                                        </Carousel.Item>\n                                    )\n                                })}\n                            </Carousel>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <p>{data.caption}</p>\n                        </ListGroup.Item>\n                    </ListGroup> \n                </MyDiv>\n            :null}\n            <MyModal show={deleted} handleOnClick={handleDeleteModalClose} variant='success'>\n                <p>The Post has been deleted successfully. </p>\n            </MyModal>\n        </Container>\n    )\n\n}\nconst Gallery = () =>{\n    const [showUploadModal, setShowUploadModal] = useState(false)\n    const [album, setAlbum] = useState([])\n    const [{success, fail,loading},dispatch] = useReducer(reducer,initialData)\n    const history = useHistory()\n\n    useEffect(()=>{\n        let unsubscribe = false;\n\n        const fetchData = ()=>{\n            if(unsubscribe) return;\n\n            dispatch({type:\"loading\", value:true})\n            var requestOptions = {\n                method: 'GET',\n                redirect: 'follow'\n              };\n            \n            fetch(url+'gallery',requestOptions)\n            .then(res=>res.json())\n            .then(res=>{\n                // console.log(res)\n                if(res.success){\n                    // const data = res.data;\n                    // for(let i = 0; i<data.length; i++){\n                    //     const obj = data[i];\n                    //     const imgCollection = obj.imgCollection;\n                    //     for(let j = 0; j<imgCollection.length; j++){\n                    //         const newObjct = {\n                    //             name: obj.name,\n                    //             caption: obj.caption,\n                    //             src : obj.imgCollection[j]\n                    //         }\n                    //         setAlbum([...album, newObjct])\n                    //     }\n                    // }\n                    setAlbum(res.data)\n                    dispatch({type:'success', value:true})\n                }else{\n                    dispatch({type:'fail', value:true})\n\n                }\n            })\n            .catch(e=>dispatch({type:'fail', value:true})\n            )\n            // .finally(()=>{\n            //     dispatch({type:\"loading\", value:false})\n            // })\n            \n        }\n        fetchData()\n\n        return ()=>{\n            unsubscribe = true;\n        }\n    },[])\n\n    const handleCardClick =(item)=>{\n        history.push({\n            pathname: `/gallery/view/${item._id}`,\n            state: { data: item }\n        })\n    }\n    return (\n        <Container>\n            {/* <Container containerSize=\"myContainer--medium\"> */}\n                <MyDiv breakPoint={11}>\n                    {loading? <MySpinner/> :\n                    <>  \n                        <Container containerSize=\"myContainer--small\">갤러리</Container>\n                        {user && user.admin &&                 \n                            <Button onClick={()=>history.push(`/gallery/post/${user.username}`)}>New Photos</Button>}\n                        {success && \n                            <div style={{display:'flex',flexFlow: 'row wrap' }}>\n                                {album.map((item,i)=>{\n                                    return (\n                                        <StyledCard key={i} border=\"light\" onClick={()=>handleCardClick(item)}>\n                                            <Card.Img variant=\"top\" src={item.imgCollection.urls[0]} style={{width:\"18rem\" ,height:\"300px\"}}/>\n                                            <Card.Body>\n                                                <Card.Title style={{fontSize:'14pt'}}>\n                                                    {item.name}\n                                                    {item.imgCollection.length >=2? <RiCheckboxMultipleBlankLine/> : null }\n                                                </Card.Title>\n                                                <Card.Text style={{fontSize:'10pt'}}>{item.caption}</Card.Text>\n                                            </Card.Body>\n                                            <Card.Footer style={{fontSize:'8pt'}}>\n                                                <Row>\n                                                    <Col>\n                                                        photo by : 최지예\n                                                    </Col>\n                                                    <Col>\n                                                        date : 8/21/2021\n                                                    </Col>\n                                                </Row>\n                                            </Card.Footer>\n                                        </StyledCard>\n                                    )\n                                })}\n                            </div>\n                        }   \n                        {fail && \n                            <Alert variant=\"danger\" style={{textAlign:\"center\"}}>Sorry, something is wrong..Try it again later</Alert>\n                        }\n                    </>\n                    }\n                </MyDiv>\n                {showUploadModal && \n                <div>\n                    <Button onClick={()=>setShowUploadModal(false)}>Cancel</Button>\n                    <GalleryNewPost/>\n                </div>}\n            {/* </Container> */}\n        </Container>\n    )\n};\n\nexport default Gallery;","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/pages/Login.js",[],"/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/pages/Home.js",["200","201"],"import React, { useState,useEffect } from 'react';\nimport {Carousel,Row,Col, ListGroup} from 'react-bootstrap';\nimport main2 from '../../assets/images/main2.jpg'\nimport main3 from '../../assets/images/main3.jpg'\nimport main4 from '../../assets/images/main4.jpg'\nimport main5 from '../../assets/images/main5.jpg'\nimport { UpcomingEvent } from './Events';\nimport {RiArrowRightSFill} from 'react-icons/ri';\nimport styled from 'styled-components';\nimport MyTable from '../MyTable';\nimport MyDiv from '../MyDiv';\nimport { useHistory } from 'react-router-dom';\nimport {url} from '../../services/config';\n\nconst StyledListItem = styled(ListGroup.Item)`\n    padding : 10px;\n\n    &:hover{\n        background : #6A1010;\n        color : white;\n\n    }\n`\n\nconst StyledButton = styled.button `\n    text-align : center;\n    background : gray;\n    color : white;\n    border : none;\n    width: 70%;\n    padding : 12px;\n    margin-top: 10px;\n    margin-bottom : 10px;\n    border-radius : 5px;\n\n    &:hover{\n        background : #6A1010;\n    }\n\n`\n\nconst Home = () => {\n\n    const [announcements, setAnnouncements] = useState([]);\n    const [events, setEvents] = useState([]);\n    const history = useHistory()\n    // const [isLoading, setIsLoading] = useState(false);\n\n    var requestOptions = {\n        method: 'GET',\n        redirect: 'follow'\n      };\n\n    useEffect(()=>{\n        let unsubscribe = false;\n        const fetchData = (url, setFunction) =>{\n            if(unsubscribe) return;\n            fetch(url,requestOptions)\n                .then(res=>res.json())\n                .then(res=>setFunction(res.data))\n                .catch(e=>{ \n                    console.log(e)\n                })\n            }\n\n        fetchData(url+\"notice\", setAnnouncements);\n\n        return () =>{\n            unsubscribe = true;\n        }\n    },[])\n\n    useEffect(()=>{\n        let unsubscribe = false;\n    \n        const fetchData = (url, setFunction) =>{\n            if(unsubscribe) return;\n\n            fetch(url,requestOptions)\n                .then(res=>res.json())\n                .then(res=>setFunction(res.data))\n                .catch(e=>{ \n                    console.log(e)\n                })\n        }\n        fetchData(url+\"events\", setEvents);\n\n        return () =>{\n            unsubscribe = true;\n        }\n    },[])\n\n    const items = [\n        {\n            src: main2,\n            description : \"first\",\n        },\n        {\n            src: main3,\n            description : \"second\",\n        },\n        {\n            src: main4,\n            description : \"third\",\n        },\n        {\n            src: main5,\n            description : \"fourth\"\n        }\n    ]\n    \n    const handleButtonClick = (url)=>{\n        history.push(url)\n    }\n\n    return (\n        <div style={{minHeight:\"100vh\"}}>\n            <Carousel fade>\n                {items.map((item,i)=>{\n                    return(\n                        <Carousel.Item key={i}>\n                        <img src={item.src} alt=\"main_image\" style={{\n                            width: \"100%\",\n                            height: \"500px\"}}/>\n                    </Carousel.Item>\n                    )\n                })}\n            </Carousel>\n            <div className=\"home-middle\">\n                <p>Korean Graduate Student Association</p>\n            </div>\n            <div>\n                <MyDiv breakPoint={10}>\n                    <Row className=\"justify-content-center\" style={{marginTop:\"40px\", marginBottom:\"40px\"}}>\n                        <Col md={6}>\n                            <Row className=\"justify-content-center\">\n                                <StyledButton onClick={()=>handleButtonClick(\"/about/aboutKGSA\")}>\n                                    KGSA 소개 <RiArrowRightSFill/>\n                                </StyledButton>\n                            </Row>\n                            <Row className=\"justify-content-center\">\n                                <StyledButton onClick={()=>handleButtonClick(\"/about/aboutUMass\")}>\n                                    UMass 소개 <RiArrowRightSFill/>\n                                </StyledButton>\n                            </Row>\n                        </Col>\n                        <Col md={6}>\n                            <Row className=\"justify-content-center\">\n                                <StyledButton onClick={()=>handleButtonClick(\"/about/aboutHistory\")}>\n                                    주요 연혁 <RiArrowRightSFill/>\n                                </StyledButton>\n                            </Row>\n                            <Row className=\"justify-content-center\">\n                                <StyledButton onClick={()=>handleButtonClick(\"/contact\")}>\n                                    Contact Us <RiArrowRightSFill/>\n                                </StyledButton>\n                            </Row>\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-center\" style={{marginTop:\"40px\", marginBottom:\"40px\"}}> \n                        <Col md={6}>\n                            {announcements && \n                                <ListGroup>\n                                    <StyledListItem onClick={()=>handleButtonClick(\"/announcements\")}>공지사항 <RiArrowRightSFill/></StyledListItem>\n                                    <MyTable simple={true} data={announcements} url=\"announcements\"/>\n                                </ListGroup>\n                            }                       \n                        </Col>\n                        <Col md={6}>\n                            {events && \n                                <ListGroup>\n                                    <StyledListItem onClick={()=>handleButtonClick(\"/events\")}>Upcoming Event <RiArrowRightSFill/></StyledListItem>\n                                    <UpcomingEvent simple={true} events={events}/>\n                                </ListGroup>\n                            }     \n                        </Col>\n                    </Row>\n                </MyDiv>\n            </div>\n\n        </div>\n    )\n\n}\n\nexport default Home","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/pages/UserDashboard.js",["202","203","204","205","206","207","208","209","210","211","212","213"],"import {CustomContainer as Container} from '../CustomContainer';\nimport { Row,Col, Alert,InputGroup,Form, ListGroup, Tab, Tabs} from 'react-bootstrap';\nimport {useReducer, useState ,useEffect} from 'react';\nimport '../../styles.css'\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { getUser, removeSession } from \"../../services/LoginHelper\";\nimport MyModal from \"../MyModal\";\nimport MyDiv from '../MyDiv';\nimport {StyledButton as Button} from '../Styles';\nimport AccountForm from \"../AccountForm\";\nimport {RiLockPasswordLine} from 'react-icons/ri';\nimport {BsTag, BsPencil} from 'react-icons/bs';\nimport {BiUser} from 'react-icons/bi';\nimport {AiOutlineMail} from 'react-icons/ai';\nimport {GiSmartphone} from 'react-icons/gi';\nimport { initialData, reducer } from '../../services/AlertHelper';\nimport MyTable from '../MyTable';\nimport {url} from '../../services/config';\n\nconst user = getUser();\n\nexport const MyAccount = ()=>{\n    const [authorized, setAuthorized] = useState(false);\n    const history = useHistory()\n    const [user, setUser] = useState({\n        firstname : \"\",\n        lastname : \"\",\n        username : \"\",\n        password : \"\",\n        email : \"\",\n        phone_number : null,\n        major : \"\"\n    });\n\n    const handleBackClick = ()=>{\n        history.goBack()\n    }\n    useEffect(()=>{\n        let userData = getUser();\n        setUser(userData);\n    },[])\n    return(\n        <MyDiv> \n            <Container containerSize=\"myContainer--small\">나의 계정</Container>\n            <Form>\n                <Form.Group className=\"account-form-group\">\n                    <Row>\n                        <Col>\n                            <Form.Label><BsTag/></Form.Label>\n                        </Col>\n                        <Col xs={5}>\n                            <InputGroup.Text>{user.firstname}</InputGroup.Text>\n                        </Col>\n                        <Col xs={5}>\n                            <InputGroup.Text>{user.lastname}</InputGroup.Text>\n                        </Col>\n                    </Row>\n                </Form.Group>\n                <Form.Group className=\"account-form-group\">\n                    <Row>\n                        <Col>\n                            <Form.Label><BiUser/></Form.Label>\n                        </Col>\n                        <Col xs={10}>\n                            <InputGroup.Text>{user.username}</InputGroup.Text>                   \n                        </Col>\n                    </Row>\n                </Form.Group>\n                <Form.Group className=\"account-form-group\">\n                    <Row>\n                        <Col>\n                            <Form.Label><AiOutlineMail/></Form.Label>\n                        </Col>\n                        <Col xs={10}>\n                            <InputGroup.Text>{user.email}</InputGroup.Text>\n                        </Col>\n                    </Row>\n                </Form.Group>\n                <Form.Group className=\"account-form-group\">\n                    <Row>\n                        <Col>\n                            <Form.Label><GiSmartphone/></Form.Label>\n                        </Col>\n                        <Col xs={10}>\n                            <InputGroup.Text>{user.phone_number}</InputGroup.Text>\n                        </Col>\n                    </Row>\n                </Form.Group>  \n                <Form.Group className=\"account-form-group\">\n                    <Row>\n                        <Col>\n                            <Form.Label><BsPencil/></Form.Label>\n                        </Col>\n                        <Col xs={10}>\n                            <InputGroup.Text>{user.major? user.major : \"N/A\"}</InputGroup.Text>\n                        </Col>\n                    </Row>\n                </Form.Group>      \n                <Button className=\"account-form-button\" onClick={handleBackClick}>Back</Button>\n            </Form>            \n        </MyDiv>\n    )\n\n}\n\nexport const LockAccount = ({setAuthorized})=>{\n    const [{success, fail, loading}, dispatch] = useReducer(reducer, initialData)\n\n    const history = useHistory();\n    const user = getUser()\n    const [ pw, setPw] = useState({\n        password: \"\"\n    });\n    \n    const handleChange = (e)=>{\n        if(fail) dispatch({type: \"fail\", value: false})\n        if(success) dispatch({type: \"success\", value: false})\n\n        setPw({...pw, password : e.target.value});\n    }\n    const handleSubmit = async(e)=>{\n        e.preventDefault();\n\n        dispatch({ type: \"loading\", value: true})\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        \n        var requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: JSON.stringify(pw),\n            redirect: 'follow'\n        };\n        // console.log(pw)\n        try{\n            const res = await fetch(`${url}auth/myaccount/lock/${user.username}`,requestOptions).then(res=>res.json())\n            \n            dispatch({ type:\"loading\", value:false})\n\n            if(res.success){\n                setAuthorized(true);\n                dispatch({type: \"success\", value: true})\n\n            }else{\n                dispatch({ type:\"fail\", value:true})\n            }\n        }catch(e){\n            dispatch({ type:\"fail\", value:true})\n        }\n \n    }\n    return(\n            <div style={{background:\"#4d44441e\", padding:\"50px\"}}>\n                {fail? <Alert className=\"lock-account-item alert\" variant='danger'>Invalid password.</Alert> : null}\n                <Form className=\"lock-account-form\" onSubmit={handleSubmit}>\n                    <Form.Group>\n                        <Form.Label className=\"lock-account-item\">\n                            <RiLockPasswordLine className={!fail? \"lock-account-item icon\" : \"lock-account-item icon invalid\"} />\n                        </Form.Label>\n                        <Form.Control className={!fail? \"lock-account-item control\" : \"lock-account-item control invalid\"} type=\"password\" placeholder=\"password\" onChange={handleChange} required/>\n                    </Form.Group>\n                    <Button type=\"submit\" className=\"lock-account-item\" >Submit</Button>\n                </Form>\n            </div>        \n    )\n}\n\nexport const EditAccount = ()=>{\n    const [authorized, setAuthorized ] = useState(false);\n    const user = getUser();\n\n    const updateAccount = async (user) =>{\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n\n        var requestOptions = {\n            method : 'PUT',\n            headers : myHeaders,\n            body : JSON.stringify(user),\n            redirect: 'follow'\n        };\n\n        try{\n            const result = await fetch(`${url}auth/${user.username}`,requestOptions).then(res=>res.json())\n        }catch(e){\n            console.log(e)\n        }\n\n    }\n    return (\n        <MyDiv>\n            <Container containerSize=\"myContainer--small\">Edit Account</Container>\n            {!authorized?       \n                <LockAccount setAuthorized={setAuthorized}/> \n                : \n            <>\n                <AccountForm form_disable={true} DBuser={user} fetchData={updateAccount}/>     \n            </>\n            } \n        </MyDiv>\n    )\n}\n\nexport const DeleteAccount = ()=>{\n    const [{success, fail, loading}, dispatch] = useReducer(reducer,initialData)\n\n    const user = getUser();\n\n    const history = useHistory();\n    const [selectedYes, setSelectedYes] = useState(false);\n    const [ typedCorrect, setTypedCorrect] = useState(false);\n    const [ authorized, setAuthorized ] = useState(false);\n\n    const compareString = (e)=>{\n        setTypedCorrect(\"delete\".localeCompare(e.target.value))\n    }\n\n    const deleteAccount = async ()=>{\n        dispatch({type:'loading', value :true})\n\n        const username = user.username;\n        const firstname = user.firstname;\n\n        var requestOptions = {\n            method: 'DELETE',\n            redirect: 'follow'\n          };\n          \n        try{\n            const res = await fetch(`${url}auth/${username}`, requestOptions).then(res=>res.json())\n            dispatch({type:'loading', value :false})\n            if(!res.success){\n                dispatch({type:'fail', value :true})\n            }else{\n                dispatch({type:'success', value: true})\n                const timer = setTimeout(()=>{\n                    removeSession();\n                    window.location.replace('/');\n                },3000)\n            }\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    const handleClose = ()=>{\n        removeSession();\n        window.location.replace('/');\n    }\n    return (\n        <MyDiv>\n           <Container containerSize=\"myContainer--small\">계정 삭제</Container>  \n        {!authorized? \n            <LockAccount setAuthorized={setAuthorized}/>: \n            <>\n                <ListGroup style={{textAlign:'center'}}>\n                        <ListGroup.Item>   \n                            <Alert variant=\"danger\">Do you really want to delete this account?</Alert>\n                            <Row>\n                                <Col>\n                                    <Button className=\"delete-account\" onClick={()=>history.goBack()}> Nah, Just Kidding..</Button>                    \n                                </Col>\n                                <Col>\n                                    <Button className=\"delete-account\" onClick={()=>setSelectedYes(true)}> Yes!!!</Button>\n                                </Col>\n                            </Row>\n                        </ListGroup.Item>\n                        {selectedYes? \n                        <ListGroup.Item>\n                            <InputGroup.Text>Type \"delete\"...</InputGroup.Text>\n                            <Form.Control type=\"Text\" placeholder=\"delete\" onChange={compareString}></Form.Control>\n                            <Button className=\"delete-account\" disabled={typedCorrect} onClick={deleteAccount}>Delete</Button>\n                        </ListGroup.Item>    \n                        : null}\n                    </ListGroup>\n            </>}\n            <MyModal show={success} handleOnClick={handleClose} variant='success'>\n                <p>\n                    Too sad to see you go!\n                </p> \n                <p>\n                    But we deleted your account successfully.\n                </p>\n            </MyModal>\n        </MyDiv>\n    )\n}\nexport const MyActivity = ()=>{\n    const history = useHistory();\n\n    const [marketData, setMarketData] = useState([]);\n    const [housingData, setHousingData] = useState([]);\n\n\n    useEffect(()=>{\n        var requestOptions = {\n            method : 'GET',\n            redirect : 'follow'\n        }\n\n        let unsubscribe = false;\n\n        const fetchMarketData = ()=>{\n            if(unsubscribe) return;\n\n            fetch(`${url}market/${user.username}`,requestOptions)\n            .then(res=>res.json())\n            .then(res=>setMarketData(res.data))\n            .catch(err => console.log(err))\n    \n        }\n\n        fetchMarketData();\n\n        return ()=>{\n            unsubscribe = true;\n        }\n    },[])\n\n    useEffect(()=>{\n        let unsubscribe = false;\n        var requestOptions = {\n            method : 'GET',\n            redirect : 'follow'\n        }\n        \n        const fetchHousingData = ()=>{\n            if(unsubscribe) return;\n            \n            fetch(`${url}housing/${user.username}`,requestOptions)\n            .then(res=>res.json())\n            .then(res=>setHousingData(res.data))\n            .catch(err => console.log(err))\n        }\n\n        fetchHousingData();\n\n        return ()=>{\n            unsubscribe = true;\n        }\n    },[])\n\n\n    return (\n        <MyDiv>\n            <Container containerSize=\"myContainer--small\">나의 활동</Container>\n            <Tabs defaultActiveKey=\"market\">\n                <Tab eventKey=\"market\" title=\"Market\">\n                    <MyTable simple={false} data={marketData} url=\"market\"/>\n                </Tab>\n                <Tab eventKey=\"housing\" title=\"Housing\">\n                    <MyTable simple={false} data={housingData} url=\"housing\"/>\n                </Tab>\n            </Tabs>\n        </MyDiv>\n    )\n}\n\nconst UserDashboard =() =>{\n    const {menu} = useParams()\n    const componentList = {\n        deleteAccount : DeleteAccount,\n        myAccount : MyAccount,\n        myActivity : MyActivity,\n        editAccount : EditAccount,\n    }\n    \n    const [showMenu, setShowMenu]=useState(true);\n    \n    const handleCloseMenu =()=>setShowMenu(false)\n    const toggleMenu = ()=>setShowMenu(!showMenu);\n\n    var MyComponent = componentList[menu];\n\n    return (\n        <Container>\n            <MyComponent/>\n        </Container>\n\n    )\n}\n\nexport default UserDashboard;","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/pages/Announcements.js",["214","215"],"import { useEffect, useState } from \"react\";\nimport {useHistory,useParams} from 'react-router-dom';\nimport { getUser,getToken } from '../../services/LoginHelper';\nimport { useFetch } from \"../../services/UseAPIs\";\n\nimport {Row, Col,Modal,Alert} from 'react-bootstrap';\nimport {CustomContainer as Container} from '../CustomContainer'\n\nimport Editor from '../Editor';\nimport MyTable from \"../MyTable\";\nimport MyModal from '../MyModal';\nimport MySpinner from '../MySpinner';\nimport ViewPost from '../ViewPost';\nimport Comments from '../Comments';\nimport MyDiv from \"../MyDiv\";\nimport EditPost from \"../EditPost\";\n\nimport {url} from '../../services/config';\nimport {StyledButton as Button} from '../Styles';\nimport {RiArrowGoBackFill} from 'react-icons/ri';\n\nconst user = getUser();\nconst token = getToken();\n\nexport const AnncmntEditPost = ()=>{\n\n    const {_id} = useParams();\n    let data = null;\n    const {response, isLoading, error} = useFetch(`${url}notice/posts/${_id}`)\n\n    useEffect(()=>{\n        if(response){\n            if(response.success) {\n                data = { \n                    title : response.data.title,\n                    contents : response.data.contents,\n                    username : response.data.username,\n                    keys : response.data.keys\n                }\n            }\n        }\n    },[response])\n\n    const updataData = (dataToUpdate,dispatch) =>{\n\n        var requestOptions = {\n            method : 'PUT',\n            body : dataToUpdate,\n            redirect: 'follow'\n        };\n\n        fetch(`${url}notice/edit/${_id}`,requestOptions)\n        .then(res=>res.json())\n        .then(res=>{\n            if(res.success){\n                    dispatch({type:\"success\", value:true})\n            }\n            else dispatch({type:\"fail\", value:true})\n        })\n        .catch(error => dispatch({type:\"fail\", value:true}))\n        .finally(()=>{\n            dispatch({type:\"loading\", value:false})\n        })\n    }\n    \n    return (\n        <Container >\n            <Container containerSize=\"myContainer--small\">공지 사항</Container>\n            {isLoading? <MySpinner/> :\n                <MyDiv>\n                    {response && <EditPost onSubmit={updataData} initialData={data}/>}\n                    {error? <div>{error}</div>: null}\n                </MyDiv>\n            }\n        </Container>\n    )\n}\n\nexport const AnncmntNewPost = ()=>{\n    const data = {\n        username : user.username,\n    }\n\n    const postData = (data,dispatch)=>{\n\n        var requestOptions = {\n            method: 'POST', \n            body: data,\n            redirect: 'follow'\n        };\n        fetch(url+'notice', requestOptions)\n        .then(res=>res.json())\n        .then(res=>{\n            if(res.success){\n                    dispatch({type:\"success\", value:true})\n            }\n            else dispatch({type:\"fail\", value:true})\n        })\n        .catch(error => dispatch({type:\"fail\", value:true}))\n        .finally(()=>{\n            dispatch({type:\"loading\", value:false})\n        })\n        \n    }\n\n    return (\n        <Container>\n            <MyDiv>\n                <Container containerSize=\"myContainer--small\">공지사항</Container>\n                <Editor initialData={data} onSubmit={postData}/>\n            </MyDiv>\n        </Container>)\n}\n\nexport const AnncmntPostView = (props) =>{\n\n    const { _id } = useParams(); // get id,username params\n    const [isDeleted, setIsDeleted] = useState(false);\n    const [ showConfirm, setShowConfirm] = useState(false);\n    const history = useHistory();\n    let data = null;\n    const {response} = useFetch(`${url}notice/posts/${_id}`)\n\n    \n    if(response) {\n        if(response.success)\n            data = response.data\n    }\n\n    const handleGoBack = () =>{\n        // go back to announcement page\n        history.push('/announcements');\n    }\n    \n    const handleDelete = ()=>{\n        // handle when the post delete button clicked\n        setShowConfirm(true);\n    }   \n    \n    const handleUpdate =()=>{\n        // go to the post update page \n        history.push(`/announcements/edit/${_id}/${user.username}`);\n    }\n\n    const deletePost = ()=>{\n        // delete post \n        var requestOptions = {\n            method : 'DELETE',\n            redirect: 'follow'\n        };\n        fetch(`${url}notice/${_id}/${user.username}`,requestOptions)\n        .then(res => res.json())\n        .then(() => setIsDeleted(true))\n        .catch(error => console.log('error', error));\n    }\n\n    useEffect(()=>{\n        const updateViews = ()=>{\n            // update the number of views \n    \n            var requestOptions = {\n                method : 'PUT',\n                redirect: 'follow'\n            };\n    \n            fetch(`${url}notice/views/${_id}`,requestOptions)\n            .then(res=>res.text())\n            .catch(err=>console.log('err',err));\n        }\n        updateViews();        \n    },[])\n    \n    return(\n        <Container>\n            {!data? <MySpinner/> :\n                    <MyDiv>\n                        <Container containerSize=\"myContainer--small\">공지사항</Container>\n                        <Row className=\"justify-content-between\">\n                            <Col lg={5}>\n                                <Button onClick={handleGoBack}><RiArrowGoBackFill/> Back</Button>\n                            </Col>\n                        </Row>\n                        {data &&\n                            <>\n                                <Row>\n                                    <ViewPost data={data} handleDelete={handleDelete} handleUpdate={handleUpdate}/>\n                                </Row>\n                                <Row>\n                                    <Comments forumItem=\"notice\" _id={_id}/>\n                                </Row>\n                            </>\n                        }   \n                        <Modal show={showConfirm} onHide={()=>setShowConfirm(false)}>\n                            <Modal.Header style={{background:\"#6A1010\"}} closeButton>KGSA</Modal.Header>\n                            <Modal.Body style={{textAlign:\"center\"}}>\n                                <Alert variant='danger'>Are you sure about that??</Alert>\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <Button onClick={deletePost}>Confirm</Button>\n                                <Button onClick={()=>setShowConfirm(false)}>Cancel</Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <MyModal show={isDeleted} handleOnClick={handleGoBack} variant='success'>\n                            <p>The post has been deleted successfully</p>\n                        </MyModal>\n                    </MyDiv>\n                }\n        </Container>\n\n    )\n}\n\nexport const Announcements = ({simple})=>{\n    \n    const history = useHistory();\n    const {response} = useFetch(url+\"notice\")\n    const handleNewPostClick = ()=>{\n        history.push(`/announcements/post/${token}`)\n    }\n\n    return (\n        <Container>\n            {!response? <MySpinner/>  :\n                <MyDiv>\n                    <Container containerSize='myContainer--small'>\n                        공지사항\n                    </Container>\n                    <Row>\n                        <Col xs={1}>\n                            {user && <Button margin=\"0px\" onClick={handleNewPostClick} disabled={!user.admin? true:false}>Add</Button>}\n                        </Col>\n                    </Row>\n                    <Row>\n                        {response && <MyTable simple={simple? simple : false} data={response.data} url=\"announcements\"/>}\n                    </Row>\n                </MyDiv>\n\n            }                         \n        </Container>\n    )\n}\n","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/pages/Market.js",["216","217","218","219","220","221","222","223","224","225"],"import { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Row,Modal ,Col} from \"react-bootstrap\";\nimport { CustomContainer as Container } from '../CustomContainer' ;\nimport MyTable from \"../MyTable\";\nimport MyModal from '../MyModal';\nimport MySpinner from '../MySpinner';\nimport {StyledButton as Button} from '../Styles';\nimport ViewPost from '../ViewPost';\nimport Comments from '../Comments';\nimport {RiArrowGoBackFill} from 'react-icons/ri';\nimport {getUser,getToken} from '../../services/LoginHelper';\nimport Editor from \"../Editor\";\nimport { useFetch } from \"../../services/UseAPIs\";\nimport MyDiv from \"../MyDiv\";\nimport EditPost from \"../EditPost\";\nimport {url} from '../../services/config';\n\nconst user = getUser()\n\nexport const MarketEditPost = ()=>{\n    const {_id} = useParams();\n    let data =null;\n    const {response, isLoading, error} = useFetch(`${url}market/posts/${_id}`)\n\n    useEffect(()=>{\n        if(response){\n            if(response.success) {\n                data = { \n                    title : response.data.title,\n                    contents : response.data.contents,\n                    username : response.data.username,\n                    price : response.data.price,\n                    keys : response.data.keys\n                }\n            }\n        }\n    },[response])\n\n\n    const updataData = (dataToUpdate,dispatch) =>{\n\n        var requestOptions = {\n            method : 'PUT', \n            body : dataToUpdate,\n            redirect: 'follow'\n        };\n\n        fetch(`${url}market/${_id}`,requestOptions)\n        .then(res=>res.json())\n        .then(res=>{\n            if(res.success){\n                    dispatch({type:\"success\", value:true})\n            }\n            else dispatch({type:\"fail\", value:true})\n        })\n        .catch(error => dispatch({type:\"fail\", value:true}))\n        .finally(()=>{\n            dispatch({type:\"loading\", value:false})\n        })\n    }\n    \n    return (\n        <Container>\n            <MyDiv>\n                <Container containerSize=\"myContainer--small\">벼룩시장</Container> \n                {response && <EditPost onSubmit={updataData} initialData={data} price={true}/>}\n            </MyDiv>\n        </Container>\n    )\n}\nexport const MarketNewPost = ()=>{\n\n    const postData = (data,dispatch)=>{\n        var myHeaders = new Headers();\n\n        var requestOptions = {\n            method: 'POST', \n            body: data,\n            redirect: 'follow'\n        };\n        fetch(url+'market', requestOptions)\n        .then(res=>res.json())\n        .then(res=>{\n            if(res.success){\n                    dispatch({type:\"success\", value:true})\n            }\n            else dispatch({type:\"fail\", value:true})\n        })\n        .catch(error => dispatch({type:\"fail\", value:true}))\n        .finally(()=>{\n            dispatch({type:\"loading\", value:false})\n        })\n    }\n    return(\n        <Container>\n            <MyDiv>\n                <Container containerSize=\"myContainer--small\">벼룩시장</Container>                \n                <Editor price={true} onSubmit={postData} address={true} initialData={{username:user.username}}/>\n            </MyDiv>\n        </Container>        \n    )\n}\n\nexport const MarketPostView = () =>{\n    const { _id } = useParams();\n    const [isDeleted, setIsDeleted] = useState(false);\n    const [ showConfirm, setShowConfirm] = useState(false);\n    const history = useHistory();\n    // const [data, setData] =useState();\n\n    let data = null;\n    const {response, isLoading, error} = useFetch(`${url}market/posts/${_id}`)\n    \n    useEffect(()=>{\n        if(response) {\n            if(response.success)\n                data = response.data\n        }\n    \n    },[response])\n    \n    const handleGoBack = () =>{\n        // go back to announcement page\n        // history.push('/market');\n        history.goBack();\n    }\n    \n    const handleDelete = ()=>{\n        setShowConfirm(true);\n    }   \n\n    const deletePost = ()=>{\n        var requestOptions = {\n            method : 'DELETE',\n            redirect: 'follow'\n        };\n        fetch(`${url}market/${_id}/${user.username}`,requestOptions)\n        .then(res => res.json())\n        .then(() => setIsDeleted(true))\n        .catch(error => console.log('error', error));\n    }\n    \n    const handleUpdate =()=>{\n        history.push(`/market/edit/${_id}`)\n    }\n\n    const updateViews = ()=>{\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        \n        var requestOptions = {\n            method : 'PUT',\n            redirect: 'follow'\n        };\n\n        fetch(`${url}market/views/${_id}`,requestOptions)\n        .then(res=>res.text())\n        .catch(err=>console.log('err',err));\n\n    }\n    useEffect(()=>{\n        updateViews();        \n    },[])\n\n    return(\n            <Container>\n                {!data? <MySpinner/> :\n                <MyDiv>\n                    <Container containerSize=\"myContainer--small\">벼룩시장</Container>\n                    <Row>\n                        <Col lg={5}>\n                            <Button onClick={handleGoBack}><RiArrowGoBackFill/> Back</Button>\n                        </Col>\n                    </Row>\n                    {data &&\n                        <>\n                            <Row>\n                                <ViewPost data={data} handleDelete={handleDelete} handleUpdate={handleUpdate}/>\n                            </Row>\n                            <Row>\n                                <Comments forumItem=\"market\" _id={_id}/>\n                            </Row>\n                        </>\n                    }    \n                </MyDiv>\n                }\n                <MyModal show={isDeleted} handleOnClick={handleGoBack} variant='success'>\n                    <p>The post has been deleted successfully</p>\n                </MyModal>\n                <MyModal show={showConfirm} handleOnClick={()=>setShowConfirm(false)}>\n                        <Modal.Body style={{textAlign:\"center\"}}>\n                            <p>Are you sure about that??</p>\n                            <Button margin=\"0px\" onClick={deletePost}>Confirm</Button>\n                        </Modal.Body>\n                </MyModal>                \n            </Container> \n    )\n}\n\nexport const Market = ()=>{\n    const {response, isLoading, erro } = useFetch(url+\"market\")\n    const token = getToken();\n    const history = useHistory();\n\n    const handleClick = ()=>{\n        history.push(`/market/post`)\n    }\n\n    return (\n        <Container>\n            {!response? <MySpinner/> :\n                <MyDiv>\n                    <Container containerSize=\"myContainer--small\">벼룩시장</Container>\n                    <Row>\n                        <Col>\n                            <Button onClick={handleClick} disabled={!token? true:false}>New Post</Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        {response && <MyTable simple={false} notices={response.notices} data={response.posts} url=\"market\"/>}\n                    </Row>\n                </MyDiv>\n            }\n        </Container>\n    )\n}\n\n","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/pages/Housing.js",["226","227","228","229","230","231","232","233","234"],"import { useEffect, useState } from \"react\";\nimport {Row,Col,Modal} from 'react-bootstrap';\nimport { CustomContainer as Container } from '../CustomContainer' ;\nimport MyTable from \"../MyTable\";\nimport { StyledButton as Button} from \"../Styles\";\nimport { getToken,getUser } from \"../../services/LoginHelper\";\nimport { useHistory,useParams } from \"react-router-dom\";\nimport ViewPost from '../ViewPost';\nimport Comments from '../Comments';\nimport {RiArrowGoBackFill} from 'react-icons/ri';\nimport MyModal from '../MyModal';\nimport Editor from \"../Editor\";\nimport { useFetch } from \"../../services/UseAPIs\";\nimport MySpinner from \"../MySpinner\";\nimport MyDiv from \"../MyDiv\";\nimport EditPost from \"../EditPost\";\nimport {url} from '../../services/config';\n\nconst user = getUser();\nconst token = getToken();\n\nexport const HousingEditPost = ()=>{\n    /*\n        Edit page for Hosuing.\n        When a user clicks a the user's post and edits it, \n        it fetchs data and Call Editor component by passing the orignal data and submit function.\n    */\n//    const data = \n    const {_id} = useParams();\n    let data =null;\n    const {response, isLoading, error}= useFetch(`${url}housing/posts/${_id}`)\n\n    useEffect(()=>{\n        if(response){\n            if(response.success){\n                data = { \n                    title : response.data.title,\n                    contents : response.data.contents,\n                    address : response.data.address,\n                    price : response.data.price,\n                    username : response.data.username,\n                    keys : response.data.keys\n                }\n            }\n        }\n        \n    },[response])\n\n    const updataData = (dataToUpdate,dispatch) =>{\n        \n        var requestOptions = {\n            method : 'PUT',\n            body : dataToUpdate,\n            redirect: 'follow'\n        };\n\n        fetch(`${url}housing/${_id}`,requestOptions)\n        .then(res=>res.json())\n        .then(res=>{\n            if(res.success){\n                    dispatch({type:\"success\", value:true})\n            }\n            else dispatch({type:\"fail\", value:true})\n        })\n        .catch(error => dispatch({type:\"fail\", value:true}))\n        .finally(()=>{\n            dispatch({type:\"loading\", value:false})\n        })\n    }\n    \n    return (\n        <Container>\n            <MyDiv>\n                <Container containerSize=\"myContainer--small\">하우징</Container>  \n                {response && <EditPost onSubmit={updataData} initialData={data} price={true} address={true}/>}\n            </MyDiv>\n        </Container>\n    )\n}\n\nexport const HousingNewPost = ()=>{\n    /*\n        when a user makes a new post, it call Editor as well but null initial data with user's username, and\n        submit function.\n    */\n    const postData = (data,dispatch)=>{\n\n        var requestOptions = {\n            method: 'POST', \n            body: data,\n            redirect: 'follow'\n        };\n        fetch(url+'housing', requestOptions)\n        .then(res=>res.json())\n        .then(res=>{\n            if(res.success){\n                    dispatch({type:\"success\", value:true})\n            }\n            else dispatch({type:\"fail\", value:true})\n        })\n        .catch(error => dispatch({type:\"fail\", value:true}))\n        .finally(()=>{\n            dispatch({type:\"loading\", value:false})\n        })\n        \n    }\n\n    return (\n        <Container>\n            <MyDiv>\n                <Container containerSize=\"myContainer--small\">하우징</Container>                \n                <Editor price={true} onSubmit={postData} address={true} initialData={{username:user.username}}/>\n            </MyDiv>\n        </Container>\n    )\n}\n\nexport const HousingPostView = () =>{\n    /*\n        this is a housing post view page. \n        when a user clicks a post, it fetchs data with the post id. \n    */\n    const { _id } = useParams();\n    // const data = props.location.state.data\n    let data = null;\n    const [isDeleted, setIsDeleted] = useState(false);\n    const [ showConfirm, setShowConfirm] = useState(false);\n\n    const history = useHistory();\n    const {response, isLoading, error} = useFetch(`${url}housing/posts/${_id}`)\n    \n    useEffect(()=>{\n        if(response) {\n            if(response.success)\n                data = response.data\n        }\n    },[response])\n\n    const handleDelete = ()=>{\n        setShowConfirm(true);\n    }   \n\n    const deletePost = ()=>{\n        var requestOptions = {\n            method : 'DELETE',\n            redirect: 'follow'\n        };\n        fetch(`${url}housing/${data._id}/${user.username}`,requestOptions)\n        .then(res => res.text())\n        .then((res) => {\n            setIsDeleted(true)\n        })\n        .catch(error => console.log('error', error));\n    }\n    \n    const handleUpdate =()=>{\n        history.push(`/housing/${data._id}`);\n        // history.push({\n        //     pathname: `/housing/edit/${data._id}`,\n        //     state: { data: data }\n        // })\n    }\n\n    const handleClose = ()=>{\n        history.goBack();\n    }\n    const updateViews = ()=>{\n\n        var requestOptions = {\n            method : 'PUT',\n            redirect: 'follow'\n        };\n\n        fetch(`${url}housing/views/${_id}`,requestOptions)\n        .then(res=>res.text())\n        .catch(err=>console.log('err',err));\n\n    }\n    useEffect(()=>{\n        // update the post's Views\n        updateViews();        \n    },[])\n\n    return(\n            <Container>\n                <MyDiv>\n                    {!response? <div><MySpinner/></div>   :\n                    <>\n                        <Container containerSize=\"myContainer--small\">하우징</Container>                \n                        <Row>\n                            <Col lg={5}>\n                                <Button onClick={handleClose}><RiArrowGoBackFill/> Back</Button>\n                            </Col>\n                        </Row>\n                        {data &&\n                            <>\n                                <Row>\n                                    <ViewPost data={data} handleDelete={handleDelete} handleUpdate={handleUpdate}/>\n                                </Row>\n                                <Row>\n                                    <Comments forumItem=\"housing\" _id={_id}/>\n                                </Row>\n                            </>\n                        }    \n                        <MyModal show={isDeleted} handleOnClick={handleClose} variant=\"success\">\n                            <p>The post has been deleted successfully</p>\n                        </MyModal>\n                        <MyModal show={showConfirm} handleOnClick={()=>setShowConfirm(false)}>\n                            <Modal.Body style={{textAlign:\"center\"}}>\n                                <p>Are you sure about that??</p>\n                                <Button margin=\"0px\" onClick={deletePost}>Confirm</Button>\n                            </Modal.Body>\n                        </MyModal>\n                    </>\n                }          \n                </MyDiv>\n            </Container> \n    )\n}\n\nexport const Housing = ()=>{\n    /*\n        fetch the whole housing data and pass it to MyTable.\n    */\n    const {response, isLoading, error} = useFetch(url+\"housing\")\n    const history = useHistory();\n\n    const handleClick = ()=>{\n        history.push(`/housing/post`)\n    }\n    return (\n        <Container>\n            {!response? <MySpinner/>  : \n            <MyDiv>\n                <Container containerSize=\"myContainer--small\">하우징</Container>\n                <Row>\n                    <Col>\n                        <Button onClick={handleClick} disabled={!token? true:false}>New Post</Button>\n                    </Col>\n                </Row>\n                <Row>\n                    {response && <MyTable simple={false} data={response.posts} notices={response.notices} url=\"housing\"/>}\n                </Row>\n            </MyDiv>\n            }\n        </Container>\n    )\n}\n","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/MyNavbar.js",["235"],"import {  Button, Offcanvas,Row, ListGroup } from \"react-bootstrap\"\nimport { getUser, removeSession } from \"../services/LoginHelper\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport {StyledNav as Navbar } from './Styles';\nimport { useReducer, useState } from \"react\";\nimport {GiHamburgerMenu} from 'react-icons/gi';\nimport {BiChat,BiCalendarEvent, BiPhotoAlbum } from 'react-icons/bi';\nimport {FaGraduationCap} from 'react-icons/fa';\nimport {AiOutlineSetting,AiOutlineHome,AiOutlineInfoCircle,AiOutlineNotification,AiOutlineMail} from 'react-icons/ai';\nimport {RiArrowDropDownLine,RiAdminLine,RiUserLine ,RiArrowDropUpLine} from 'react-icons/ri';\n\nimport styled from 'styled-components';\nimport { useHistory } from \"react-router-dom\";\n\nimport umass_logo from '../assets/images/UMassAmherst_horiz.png'\n\nconst StyledSubButton = styled.button`\n    text-align: center;\n    width: 50%;\n    border : none;\n    color : white;\n    background-color : #6A1010;\n    height : 7vh;\n    font-size: 12pt;\n\n    &:hover{\n        background-color : gray;\n        border-radius : 6px;\n    }\n`\n\nconst StyledButton = styled.button`\n    text-align: start;\n    padding :10px;\n    width: 100%;\n    border : none;\n    color : white;\n    background-color : #6A1010;\n    height : 7vh;\n    font-size: 13pt;\n\n    &:hover{\n        background-color : gray;\n        border-radius : 6px;\n\n    }\n`\nconst StyledSettingButton = styled.button`\n    text-align: center;\n    border : none;\n    color : white;\n    background-color : #6A1010;\n    height : 7vh;\n    font-size: 20pt;\n    margin-left: 10px;\n    margin-right: 10px;\n\n    &:hover{\n        color : black;\n    }\n`\nconst StyledP = styled.p`\n    font-size : ${props=>props.fontSize? props.fontSize : null};\n    color : white;\n    margin : 10px;\n    &:hover{\n        color : black;\n    }\n`\n\nconst user = getUser();\n\nconst MyNavbar = ()=>{\n    const reducer = (state, action) =>{\n        switch (action.type) {\n            case 'userDashboard' :\n                return {...state, userDashboard:action.value}\n            case 'home':\n                return {...state, home:action.value}\n            case 'about':\n                return { ...state, about: action.value}\n            case 'anncmnt':\n                return { ...state, anncmnt: action.value}     \n            case 'forum' :\n                return { ...state, forum: action.value}  \n            case 'event' :\n                return { ...state, event: action.value}  \n            case 'gallery' :\n                return { ...state, gallery: action.value}  \n            case 'contact' :\n                return { ...state, contact: action.value}   \n            case 'openedAll':\n                return { ...state, openedAll : action.value}                    \n            default:\n                return state;\n        }\n    }\n    const [{about,anncmnt,forum,event,gallery,contact,userDashboard,openedAll}, dispatch] = useReducer(reducer,{\n        home : false,\n        about : false,\n        anncmnt : false,\n        forum : false,\n        event : false,\n        gallery : false,\n        contact :false,\n        userDashboard :false,\n        openedAll : false\n    })\n    const [showMenu, setShowMenu] = useState(false)\n    const handlOnClose  = ()=>setShowMenu(false)\n    const handleClick = ()=>setShowMenu(!showMenu)\n\n    const handleOpenAllMenu = ()=>{\n        \n        dispatch({type:'about', value:!openedAll})\n        dispatch({type:'anncmnt', value:!openedAll})\n        dispatch({type:'forum', value:!openedAll})\n        dispatch({type:'event', value:!openedAll})\n        dispatch({type:'gallery', value:!openedAll})\n        dispatch({type:'contact', value:!openedAll})\n        dispatch({type:'openedAll', value:!openedAll})\n    \n    }\n    const handleCloseAllMenu = ()=>{\n        dispatch({type:'userDashboard', value:false})\n        dispatch({type:'about', value:false})\n        dispatch({type:'anncmnt', value:false})\n        dispatch({type:'forum', value:false})\n        dispatch({type:'event', value:false})\n        dispatch({type:'gallery', value:false})\n        dispatch({type:'contact', value:false})\n    }\n    \n    const history = useHistory();\n\n    const handleLikedButtonClick = (link) =>{\n        history.push(link);\n        handleCloseAllMenu();\n        handlOnClose();\n    }\n    const renderLogin =()=>{\n        return (\n                <div>\n                    <Button variant=\"secondary\" onClick={()=>history.push('/login')}>Login</Button>         \n                    <StyledP onClick={()=>history.push('/signup')}>Sign up</StyledP>\n                </div>\n        )\n    }\n    return (\n        <Navbar>\n            <StyledSettingButton onClick={handleClick}><GiHamburgerMenu/></StyledSettingButton>\n            <StyledP fontSize=\"20pt\" onClick={()=>handleLikedButtonClick(\"/\")}><FaGraduationCap/> UMass Amherst KGSA</StyledP>\n            <Offcanvas style={{background:\"#6A1010\"}} show={showMenu} onHide={handlOnClose} scroll={true} backdrop={true}>\n                <Offcanvas.Header style={{color:\"white\", textAlign:\"center\"}} closeButton>\n                    <StyledSettingButton onClick={handleClick}><GiHamburgerMenu/></StyledSettingButton>\n                    <StyledP fontSize=\"20pt\" onClick={()=>handleLikedButtonClick(\"/\")}><FaGraduationCap/> KGSA</StyledP>\n                </Offcanvas.Header>\n                <Offcanvas.Body>\n                    <div style={{textAlign:\"center\", color:\"white\"}}>\n                        {user?\n                        <div className=\"justify-content-center\">\n                            <h1 style={{fontSize:\"30pt\"}} >{user.admin? <RiAdminLine/> : <RiUserLine/>}</h1>\n                            <Row className=\"justify-content-center\"> \n                                {user.admin? <p>Admin</p> : <p>Member</p>}\n                                <h5>{user.username}</h5> \n                                <StyledP\n                                    onClick={()=>dispatch({type:'userDashboard', value:!userDashboard})}\n                                >\n                                <AiOutlineSetting/>\n                                </StyledP>\n                                {userDashboard &&\n                                <div>\n                                    {/* <Button variant=\"secondary\" onClick={()=>dispatch({type:'userDashboard',value:!userDashboard})}>\n                                        User Dashboard\n                                    </Button> */}\n                                    {userDashboard && \n                                    <div>\n                                        <StyledP onClick={()=>handleLikedButtonClick(`/userdashboard/myAccount`)}>My Account</StyledP>\n                                        <StyledP onClick={()=>handleLikedButtonClick(`/userdashboard/myActivity`)}>My Activity</StyledP>\n                                        <StyledP onClick={()=>handleLikedButtonClick(`/userdashboard/editAccount`)}>Edit Account</StyledP>\n                                        <StyledP onClick={()=>handleLikedButtonClick(`/userdashboard/deleteAccount`)}>Delete Account</StyledP>\n                                    </div>\n                                    }\n                                    <Button variant='secondary' onClick={()=>removeSession()}>\n                                        Log Out\n                                    </Button> \n                                </div>                             \n                                }\n                            </Row>\n                        </div>\n                        : renderLogin()}\n                      <hr style={{borderTop: \"3px solid\"}}/>\n                    </div>\n                    <ListGroup variant=\"flush\">\n                        <StyledButton onClick={handleOpenAllMenu}>\n                            {!openedAll? <RiArrowDropDownLine/> : <RiArrowDropUpLine/>} 펼쳐보기\n                        </StyledButton>\n                        <StyledButton onClick={()=>handleLikedButtonClick(\"/\")}>\n                            <AiOutlineHome/> Home\n                        </StyledButton> \n                        <hr style={{borderTop: \"1px solid\"}}/>\n                        <StyledButton onClick={()=>dispatch({type:'about', value:!about})}>\n                            <AiOutlineInfoCircle/> About {!about? <RiArrowDropDownLine/> : <RiArrowDropUpLine/>}\n                        </StyledButton>\n                        {about && \n                            <Row>\n                                <ListGroup variant='flush'>\n                                    <StyledSubButton onClick={()=>handleLikedButtonClick(\"/about/aboutKGSA\")}>\n                                        KGSA 소개\n                                    </StyledSubButton>\n                                    <StyledSubButton onClick={()=>handleLikedButtonClick(\"/about/aboutUMass\")}>\n                                        UMass 소개\n                                    </StyledSubButton>\n                                    <StyledSubButton onClick={()=>handleLikedButtonClick(\"/about/aboutHistory\")}>\n                                        주요 연혁\n                                    </StyledSubButton>                                \n                                </ListGroup>\n                            </Row>\n                        }\n                        <hr style={{borderTop: \"1px solid\"}}/>\n                        <StyledButton onClick={()=>dispatch({type:'anncmnt', value:!anncmnt})}>\n                            <AiOutlineNotification/> 공지사항 {!anncmnt? <RiArrowDropDownLine/> : <RiArrowDropUpLine/>}\n                        </StyledButton>\n                        {anncmnt && \n                            <Row>\n                                <ListGroup variant='flush'>\n                                    <StyledSubButton onClick={()=>handleLikedButtonClick(\"/announcements\")}>\n                                        공지사항\n                                    </StyledSubButton>                               \n                                </ListGroup>\n                            </Row>\n                        }\n                        <hr style={{borderTop: \"1px solid\"}}/>\n                        <StyledButton onClick={()=>dispatch({type:'forum', value:!forum})}>\n                            <BiChat/> 게시판 {!forum? <RiArrowDropDownLine/> : <RiArrowDropUpLine/>}\n                        </StyledButton>\n                        {forum && \n                            <Row>\n                                <ListGroup variant='flush'>\n                                    <StyledSubButton onClick={()=>handleLikedButtonClick(\"/market\")}>\n                                        벼룩시장\n                                    </StyledSubButton>\n                                    <StyledSubButton onClick={()=>handleLikedButtonClick(\"/housing\")}>\n                                        하우징\n                                    </StyledSubButton>\n                                    <StyledSubButton onClick={()=>handleLikedButtonClick(\"/resources\")}>\n                                        정보\n                                    </StyledSubButton>                                \n                                </ListGroup>\n                            </Row>\n                        }\n                        <hr style={{borderTop: \"1px solid\"}}/>\n                        <StyledButton onClick={()=>dispatch({type:'event', value:!event})}>\n                            <BiCalendarEvent/> 주요 일정 {!event? <RiArrowDropDownLine/> : <RiArrowDropUpLine/>}\n                        </StyledButton>\n                        {event && \n                            <Row>\n                                <ListGroup variant='flush'>\n                                    <StyledSubButton onClick={()=>handleLikedButtonClick(\"/events\")}>\n                                        Upcoming Events\n                                    </StyledSubButton>\n                                    <StyledSubButton onClick={()=>handleLikedButtonClick(\"/events\")}>\n                                        행사 달력\n                                    </StyledSubButton>                            \n                                </ListGroup>\n                            </Row>\n                        }\n                        <hr style={{borderTop: \"1px solid\"}}/>\n                        <StyledButton onClick={()=>dispatch({type:'gallery', value:!gallery})}>\n                            <BiPhotoAlbum/> 갤러리 {!gallery? <RiArrowDropDownLine/> : <RiArrowDropUpLine/>}\n                        </StyledButton>\n                        {gallery && \n                            <Row>\n                                <ListGroup variant='flush'>\n                                    <StyledSubButton onClick={()=>handleLikedButtonClick(\"/gallery\")}>\n                                        갤러리\n                                    </StyledSubButton>\n                                </ListGroup>\n                            </Row>\n                        }\n                        <hr style={{borderTop: \"1px solid\"}}/>\n                        <StyledButton onClick={()=>dispatch({type:'contact', value:!contact})}>\n                            <AiOutlineMail/> Contact {!contact? <RiArrowDropDownLine/> : <RiArrowDropUpLine/>}\n                        </StyledButton>\n                        {contact && \n                            <Row>\n                                <ListGroup variant='flush'>\n                                    <StyledSubButton onClick={()=>handleLikedButtonClick(\"/contact\")}>\n                                        Contact\n                                    </StyledSubButton>                          \n                                </ListGroup>\n                            </Row>\n                        }\n                    </ListGroup>\n                </Offcanvas.Body>\n            </Offcanvas>   \n        </Navbar>\n    )\n}\nexport default MyNavbar","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/pages/Resources.js",[],"/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/Routes/PublicRoutes.js",["236"],"import { Route,Redirect} from \"react-router-dom\";\n\nconst PublicRoutes = ({component: Component,...rest})=>{\n\n    return(\n        <Route\n        {...rest}\n        render={props =>(\n            <Component {...props}/>\n        )}/>\n    )\n\n}\n\nexport default PublicRoutes;","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/Routes/PrivateRoutes.js",[],"/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/Routes/AdminRoutes.js",[],"/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/services/ScrollToTop.js",["237"],"import { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nconst ScrollToTop = ({ history })=>{\n  useEffect(() => {\n    const unlisten = history.listen(() => {\n      window.scrollTo(0, 0);\n    });\n    return () => {\n      unlisten();\n    }\n  }, []);\n\n  return (null);\n}\n\nexport default withRouter(ScrollToTop);","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/CustomContainer.js",["238"],"import React from 'react';\nimport { Container} from 'react-bootstrap';\nimport '../styles.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst SIZE = ['myContainer--small','myContainer--medium','myContainer--large']\n\nexport const CustomContainer = ({\n    children,\n    containerSize,\n}) => {\n    const checkContainerSize = SIZE.includes(containerSize) ? containerSize : 'myContainer--large';\n\n    return (\n        <div className={`myContainer ${checkContainerSize}`}>{children}</div>\n    )\n}\n\n","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/services/LoginHelper.js",[],"/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/services/UseAPIs.js",["239"],"import {useState, useEffect} from 'react'\n\nexport const useFetch = (url) =>{\n    const [response, setResponse] = useState();\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    \n    useEffect(()=>{\n\n        let unsubscribe  = false;\n\n        var requestOptions = {\n            method: 'GET',\n            redirect: 'follow'\n          };\n          \n        const fetchData = () =>{\n            if(unsubscribe) return;\n            setIsLoading(true);\n            fetch(url,requestOptions)\n                .then(res=>res.json())\n                .then(res=>setResponse(res))\n                .then(setIsLoading(false))\n                .catch(e=>{ \n                    // console.log(e)\n                    setError(e);\n                    setIsLoading(false)\n                })\n        }\n\n        fetchData();\n\n        return () =>{\n            unsubscribe = true;\n        }\n    },[])\n\n    return {response,isLoading,error};\n}   \n\n\n","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/MyDiv.js",[],"/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/MySpinner.js",["240"],"import {Spinner,Container} from 'react-bootstrap';\n\nconst MySpinner = () =>{\n   return (<div style={{textAlign:\"center\", marginTop:\"100px\"}}>\n        <Spinner animation=\"border\" variant=\"secondary\" />\n        <p>Loading...</p>\n   </div>)\n}\n\nexport default MySpinner;","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/Styles.js",["241"],"import styled from \"styled-components\"\nimport {Button, ListGroup, Navbar,Nav} from 'react-bootstrap';\n\nvar primary = \"#6A1010\";\nvar secondary = \"#4d4444e1\";\nvar highlight = \"#4d444\";\n\nexport const StyledTitle = styled.div`\n    min-height: 25vh;\n    background-image: url(\"./assets/images/korea.jpg\");\n    background-size: cover;\n    box-shadow: inset 0 0 0 2000px rgba(106,16,16,0.4);\n    text-align: center;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: #efefef;\n    font-size:5vh;\n\n`\n\nexport const StyledButton = styled(Button)`\n    \n    color :  white;\n    background-color : ${primary}; \n    border : none;\n    margin-top: 10px;\n    margin-bottom :10px;\n    float : ${prop=>prop.float};\n\n    &:hover{\n        background-color : ${secondary};\n        color : white;\n    }\n`;\n\n\nexport const StyledListItem = styled(ListGroup.Item)`\n    text-align: center;\n    background-color : ${secondary};\n    color : white;\n    font-size: 12pt;\n\n    &:hover{\n        background-color : ${primary};\n        color : white;\n        border : none;\n    }\n\n    &:active{\n        background-color : ${secondary};\n    }\n\n`;\n\n\nexport const StyledNav = styled(Navbar)`\n    background-color : ${primary};\n    color : white;\n`;\n\nexport const StyledNavCollapse = styled(Navbar.Collapse)`\n    background-color : ${primary};\n    color : white;\n`;\n\nexport const StyledNavLink = styled(Nav.Link)`\n    color : white;\n`;\n\n","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/CustomPagination.js",["242"],"import React, {useState} from 'react';\nimport {Pagination, Container} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst pageContainerStyle={\n    display: \"flex\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    margin: \"10px\"\n}\nconst CustomPagination = ({postsPerPage, totalPosts,paginate}) => {\n\n    const countePagination = Math.ceil(totalPosts/postsPerPage);\n    const items = [];\n    const [ currentPage, setCurrentPage ] = useState(1);\n\n    const handleClick= (i)=>{\n        if(i >= 1 && i <= countePagination) {\n            setCurrentPage(i);\n            paginate(i);\n        }\n    }\n    for(let i=1; i < countePagination+1; i++){\n        items.push(\n            <Pagination.Item key={i} active={i==currentPage} activeLabel=\"\" onClick={()=>{ setCurrentPage(i); paginate(i)} }>\n                {i}\n            </Pagination.Item>\n        );\n    }\n\n    return (\n        <Container style={pageContainerStyle}>\n            <Pagination size='sm'>\n                <Pagination.Prev onClick={()=>handleClick(currentPage-1)}/>\n                {items}\n                <Pagination.Next onClick={()=>handleClick(currentPage+1)}/>\n            </Pagination>\n        </Container>\n    )\n}\n\nexport default CustomPagination;","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/MyModal.js",["243"],"import {Modal,Alert} from 'react-bootstrap';\nimport {StyledButton as Button} from './Styles';\n\nconst ModalHeaderStyle = {\n    background : '#6A1010',\n    color : '#fff'\n}\n\nconst MyModal = (props) =>{\n    /**\n     * props :\n        * variant : to decide alert variant\n        * closeButton : if it true, the modal has close button \n        * handleOnClick : handle click close or close button \n        * show : when the modal shows \n     * \n     */\n\n    var variant = props.variant? props.variant : 'primary';\n    var onHide = props.handleOnClick? props.handleOnClick : ()=>{}\n    var disableClose\n    if(props.disableClose== undefined || props.disableClose) disableClose = true\n    else disableClose = false\n\n    return (\n    <Modal show={props.show} onHide={onHide}>\n        <Modal.Header closeButton={disableClose} style={ModalHeaderStyle}>\n            KGSA \n        </Modal.Header>\n        <Modal.Body style={{textAlign:\"center\"}}>\n            <Alert variant={variant}>\n                {/* <p><AiOutlineNotification/></p> */}\n                {props.children}\n            </Alert>\n        </Modal.Body>\n        {disableClose?\n            <Modal.Footer>\n                <Button margin=\"0px\" onClick={props.handleOnClick}>Close</Button>\n            </Modal.Footer> : null\n        }\n    </Modal>\n    )\n}\n\nexport default MyModal;","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/services/config.js",[],"/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/services/AlertHelper.js",[],"/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/AccountForm.js",["244","245","246","247","248","249","250","251","252","253","254"],"import {useState, useReducer} from 'react';\nimport { useHistory } from 'react-router';\nimport {Row,Col, Form, Alert} from 'react-bootstrap';\nimport {BsTag, BsPencil} from 'react-icons/bs';\nimport {BiUser} from 'react-icons/bi';\nimport {RiLockPasswordLine} from 'react-icons/ri';\nimport {AiOutlineMail} from 'react-icons/ai';\nimport {GiSmartphone} from 'react-icons/gi';\nimport {FcCheckmark,FcCancel} from 'react-icons/fc';\nimport {StyledButton as Button} from './Styles';\nimport MyModal from './MyModal';\nimport {url} from '../services/config';\n\nconst reducer = (state,action) =>{\n    switch(action.type){\n        case \"pw_length\" :\n            return { ...state, pw_length : action.value };\n        case \"pw_lower\" : \n            return { ...state, pw_lower : action.value};\n        case \"pw_upper\" : \n            return { ...state, pw_upper : action.value};\n        case \"pw_special\" :\n            return { ...state, pw_special : action.value};\n        case \"pw_match\" :\n            return { ...state, pw_match : action.value};      \n        case \"valid_username\" :\n            return { ...state, valid_username : action.value};             \n        default :\n            return state;\n    }\n}\n\nconst AccountForm = ({form_disable,DBuser,fetchData})=>{\n    const [{ pw_length, pw_lower, pw_upper, pw_special, pw_match, valid_username}, dispatch ] = useReducer(reducer, {\n        pw_length : false, // at least 8 characters\n        pw_lower : false,\n        pw_upper : false,\n        pw_special : false,\n        pw_match : false,\n        valid_username : form_disable? true: false,\n    })\n\n    const [user, setUser] = useState(DBuser);\n    const history = useHistory();\n    const [ success, setSuccess ]= useState(false);\n    const [ failed, setFailed ] = useState(\"\");\n    const [ inputKey, setInputKey] = useState(\"form\");\n    const [ showAlert, setShowAlert] = useState(false);\n    const [ showChangePw, setShowChangePw] = useState(false);\n\n    const handleChange = (e)=>{\n        var value = e.target.value; \n        if(e.target.name == 'firstname' || e.target.name == 'lastname') \n            value = value.toUpperCase();\n   \n        setUser({\n            ...user, [e.target.name] : e.target.value\n        });\n    }\n\n    const handleUsernameChange = (e)=>{\n        if (valid_username) {\n            dispatch({type:\"valid_username\", value: false})\n        }\n\n        setUser({\n            ...user, [e.target.name] : e.target.value\n        });\n    }\n\n    const handlePasswordChange = (e)=>{\n        if(pw_match){\n            dispatch({type:\"pw_match\", value: false})\n        }\n        var value = e.target.value;\n        checkPasswordValidity(value)\n        setUser({\n            ...user, [e.target.name] : e.target.value\n        }); \n\n    }\n    const handleSubmit = async (e)=>{\n        e.preventDefault();\n        // console.log(user)\n        if(pw_length && pw_lower && pw_upper && pw_special && pw_match && valid_username){\n            fetchData(user);\n        }else{\n            setShowAlert(true);\n        }\n\n    }\n\n    const checkPasswordValidity = (value)=>{\n        // var minimum = /?=.{8,}/;\n    \n        var uppercase = /(?=.*[A-Z])/;\n        var lowercase = /(?=.*[a-z])/;\n        var special_char = /(?=.*[!@#$%^&*])/;\n\n        if(value.length >= 8) dispatch({type: \"pw_length\", value : true });\n        else dispatch({type: \"pw_length\", value : false });\n\n        if(lowercase.test(value)) dispatch({type:\"pw_lower\", value : true });\n        else dispatch({type: \"pw_lower\", value : false });\n\n        if(uppercase.test(value)) dispatch({type:\"pw_upper\", value : true });\n        else dispatch({type: \"pw_upper\", value : false });\n\n        if(special_char.test(value)) dispatch({type: \"pw_special\", value : true });\n        else dispatch({type: \"pw_special\", value : false });\n    }\n\n    const comparePasswords = (e) =>{\n        var pw = user.password;\n        var val = e.target.value;\n        dispatch({type: \"pw_match\", value : !pw.localeCompare(e.target.value)});\n    }\n    \n    const verifyUsername = async (e)=>{\n        e.preventDefault();\n        var requestOptions = {\n            method: 'GET',\n            redirect: 'follow'\n          };\n        \n        fetch(`${url}signup/${user.username}`,requestOptions)\n        .then(res=>res.json())\n        .then(res =>{\n            if(res.data.length>0){\n                dispatch({type: \"valid_username\", value : false });\n            }else{\n                dispatch({type: \"valid_username\", value : true });\n            }\n        })\n        \n    }\n\n    // const resetForm = ()=>{\n    //     var date = Date.now().toString()\n    //     setInputKey(date);\n    //     setSuccess(false);\n    //     setFailed(false);\n    // }\n\n    \n    return (\n            <Form onSubmit={handleSubmit} key={inputKey}>\n                <Form.Group className=\"account-form-group\">\n                    <Row className=\"justify-content-center\">\n                        <Col sm={2} style={colStyle}>\n                            <Form.Label><BsTag/></Form.Label>\n                        </Col>\n                        <Col sm={5} style={colStyle}>\n                            <Form.Control \n                                style={signupFormControl} \n                                type=\"text\" \n                                name=\"firstname\" \n                                placeholder={user.firstname? user.firstname :\"First name*\"}\n                                onChange={handleChange} \n                                defaultValue={user.firstname}\n                                required/>\n                        </Col>\n                        <Col sm={5} style={colStyle}>\n                            <Form.Control \n                                style={signupFormControl} \n                                type=\"text\" \n                                name=\"lastname\" \n                                placeholder={user.lastname? user.lastname : \"Last name*\"}\n                                onChange={handleChange} \n                                defaultValue={user.lastname}\n                                required/>\n                        </Col>\n                    </Row>\n                </Form.Group>\n                <Form.Group className=\"account-form-group\">\n                    <Row className=\"justify-content-center\">\n                        <Col sm={2} style={colStyle}>\n                            <Form.Label><BiUser/></Form.Label>\n                        </Col>\n                        <Col sm={5} style={colStyle}>\n                            <Form.Control \n                                disabled={form_disable} \n                                style={signupFormControl} \n                                type=\"text\" \n                                name=\"username\" \n                                placeholder={user.username? user.username :\"Username*\"}\n                                onChange={handleUsernameChange} \n                                defaultValue={user.username}\n                                required/>                        \n                        </Col>\n                        {!form_disable?\n                            <>\n                                <Col sm={3} style={colStyle}>\n                                    <Button onClick={verifyUsername} margin=\"0px\">Verify</Button>       \n                                </Col>     \n                                <Col sm={2} style={colStyle}> \n                                    {valid_username? <FcCheckmark/> : <FcCancel/>}             \n                                </Col>\n                            </>: <Col sm={5}></Col>}\n                    </Row>\n                </Form.Group>\n                    <>\n                        <Form.Group className=\"account-form-group\">                                          \n                            <Row className=\"justify-content-center\">\n                                <Col sm={2} style={colStyle}>\n                                    <Form.Label><RiLockPasswordLine/></Form.Label>\n                                </Col>\n                                <Col sm={10} style={colStyle}>\n                                    <Form.Control \n                                        style={signupFormControl} \n                                        type=\"password\" \n                                        name=\"password\" \n                                        placeholder=\"Password*\" \n                                        onChange={handlePasswordChange} \n                                        required/>                            \n                                </Col>\n                            </Row>\n                        </Form.Group>\n                        <Form.Group className=\"account-form-group\">\n                            <Row className=\"justify-content-center\">\n                                <Col sm={2} style={colStyle}>\n                                    <Form.Label><RiLockPasswordLine/></Form.Label>\n                                </Col>                            \n                                <Col sm={10} style={colStyle}>\n                                    <Form.Control \n                                        style={signupFormControl} \n                                        type=\"password\" \n                                        name=\"passwordconfirm\" \n                                        placeholder=\"Confirm Password*\" \n                                        onChange={comparePasswords} \n                                        required/>                            \n                                </Col>\n                            </Row>    \n                            <Row className=\"justify-content-center\">\n                                <Col sm={12} style={colStyle}>\n                                    <Alert variant={pw_length && pw_lower && pw_upper && pw_special && pw_match? \"success\" : \"danger\"} className=\"account-password-alert\">\n                                        <p className=\"account-password-condition\">{pw_length? <FcCheckmark/>: <FcCancel/>} Minimum 8 character</p>\n                                        <p className=\"account-password-condition\">{pw_upper? <FcCheckmark/>: <FcCancel/>} A uppercase letter</p>\n                                        <p className=\"account-password-condition\">{pw_lower? <FcCheckmark/>: <FcCancel/>} A lowercase letter</p>\n                                        <p className=\"account-password-condition\">{pw_special? <FcCheckmark/>: <FcCancel/>} A special character</p>\n                                        <p className=\"account-password-condition\">{pw_match? <FcCheckmark/>: <FcCancel/>}Passwords match </p>\n                                    </Alert>\n                                </Col>\n                            </Row>                     \n                        </Form.Group>\n                    </>\n                <Form.Group className=\"account-form-group\">\n                    <Row className=\"justify-content-center\">\n                        <Col sm={2} style={colStyle}>\n                            <Form.Label><AiOutlineMail/></Form.Label>\n                        </Col>\n                        <Col sm={10} style={colStyle}>\n                            <Form.Control \n                                style={signupFormControl} \n                                type=\"email\" \n                                name=\"email\" \n                                placeholder={user.email? user.email: \"Email*\" }\n                                onChange={handleChange} \n                                defaultValue={user.email}\n                                required/>\n                        </Col>\n                    </Row>\n                </Form.Group>\n                <Form.Group className=\"account-form-group\">\n                    <Row className=\"justify-content-center\">\n                        <Col sm={2} style={colStyle}>\n                            <Form.Label><GiSmartphone/></Form.Label>\n                        </Col>\n                        <Col sm={10} style={colStyle}>\n                            <Form.Control \n                                style={signupFormControl} \n                                type=\"type\" \n                                name=\"phone_number\" \n                                placeholder= {user.phone_number? user.phone_number :\"Phone Number*\" }\n                                onChange={handleChange} \n                                defaultValue={user.phone_number}\n                                required/>\n                        </Col>\n                    </Row>\n                </Form.Group>  \n                <Form.Group className=\"account-form-group\">\n                    <Row className=\"justify-content-center\">\n                        <Col sm={2} style={colStyle}>\n                            <Form.Label><BsPencil/></Form.Label>\n                        </Col>\n                        <Col sm={10} style={colStyle}>\n                            <Form.Control \n                                style={signupFormControl} \n                                type=\"text\" \n                                name=\"major\" \n                                placeholder={user.major? user.major: \"Major\"}\n                                defaultValue={user.major}\n                                onChange={handleChange}/>\n                        </Col>\n                    </Row>\n                </Form.Group>\n                <Row className=\"justify-content-center\">\n                    <Col style={colStyle}>\n                    <Button type=\"submit\" float=\"right\">Submit</Button>\n                    {!form_disable ?<Button float=\"right\" onClick={()=>{history.push('/login')}}>Cancel</Button>  : null}                  \n                    </Col>      \n                </Row>    \n                <MyModal show={showAlert} variant='danger' handleOnClick={()=>{setShowAlert(false)}}><p>Please satisfy the requirement before submission..</p></MyModal>    \n            </Form>\n    )\n}\n\nconst signupFormControl = {\n    borderRadius:\"10px\"\n }\n\n const colStyle ={\n    display : 'flex', \n    justifyContent:'center',\n    marginBottom : '5px'\n }\n \nexport default AccountForm;","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/AuthButtons.js",["255","256","257","258","259"],"import { Col,Button } from \"react-bootstrap\";\nimport {RiEditLine, RiDeleteBin2Line} from 'react-icons/ri';\nimport {getToken, getUser} from '../services/LoginHelper';\nimport styled from 'styled-components';\n\nconst user = getUser();\nconst StyledP = styled.p`\n    color : black;\n    font-size : 13pt;\n    margin:0px;\n    &:hover{\n        color : red;\n    }\n`\n\nexport const checkAuth = (postUsername,handleDelete,handleUpdate)=>{\n    var Buttons = null\n\n    if (getToken() && (!user.username.localeCompare(postUsername)) || getToken() && user.admin){\n        Buttons = (\n            <Col>\n                <StyledP onClick={handleDelete} style={{marginLeft:'10px', float:\"right\"}}><RiDeleteBin2Line/></StyledP>\n                <StyledP onClick={handleUpdate} style={{marginRight:'10px',float:\"right\"}}><RiEditLine/></StyledP>\n            </Col>\n    )}\n    return Buttons;\n}","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/MyTable.js",["260","261","262","263","264","265"],"import React, {useState} from 'react';\nimport {ListGroup, Col,Row} from 'react-bootstrap';\nimport {useHistory} from 'react-router-dom';\nimport CustomPagination from './CustomPagination';\nimport '../styles.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport {getToken, getUser} from '../services/LoginHelper';\nimport {GrView} from 'react-icons/gr';\nimport {BiCommentDetail} from 'react-icons/bi';\nimport {BsCardList} from 'react-icons/bs';\nimport {AiOutlineUser,AiFillNotification} from 'react-icons/ai';\nimport {MdInsertPhoto} from 'react-icons/md';\n\nimport styled from 'styled-components';\n\n\nconst StyledListItem = styled(ListGroup.Item)`\n    background : ${prop=>prop.pinned? '#6a101021': null};\n    padding-left : 40px;\n    &:hover{\n        background: #cecece;\n    }\n`\n\nconst colStyle = {\n    fontSize:\"10pt\"\n}\n\nconst divStyle ={\n    maxWidth:\"100vh\"\n}\n\nconst listStlye ={\n    borderRadius:\"5px\"\n}\n\nconst MyTable = ({simple, data,url, notices}) => {\n    /**\n     * Props :\n        * simple : if it is true, no pagination needed\n        * data : posts \n        * notices : pinned posts\n        * url : for API calls to backend\n     */\n    const token = getToken();\n    const user = getUser();\n    \n    const [ currentPage, setCurrentPage] = useState(1);\n    const postsPerPage = 8;\n    const [selectedAll, setSelectedAll] = useState(false);\n\n    const endOfPage = currentPage * postsPerPage;\n    const startOfPage = endOfPage - postsPerPage;\n    const currentPosts = (data)=>{\n        if(simple) return data.slice(0,3);\n        return data.slice(startOfPage,endOfPage);\n    }\n\n    const history = useHistory();\n\n    const handleClick = (item)=>{ \n        history.push({\n            pathname: `/${url}/view/${item._id}`,\n            state: { data: item }\n        })\n    }\n\n    // const handleSelectAll= (e)=>{\n    //     setSelectedAll(!selectedAll);\n    // }\n    \n    const parseTime = (time)=>{\n        return time.substr(0,5)\n    }\n\n    return (\n        <>\n        <div>\n            <ListGroup>\n                {!simple&&\n                    <StyledListItem variant=\"secondary\">\n                        <BsCardList/>\n                    </StyledListItem>\n                }\n                {notices? notices.map((item,i)=>{\n                    return(\n                        <StyledListItem key={i} onClick={()=>handleClick(item)} pinned=\"true\">\n                        <Row>\n                            <Col sm={7}>\n                                <Row>\n                                    <h5><AiFillNotification/> {item.title} {item.keys.length? <MdInsertPhoto/> :null}</h5>\n                                </Row>\n                                <Row style={colStyle}>\n                                    <p>작성시간:{item.createdAt.substr(0,10) + \" \" + parseTime(item.createdAt.substr(11,12))}</p>\n                                </Row>\n                            </Col>\n                            <Col style={colStyle} sm={5}>\n                                <Row className=\"justify-content-start\">\n                                    <Col xs={6}><AiOutlineUser/>:{item.username}</Col>\n                                    <Col xs={3}><BiCommentDetail/>:{Object.keys(item.comments).length}</Col>\n                                    <Col xs={3}><GrView/>:{item.views}</Col>\n                                </Row>                               \n                            </Col>\n                        </Row>\n                        </StyledListItem>\n                    )\n                })\n                :null}\n                {currentPosts(data).map((item,i)=>{\n                    return(\n                        <StyledListItem key={i} onClick={()=>handleClick(item)}>\n                        <Row>\n                            <Col sm={7}>\n                                <Row>\n                                    <h5>{item.title} {item.keys.length? <MdInsertPhoto/> :null}</h5>\n                                </Row>\n                                <Row style={colStyle}>\n                                    <p>작성시간:{item.createdAt.substr(0,10) + \" \" + parseTime(item.createdAt.substr(11,12))}</p>\n                                </Row>\n                            </Col>\n                            <Col style={colStyle} sm={5}>\n                                <Row className=\"justify-content-start\">\n                                    <Col xs={5}><AiOutlineUser/>:{item.username}</Col>\n                                    <Col xs={3}><BiCommentDetail/>:{Object.keys(item.comments).length}</Col>\n                                    <Col xs={4}><GrView/>:{item.views}</Col>\n                                </Row>                               \n                            </Col>\n                        </Row>\n                        </StyledListItem>\n                    )\n                })}\n            </ListGroup>\n        </div>\n                { simple? (<></>):\n                (<CustomPagination postsPerPage={postsPerPage} totalPosts = {data.length} paginate={setCurrentPage}></CustomPagination>)}\n        </>        \n    )\n\n}\n\nexport default MyTable;","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/EditPost.js",["266","267","268","269","270","271","272","273"],"import {useReducer, useState, useEffect} from 'react';\nimport {Form,Row,Col, ListGroup} from 'react-bootstrap';\nimport '../styles.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport FileUploader from './FileUploader';\nimport {CgCloseR} from 'react-icons/cg';\nimport MyModal from './MyModal';\nimport { CustomContainer } from './CustomContainer';\nimport {StyledButton as Button} from './Styles';\nimport { getUser } from '../services/LoginHelper';\nimport { useHistory } from 'react-router-dom';\nimport { reducer, initialData as initReducerData} from '../services/AlertHelper';\nimport {RiDeleteBin2Line,RiCheckboxMultipleBlankLine} from 'react-icons/ri';\n\nimport MySpinner from './MySpinner';\nimport styled from 'styled-components';\n\nconst StyledP = styled.p`\n    color : black;\n    margin-bottom : 0px;\n    font-size : 13pt;\n    &:hover{\n        color : red;\n    }\n`\n\nconst user = getUser();\nconst fileUrl = \"https://kgsa-upload-to-s3-bucket.s3.us-west-2.amazonaws.com/\"\n\nconst EditPost = ({price, address, initialData,onSubmit})=>{\n    const history = useHistory(); \n    const [oldFiles, setOldFiles] = useState([]);\n    const [uploadedFiles, setUploadedFiles] = useState([]); // set files \n    const [deletedFiles, setDeleteFiles] = useState([]);\n\n    const [inputKey, setInputKey] = useState(\"formKey\"); // input key for form\n    const [inputFileKey, setInputFileKey] = useState(\"formKey\"); // input key for form\n\n    const [alert, setAlert] = useState(false); // alert \n    const [data, setData] = useState(initialData); // data if it is editing, initial data is not null.\n    \n    const [{success,fail,loading},dispatch] = useReducer(reducer,initReducerData);\n    \n    const handleCancel = ()=> history.goBack();\n\n    const handleFileChange = (e)=>{\n        const files = e.target.files\n        if(files.length> 10){\n            console.log(\"Too many files\") // replace it to Alert \n            setInputFileKey(new Date()) //set a random key to reset the file form \n        }\n\n        for(let i =0; i<files.length; i++){\n            setUploadedFiles(prev=> [...prev, files[i]])\n        }\n\n        setInputFileKey(new Date())\n    }\n\n\n    const renderUploadedFilesList = ()=>{\n        if(uploadedFiles){\n            const list = uploadedFiles.map((item,i)=>{\n                console.log(item)\n                return (\n                    <li key={i} style={{fontSize:'10pt'}}>\n                        <Row className=\"align-items-center\">\n                            <Col xs={2}>\n                                <img src={URL.createObjectURL(item)} width=\"50px\" height=\"50px\"/>\n                            </Col>\n                            <Col xs={6}>\n                                {item.name}\n                            </Col>\n                            <Col xs={3}>\n                                <StyledP onClick={()=>handleDeleteUploadFiles(i)}><RiDeleteBin2Line /></StyledP>\n                            </Col>\n                        </Row>\n                    </li>\n                )\n            })\n\n            return list\n        }\n    }\n    \n    const renderOldFiles = ()=>{\n        let list = null\n        if(data.keys){\n            list = data.keys.map((item,i)=>{\n                return (\n                    <li key={i} >\n                        <Row className=\"align-items-center\">\n                            <Col xs={2}>\n                                <img src={fileUrl+item} width=\"50px\" height=\"50px\"/>\n                            </Col>\n                            <Col xs={6}>\n                                {item}\n                            </Col>\n                            <Col xs={3}>\n                                <StyledP onClick={()=>haldeDeleteOldFiles(i)}><RiDeleteBin2Line /></StyledP>\n                            </Col>\n                        </Row>\n                    </li>\n                )\n            })\n        }\n        return list;\n    }\n\n    const haldeDeleteOldFiles = (index)=>{\n        let newKeys = data.keys.filter((item,i)=>i!==index)\n        setDeleteFiles(prev=>[...prev, data.keys[index]])\n        // setOldFiles(newKeys)\n        setData({...data, keys : newKeys});\n    }\n\n    const handleDeleteUploadFiles = (index)=>{\n        setUploadedFiles(uploadedFiles.filter((item,i)=> i!== index));\n    }\n\n    const handleChange = (e) =>{\n        // var value = e.target.name ==\"price\"? Number(e.target.value):e.target.value\n\n        setData({\n            ...data,[e.target.name]:e.target.value\n        })\n    }\n    /* ================================= */\n\n    const handleLargeFilesAlertClose =()=>{\n        setAlert(false)\n        setInputFileKey(new Date())\n    }\n\n    const handleSubmit = async (e)=>{\n\n        // dispatch({type:\"loading\", value : true})\n        e.preventDefault();\n        var formData = new FormData(); // create formdate to append data\n        //Append Data & files\n        for(let i =0; i<Object.keys(data).length; i++){\n            const key = Object.keys(data)[i]\n            if(key!=='deleted' && key!=='keys')\n                formData.append(key, data[key])\n        }\n        \n        var deleted = []\n        for(let i =0; i<deletedFiles.length; i++){\n            deleted.push(deletedFiles[i])\n        }\n        formData.append(\"deleted\",deleted)\n\n        var keys = []\n        for(let i =0; i<data.keys.length; i++){\n            keys.push(data.keys[i])\n        }\n        formData.append(\"keys\",keys)\n\n        for(let i =0; i<uploadedFiles.length; i++){\n            formData.append(\"files\", uploadedFiles[i]);\n        }\n        \n        onSubmit(formData,dispatch)\n        setInputFileKey(new Date())\n        setInputKey(new Date())\n    }\n\n    useEffect(()=>{\n        setData({...data, deleted : deletedFiles});\n\n    }, [deletedFiles])\n\n    // useEffect(()=>{\n    //     // if(initialData.keys){\n    //     //     setOldFiles(initialData.keys)\n    //     // }\n    // },[])\n\n   return (\n            <div>\n                <ListGroup>\n                    <ListGroup.Item variant=\"secondary\">\n                        <Row>\n                            <Col sm={3}>\n                                <Button onClick={handleCancel}>\n                                    Back\n                                </Button>\n                            </Col>  \n                        </Row>\n                            <Form className=\"editor-form\" onSubmit={handleSubmit} key={inputKey}>\n                            {user.admin && <Form.Check \n                                className=\"editor-form-control\" \n                                type='checkbox'\n                                onChange={handleChange}\n                                name='notice'\n                                label='공지사항'\n                                value={true}\n                                defaultChecked={data.notice? true:false}\n                            />}\n                            <Form.Control \n                                className=\"editor-form-control\" \n                                type=\"text\" \n                                onChange={handleChange} \n                                placeholder=\"Title*\"\n                                defaultValue = {data.title? data.title : null}\n                                name=\"title\" \n                                required \n                            />\n                            {price &&\n                                <Form.Control \n                                    className=\"editor-form-control\"  \n                                    type=\"number\" \n                                    placeholder=\"Price\"\n                                    onChange={handleChange} \n                                    defaultValue={data.price? data.price:null}\n                                    name=\"price\" \n                                /> }\n                            {address &&\n                                <Form.Control \n                                    className=\"editor-form-control\"  \n                                    type=\"text\" \n                                    onChange={handleChange} \n                                    placeholder=\"Address\"\n                                    defaultValue={data.address? data.address:null} \n                                    name=\"address\" \n                                /> }\n                            <Form.Control \n                                className=\"editor-form-control\" \n                                as=\"textarea\" \n                                placeholder=\"Write Something.. Kindly!*\"\n                                onChange={handleChange} \n                                style={{minHeight:'300px'}} \n                                defaultValue={data.contents? data.contents: null}\n                                row={100} \n                                name=\"contents\" \n                                required\n                            />\n                            {/* <Form.Control\n                                className=\"editor-form-control\" \n                                type=\"file\"\n                                key={inputFilesKey}\n                                multiple\n                                accept=\"\"\n                                onChange={handleFileChange}\n                            />         */}\n                            <Form.Control className=\"editor-form-control\"  type=\"file\" multiple onChange={handleFileChange} key={inputFileKey} accept=\"image/jpg, image/jpeg, image/png, image/gif, image/bmp\"/>  \n                            {uploadedFiles && \n                                <ul style={{fontSize:'10pt'}}>\n                                    {renderUploadedFilesList()}\n                                </ul>\n                            }\n                            {oldFiles && \n                                <ul style={{fontSize:'10pt'}}>\n                                    {renderOldFiles()}\n                                </ul>\n                            }\n                            <Row className=\"justify-content-end\">                               \n                                <Col sm={2}>\n                                    <Button type=\"submit\">\n                                        Submit\n                                    </Button>                                    \n                                </Col>\n                            </Row>       \n                        </Form>\n                    </ListGroup.Item>\n                </ListGroup>\n                <MyModal show={success} handleOnClick={()=>dispatch({type:'success', value:false})} variant='success'>\n                    <p>Completed your request successfully!</p>\n                </MyModal>\n                <MyModal show={fail} handleOnClick={()=>dispatch({type:'fail', value:false})} variant='danger'>\n                    <p>Oops! Sorry, something is wrong..</p>\n                    <p>Please try again..</p>\n                </MyModal>\n                <MyModal show={loading} disableClose={false}>\n                    <MySpinner/>\n                </MyModal>\n                <MyModal show={alert} handleOnClick={handleLargeFilesAlertClose} variant='danger'>\n                    <p>Files are too large or too many</p>\n                    <p>Limit Size is 500MB and 5 files</p>\n                </MyModal>\n            </div>\n        )\n}\n\nexport default EditPost;","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/Comments.js",["274","275"],"// import { Button } from \"bootstrap\";s\n\nimport { useEffect, useState } from \"react\"\nimport { Col, Form, ListGroup, Row,Alert } from \"react-bootstrap\"\nimport { RiDeleteBin2Line,RiEditLine} from 'react-icons/ri';\nimport { getToken, getUser } from \"../services/LoginHelper\";\nimport { StyledButton } from \"./Styles\";\nimport {BsChatQuote} from 'react-icons/bs';\nimport { useHistory } from \"react-router-dom\";\nimport {url} from '../services/config';\n\nconst user = getUser();\nconst userCompare=(username)=>{\n    return !user.username.localeCompare(username);\n}\n\nconst Comments = ({forumItem, _id})=>{\n    const user = getUser();\n    const [comments, setComments] = useState([])\n    const [newComment, setNewComment] = useState({\n        username : user? user.username : \"\",\n        comment : \"\"\n    })\n\n    const [inputKey, setInputKey]= useState(\"inputKey\");\n    const [ editing,setEditing] = useState(false);\n    const history = useHistory();\n\n    const handleChange=(e)=>{\n        setNewComment({\n            ...newComment, comment : e.target.value\n        })\n    }\n\n    const handleOnSubmit =(e)=>{\n        e.preventDefault();\n        if(!editing){\n            addNewComment();\n        }else{\n            updateCommnet(newComment._id)\n        }\n        // setInputKey(e.target.value);\n    }\n\n    const fetchData = ()=>{\n        var requestOptions = {\n            method: 'GET',\n            redirect: 'follow'\n          };\n\n        fetch(`${url}${forumItem}/comments/${_id}`, requestOptions)\n        .then(response => response.json())\n        .then(result => {\n            setComments(result.data)\n        })\n        .catch(error => console.log('error', error));\n    }\n\n    const addNewComment = ()=>{\n\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        var requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: JSON.stringify(newComment),\n            redirect: 'follow'\n          };\n          \n          fetch(`${url}${forumItem}/comments/${_id}`, requestOptions)\n            .then(response => response.text())\n            .then(res=> setInputKey(res))\n            .catch(error => console.log('error', error));\n    } \n\n    const updateCommnet = (cid)=>{\n        console.log(\"?\")\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n\n        var requestOptions = {\n            method: 'PUT',\n            headers: myHeaders,\n            body : JSON.stringify(newComment),\n            redirect: 'follow'\n          };\n          \n          fetch(`${url}${forumItem}/comments/${_id}/${cid}`, requestOptions)\n            .then(response => response.text())\n            .then(res=> setInputKey(res))\n            .catch(error => console.log('error', error));\n\n        setEditing(false)\n    }\n\n    const deleteComment = (cid)=>{\n        var requestOptions = {\n            method: 'DELETE',\n            redirect: 'follow'\n          };\n          \n          fetch(`${url}${forumItem}/comments/${_id}/${cid}`, requestOptions)\n            .then(response => response.text())\n            .then(res=> setInputKey(res))\n            .catch(error => console.log('error', error));\n        \n        setEditing(false)\n    }\n\n    useEffect(()=>{\n        fetchData()\n    },[inputKey])\n\n    const renderForm = ()=>{\n        var value = \"\"\n        let component = null\n\n        if(!getToken()){\n            component = (<Alert variant=\"danger\" style={{textAlign:'center'}}>\n                            <p>Please Login to make a comment</p>\n                            <StyledButton onClick={()=>history.push('/login')}>Go to Login</StyledButton>\n                        </Alert>)\n        }\n        else {\n            component = (<Form onSubmit={handleOnSubmit}>\n                            <Form.Group>\n                                <Form.Label>\n                                    {!editing? \"New comment\" : \"Edit comment\"}\n                                </Form.Label>                   \n                                    <Form.Control \n                                        as=\"textarea\"\n                                        placeholder=\"Kindness and politeness are not overrated at all.\" \n                                        rows={3} \n                                        name=\"comment\" \n                                        onChange={handleChange}\n                                        defaultValue={editing? newComment.comment : null}\n                                        key={inputKey}\n                                    />\n                            </Form.Group>\n                            <StyledButton type=\"submit\" float=\"right\">Submit</StyledButton>\n                        </Form>)\n        }\n        return component\n\n    }\n    return (\n        <div>\n            <ListGroup>\n                {comments.map((item,i)=>{\n                        return (\n                            <ListGroup.Item key={i} variant=\"secondary\">\n                                <Row className=\"align-items-center\">\n                                    <Col xs={2}>\n                                        <BsChatQuote style={{fontSize:\"25pt\"}}/>\n                                    </Col>\n                                    <Col  xs={7}>\n                                        <Row style={{fontSize:\"10pt\"}}>\n                                            user: {item.username}\n                                        </Row>\n                                        <Row  style={{fontSize:\"12pt\"}}>\n                                            {item.comment}\n                                        </Row>\n                                    </Col>\n                                    <Col xs={2} style={{fontSize:\"10pt\"}}>\n                                        <Row>작성시간</Row>\n                                        <Row>\n                                            {item.updatedAt.split('T')[0]}\n                                        </Row>\n                                        <Row>\n                                            {item.updatedAt.split('T')[1].substring(0,11)}\n                                        </Row>\n                                    </Col>\n                                    <Col xs={1}>\n                                        {user && userCompare(item.username)?\n                                            <>\n                                                <RiDeleteBin2Line onClick={()=>{deleteComment(item._id)}}/>\n                                                <RiEditLine onClick={()=>{setEditing(true); setNewComment(item)}}/>\n                                            </>\n                                        : null}\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                        )\n                    })}\n                <ListGroup.Item variant=\"secondary\">\n                    {renderForm()}\n                </ListGroup.Item> \n            </ListGroup>\n        </div>\n    )\n}\n\nexport default Comments;\n","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/ViewPost.js",["276","277"],"/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/Editor.js",["278","279","280","281","282","283"],"import {useReducer, useState, useEffect} from 'react';\nimport {Form,Row,Col, ListGroup} from 'react-bootstrap';\nimport '../styles.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport FileUploader from './FileUploader';\nimport {CgCloseR} from 'react-icons/cg';\nimport MyModal from './MyModal';\nimport { CustomContainer } from './CustomContainer';\nimport {StyledButton as Button} from './Styles';\nimport { getUser } from '../services/LoginHelper';\nimport { useHistory } from 'react-router-dom';\nimport { reducer, initialData as initReducerData} from '../services/AlertHelper';\nimport {RiDeleteBin2Line,RiCheckboxMultipleBlankLine} from 'react-icons/ri';\n\nimport MySpinner from './MySpinner';\nimport styled from 'styled-components';\n\nconst StyledP = styled.p`\n    color : black;\n    font-size : 13pt;\n    &:hover{\n        color : red;\n    }\n`\n\nconst user = getUser();\nconst Editor = ({price, address,onSubmit})=>{\n    const history = useHistory(); \n    const [uploadedFiles, setUploadedFiles] = useState([]); // set files \n\n    const [inputKey, setInputKey] = useState(\"formKey\"); // input key for form\n    const [inputFileKey, setInputFileKey] = useState(\"formKey\"); // input key for form\n\n    const [alert, setAlert] = useState(false); // alert \n    const [data, setData] = useState({\n        username : user.username\n    }); // data if it is editing, initial data is not null.\n    const [{success,fail,loading},dispatch] = useReducer(reducer,initReducerData);\n    \n    const handleCancel = ()=>{\n        history.goBack();\n    }\n\n    const handleFileChange = (e)=>{\n        const files = e.target.files\n        if(files.length> 10){\n            console.log(\"Too many files\") // replace it to Alert \n            setInputFileKey(new Date()) //set a random key to reset the file form \n        }\n\n        for(let i =0; i<files.length; i++){\n            setUploadedFiles(prev=> [...prev, files[i]])\n        }\n\n        setInputFileKey(new Date())\n    }\n\n\n    const renderUploadedFilesList = ()=>{\n        if(uploadedFiles){\n            const list = uploadedFiles.map((item,i)=>{\n                return (\n                    <li key={i} style={{fontSize:'10pt'}}>\n                        <Row>\n                            <Col xs={2}>\n                                <img src={URL.createObjectURL(item)} width=\"50px\" height=\"50px\"/>\n                            </Col>\n                            <Col xs={6}>\n                                {item.name}\n                            </Col>\n                            <Col xs={3}>\n                                <StyledP onClick={()=>handleDeleteUploadFiles(i)}><RiDeleteBin2Line/></StyledP>\n                            </Col>\n                        </Row>\n                    </li>\n                )\n            })\n\n            return list\n        }\n    }\n\n    const handleDeleteUploadFiles = (index)=>{\n        setUploadedFiles(uploadedFiles.filter((item,i)=> i!== index));\n    }\n\n    const handleChange = (e) =>{\n        // var value = e.target.name ==\"price\"? Number(e.target.value):e.target.value\n\n        setData({\n            ...data,[e.target.name]:e.target.value\n        })\n    }\n    /* ================================= */\n\n    const handleLargeFilesAlertClose =()=>{\n        setAlert(false)\n        setInputFileKey(new Date())\n    }\n\n    const handleSubmit = async (e)=>{\n\n        dispatch({type:\"loading\", value : true})\n        e.preventDefault();\n        var formData = new FormData(); // create formdate to append data\n        //Append Data & files\n        for(let i =0; i<Object.keys(data).length; i++){\n            const key = Object.keys(data)[i]\n            formData.append(key,data[key]);\n        }\n\n        for(let i =0; i<uploadedFiles.length; i++){\n            formData.append(\"files\", uploadedFiles[i]);\n        }\n        \n        onSubmit(formData,dispatch)\n        setInputFileKey(new Date())\n        setInputKey(new Date())\n    }\n\n   return (\n            <div>\n                <ListGroup>\n                    <ListGroup.Item variant=\"secondary\">\n                        <Row>\n                            <Col sm={3}>\n                                <Button onClick={handleCancel}>\n                                    Back\n                                </Button>\n                            </Col>  \n                        </Row>\n                            <Form className=\"editor-form\" onSubmit={handleSubmit} key={inputKey}>\n                            {user.admin && <Form.Check \n                                className=\"editor-form-control\" \n                                type='checkbox'\n                                onChange={handleChange}\n                                name='notice'\n                                label='공지사항'\n                                value={true}\n                            />}\n                            <Form.Control \n                                className=\"editor-form-control\" \n                                type=\"text\" \n                                onChange={handleChange} \n                                placeholder=\"Title*\"\n                                name=\"title\" \n                                required \n                            />\n                            {price &&\n                                <Form.Control \n                                    className=\"editor-form-control\"  \n                                    type=\"number\" \n                                    placeholder=\"Price\"\n                                    onChange={handleChange} \n                                    name=\"price\" \n                                /> }\n                            {address &&\n                                <Form.Control \n                                    className=\"editor-form-control\"  \n                                    type=\"text\" \n                                    onChange={handleChange} \n                                    placeholder=\"Address\"\n                                    name=\"address\" \n                                /> }\n                            <Form.Control \n                                className=\"editor-form-control\" \n                                as=\"textarea\" \n                                placeholder=\"Write Something.. Kindly!*\"\n                                onChange={handleChange} \n                                style={{minHeight:'300px'}} \n                                row={100} \n                                name=\"contents\" \n                                required\n                            />\n                            {/* <Form.Control\n                                className=\"editor-form-control\" \n                                type=\"file\"\n                                key={inputFilesKey}\n                                multiple\n                                accept=\"\"\n                                onChange={handleFileChange}\n                            />         */}\n                            <Form.Control className=\"editor-form-control\"  type=\"file\" multiple onChange={handleFileChange} key={inputFileKey} accept=\"image/jpg, image/jpeg, image/png, image/gif, image/bmp\"/>  \n                            {uploadedFiles && \n                                <ul style={{fontSize:'10pt'}}>\n                                    {renderUploadedFilesList()}\n                                </ul>\n                            }\n                            <Row className=\"justify-content-end\">                               \n                                <Col sm={2}>\n                                    <Button type=\"submit\">\n                                        Submit\n                                    </Button>                                    \n                                </Col>\n                            </Row>       \n                        </Form>\n                    </ListGroup.Item>\n                </ListGroup>\n                <MyModal show={success} handleOnClick={()=>dispatch({type:'success', value:false})} variant='success'>\n                    <p>Completed your request successfully!</p>\n                </MyModal>\n                <MyModal show={fail} handleOnClick={()=>dispatch({type:'fail', value:false})} variant='danger'>\n                    <p>Oops! Sorry, something is wrong..</p>\n                    <p>Please try again..</p>\n                </MyModal>\n                <MyModal show={loading} disableClose={false}>\n                    <MySpinner/>\n                </MyModal>\n                <MyModal show={alert} handleOnClick={handleLargeFilesAlertClose} variant='danger'>\n                    <p>Files are too large or too many</p>\n                    <p>Limit Size is 500MB and 5 files</p>\n                </MyModal>\n            </div>\n        )\n}\n\nexport default Editor;","/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/FileUploader.js",["284","285","286","287"],"import {useState} from 'react';\nimport {Form, Row,Col} from 'react-bootstrap';\nimport {CgCloseR} from 'react-icons/cg';\nimport styled from 'styled-components';\nimport {RiDeleteBin2Line,RiCheckboxMultipleBlankLine} from 'react-icons/ri';\n\nconst StyledP = styled.p`\n    color : black;\n    font-size : 13pt;\n    &:hover{\n        color : red;\n    }\n`\n\nconst FileUploader = (selectedFile,setSelectedFile)=>{\n    const uploadedFiles = selectedFile.selectedFile\n    const setUploadedFiles = selectedFile.setSelectedFile\n    // const {uploadedFiles, setUploadedFiles} = selectedFile\n    const [ inputFileKey, setInputFileKey] = useState(\"inputFileKey\");\n    const [alert, setAlert] = useState(false); // alert \n    \n    const handleFileChange = (e)=>{\n        const files = e.target.files\n        if(files.length> 10){\n            console.log(\"Too many files\") // replace it to Alert \n            setInputFileKey(new Date()) //set a random key to reset the file form \n        }\n\n        for(let i =0; i<files.length; i++){\n            setUploadedFiles(prev=> [...prev, files[i]])\n        }\n\n        setInputFileKey(new Date())\n    }\n\n    const handleLargeFilesAlertClose =()=>{\n        setAlert(false)\n        setInputFileKey(new Date())\n    }\n    \n    const renderUploadedFilesList = ()=>{\n        const list = uploadedFiles.map((item,i)=>{\n            return (\n                <li key={i} style={{fontSize:'10pt'}}>\n                    <Row>\n                        <Col xs={10}>\n                            {item.name? item.name : item}\n                        </Col>\n                        <Col xs={2}>\n                            <StyledP onClick={()=>handleDeleteUploadFiles(i)}><RiDeleteBin2Line/></StyledP>\n                        </Col>\n                    </Row>\n                </li>\n            )\n        })\n\n        return list\n    }\n\n    const handleDeleteUploadFiles = (index)=>{\n        setUploadedFiles(uploadedFiles.filter((item,i)=> i!== index));\n    }\n    \n    return(\n        <>\n            <Form.Control className=\"editor-form-control\"  type=\"file\" multiple onChange={handleFileChange} key={inputFileKey} accept=\"image/jpg, image/jpeg, image/png, image/gif, image/bmp\"/>  \n            {uploadedFiles && \n                <ul>\n                    {renderUploadedFilesList()}\n                </ul>\n            }\n        </>\n    )  \n}\n\nexport default FileUploader;\n",{"ruleId":"288","replacedBy":"289"},{"ruleId":"290","replacedBy":"291"},{"ruleId":"292","severity":1,"message":"293","line":1,"column":16,"nodeType":"294","messageId":"295","endLine":1,"endColumn":24},{"ruleId":"292","severity":1,"message":"296","line":2,"column":10,"nodeType":"294","messageId":"295","endLine":2,"endColumn":15},{"ruleId":"297","severity":1,"message":"298","line":14,"column":21,"nodeType":"299","endLine":14,"endColumn":44},{"ruleId":"297","severity":1,"message":"298","line":43,"column":21,"nodeType":"299","endLine":43,"endColumn":80},{"ruleId":"292","severity":1,"message":"300","line":37,"column":22,"nodeType":"294","messageId":"295","endLine":37,"endColumn":26},{"ruleId":"292","severity":1,"message":"301","line":275,"column":53,"nodeType":"294","messageId":"295","endLine":275,"endColumn":57},{"ruleId":"302","severity":1,"message":"303","line":431,"column":19,"nodeType":"304","messageId":"305","endLine":438,"endColumn":7},{"ruleId":"292","severity":1,"message":"306","line":448,"column":33,"nodeType":"294","messageId":"295","endLine":448,"endColumn":38},{"ruleId":"307","severity":1,"message":"308","line":452,"column":22,"nodeType":"309","endLine":452,"endColumn":35},{"ruleId":"292","severity":1,"message":"300","line":22,"column":22,"nodeType":"294","messageId":"295","endLine":22,"endColumn":26},{"ruleId":"292","severity":1,"message":"310","line":12,"column":11,"nodeType":"294","messageId":"295","endLine":12,"endColumn":20},{"ruleId":"292","severity":1,"message":"311","line":13,"column":22,"nodeType":"294","messageId":"295","endLine":13,"endColumn":31},{"ruleId":"307","severity":1,"message":"312","line":163,"column":25,"nodeType":"309","endLine":163,"endColumn":48},{"ruleId":"307","severity":1,"message":"313","line":71,"column":7,"nodeType":"314","endLine":71,"endColumn":9,"suggestions":"315"},{"ruleId":"307","severity":1,"message":"313","line":91,"column":7,"nodeType":"314","endLine":91,"endColumn":9,"suggestions":"316"},{"ruleId":"292","severity":1,"message":"317","line":23,"column":12,"nodeType":"294","messageId":"295","endLine":23,"endColumn":22},{"ruleId":"292","severity":1,"message":"318","line":23,"column":24,"nodeType":"294","messageId":"295","endLine":23,"endColumn":37},{"ruleId":"292","severity":1,"message":"319","line":107,"column":28,"nodeType":"294","messageId":"295","endLine":107,"endColumn":35},{"ruleId":"292","severity":1,"message":"320","line":109,"column":11,"nodeType":"294","messageId":"295","endLine":109,"endColumn":18},{"ruleId":"292","severity":1,"message":"321","line":184,"column":19,"nodeType":"294","messageId":"295","endLine":184,"endColumn":25},{"ruleId":"292","severity":1,"message":"300","line":205,"column":22,"nodeType":"294","messageId":"295","endLine":205,"endColumn":26},{"ruleId":"292","severity":1,"message":"319","line":205,"column":28,"nodeType":"294","messageId":"295","endLine":205,"endColumn":35},{"ruleId":"292","severity":1,"message":"322","line":222,"column":15,"nodeType":"294","messageId":"295","endLine":222,"endColumn":24},{"ruleId":"292","severity":1,"message":"323","line":236,"column":23,"nodeType":"294","messageId":"295","endLine":236,"endColumn":28},{"ruleId":"292","severity":1,"message":"320","line":289,"column":11,"nodeType":"294","messageId":"295","endLine":289,"endColumn":18},{"ruleId":"292","severity":1,"message":"324","line":370,"column":11,"nodeType":"294","messageId":"295","endLine":370,"endColumn":26},{"ruleId":"292","severity":1,"message":"325","line":371,"column":11,"nodeType":"294","messageId":"295","endLine":371,"endColumn":21},{"ruleId":"307","severity":1,"message":"326","line":34,"column":24,"nodeType":"327","endLine":39,"endColumn":18},{"ruleId":"307","severity":1,"message":"328","line":171,"column":7,"nodeType":"314","endLine":171,"endColumn":9,"suggestions":"329"},{"ruleId":"292","severity":1,"message":"330","line":24,"column":22,"nodeType":"294","messageId":"295","endLine":24,"endColumn":31},{"ruleId":"292","severity":1,"message":"306","line":24,"column":33,"nodeType":"294","messageId":"295","endLine":24,"endColumn":38},{"ruleId":"307","severity":1,"message":"326","line":29,"column":24,"nodeType":"327","endLine":35,"endColumn":18},{"ruleId":"292","severity":1,"message":"331","line":75,"column":13,"nodeType":"294","messageId":"295","endLine":75,"endColumn":22},{"ruleId":"292","severity":1,"message":"330","line":113,"column":22,"nodeType":"294","messageId":"295","endLine":113,"endColumn":31},{"ruleId":"292","severity":1,"message":"306","line":113,"column":33,"nodeType":"294","messageId":"295","endLine":113,"endColumn":38},{"ruleId":"307","severity":1,"message":"326","line":118,"column":24,"nodeType":"309","endLine":118,"endColumn":37},{"ruleId":"307","severity":1,"message":"332","line":164,"column":7,"nodeType":"314","endLine":164,"endColumn":9,"suggestions":"333"},{"ruleId":"292","severity":1,"message":"330","line":202,"column":22,"nodeType":"294","messageId":"295","endLine":202,"endColumn":31},{"ruleId":"292","severity":1,"message":"334","line":202,"column":33,"nodeType":"294","messageId":"295","endLine":202,"endColumn":37},{"ruleId":"292","severity":1,"message":"330","line":31,"column":22,"nodeType":"294","messageId":"295","endLine":31,"endColumn":31},{"ruleId":"292","severity":1,"message":"306","line":31,"column":33,"nodeType":"294","messageId":"295","endLine":31,"endColumn":38},{"ruleId":"307","severity":1,"message":"326","line":36,"column":24,"nodeType":"327","endLine":43,"endColumn":18},{"ruleId":"292","severity":1,"message":"330","line":130,"column":22,"nodeType":"294","messageId":"295","endLine":130,"endColumn":31},{"ruleId":"292","severity":1,"message":"306","line":130,"column":33,"nodeType":"294","messageId":"295","endLine":130,"endColumn":38},{"ruleId":"307","severity":1,"message":"326","line":135,"column":24,"nodeType":"309","endLine":135,"endColumn":37},{"ruleId":"307","severity":1,"message":"332","line":182,"column":7,"nodeType":"314","endLine":182,"endColumn":9,"suggestions":"335"},{"ruleId":"292","severity":1,"message":"330","line":225,"column":22,"nodeType":"294","messageId":"295","endLine":225,"endColumn":31},{"ruleId":"292","severity":1,"message":"306","line":225,"column":33,"nodeType":"294","messageId":"295","endLine":225,"endColumn":38},{"ruleId":"292","severity":1,"message":"336","line":15,"column":8,"nodeType":"294","messageId":"295","endLine":15,"endColumn":18},{"ruleId":"292","severity":1,"message":"337","line":1,"column":16,"nodeType":"294","messageId":"295","endLine":1,"endColumn":24},{"ruleId":"307","severity":1,"message":"338","line":12,"column":6,"nodeType":"314","endLine":12,"endColumn":8,"suggestions":"339"},{"ruleId":"292","severity":1,"message":"340","line":2,"column":10,"nodeType":"294","messageId":"295","endLine":2,"endColumn":19},{"ruleId":"307","severity":1,"message":"341","line":37,"column":7,"nodeType":"314","endLine":37,"endColumn":9,"suggestions":"342"},{"ruleId":"292","severity":1,"message":"340","line":1,"column":17,"nodeType":"294","messageId":"295","endLine":1,"endColumn":26},{"ruleId":"292","severity":1,"message":"343","line":6,"column":5,"nodeType":"294","messageId":"295","endLine":6,"endColumn":14},{"ruleId":"344","severity":1,"message":"345","line":25,"column":47,"nodeType":"346","messageId":"347","endLine":25,"endColumn":49},{"ruleId":"344","severity":1,"message":"345","line":22,"column":26,"nodeType":"346","messageId":"347","endLine":22,"endColumn":28},{"ruleId":"292","severity":1,"message":"348","line":45,"column":13,"nodeType":"294","messageId":"295","endLine":45,"endColumn":20},{"ruleId":"292","severity":1,"message":"349","line":45,"column":22,"nodeType":"294","messageId":"295","endLine":45,"endColumn":32},{"ruleId":"292","severity":1,"message":"350","line":46,"column":13,"nodeType":"294","messageId":"295","endLine":46,"endColumn":19},{"ruleId":"292","severity":1,"message":"351","line":46,"column":21,"nodeType":"294","messageId":"295","endLine":46,"endColumn":30},{"ruleId":"292","severity":1,"message":"352","line":47,"column":23,"nodeType":"294","messageId":"295","endLine":47,"endColumn":34},{"ruleId":"292","severity":1,"message":"353","line":49,"column":13,"nodeType":"294","messageId":"295","endLine":49,"endColumn":25},{"ruleId":"292","severity":1,"message":"354","line":49,"column":27,"nodeType":"294","messageId":"295","endLine":49,"endColumn":42},{"ruleId":"344","severity":1,"message":"345","line":53,"column":26,"nodeType":"346","messageId":"347","endLine":53,"endColumn":28},{"ruleId":"344","severity":1,"message":"345","line":53,"column":58,"nodeType":"346","messageId":"347","endLine":53,"endColumn":60},{"ruleId":"292","severity":1,"message":"355","line":54,"column":13,"nodeType":"294","messageId":"295","endLine":54,"endColumn":18},{"ruleId":"292","severity":1,"message":"356","line":115,"column":13,"nodeType":"294","messageId":"295","endLine":115,"endColumn":16},{"ruleId":"292","severity":1,"message":"357","line":1,"column":14,"nodeType":"294","messageId":"295","endLine":1,"endColumn":20},{"ruleId":"358","severity":1,"message":"359","line":19,"column":20,"nodeType":"360","messageId":"361","endLine":19,"endColumn":22},{"ruleId":"358","severity":1,"message":"359","line":19,"column":68,"nodeType":"360","messageId":"361","endLine":19,"endColumn":70},{"ruleId":"358","severity":1,"message":"362","line":19,"column":68,"nodeType":"360","messageId":"361","endLine":19,"endColumn":70},{"ruleId":"358","severity":1,"message":"362","line":19,"column":82,"nodeType":"360","messageId":"361","endLine":19,"endColumn":84},{"ruleId":"292","severity":1,"message":"363","line":29,"column":7,"nodeType":"294","messageId":"295","endLine":29,"endColumn":15},{"ruleId":"292","severity":1,"message":"364","line":33,"column":7,"nodeType":"294","messageId":"295","endLine":33,"endColumn":16},{"ruleId":"292","severity":1,"message":"365","line":45,"column":11,"nodeType":"294","messageId":"295","endLine":45,"endColumn":16},{"ruleId":"292","severity":1,"message":"366","line":46,"column":11,"nodeType":"294","messageId":"295","endLine":46,"endColumn":15},{"ruleId":"292","severity":1,"message":"367","line":50,"column":12,"nodeType":"294","messageId":"295","endLine":50,"endColumn":23},{"ruleId":"292","severity":1,"message":"368","line":50,"column":25,"nodeType":"294","messageId":"295","endLine":50,"endColumn":39},{"ruleId":"292","severity":1,"message":"369","line":5,"column":8,"nodeType":"294","messageId":"295","endLine":5,"endColumn":20},{"ruleId":"292","severity":1,"message":"370","line":6,"column":9,"nodeType":"294","messageId":"295","endLine":6,"endColumn":17},{"ruleId":"292","severity":1,"message":"371","line":8,"column":10,"nodeType":"294","messageId":"295","endLine":8,"endColumn":25},{"ruleId":"292","severity":1,"message":"372","line":13,"column":26,"nodeType":"294","messageId":"295","endLine":13,"endColumn":53},{"ruleId":"292","severity":1,"message":"373","line":32,"column":22,"nodeType":"294","messageId":"295","endLine":32,"endColumn":33},{"ruleId":"297","severity":1,"message":"298","line":69,"column":33,"nodeType":"299","endLine":69,"endColumn":98},{"ruleId":"297","severity":1,"message":"298","line":94,"column":33,"nodeType":"299","endLine":94,"endColumn":85},{"ruleId":"307","severity":1,"message":"374","line":171,"column":8,"nodeType":"314","endLine":171,"endColumn":22,"suggestions":"375"},{"ruleId":"307","severity":1,"message":"376","line":112,"column":7,"nodeType":"314","endLine":112,"endColumn":17,"suggestions":"377"},{"ruleId":"292","severity":1,"message":"355","line":115,"column":13,"nodeType":"294","messageId":"295","endLine":115,"endColumn":18},{"ruleId":"292","severity":1,"message":"378","line":4,"column":23,"nodeType":"294","messageId":"295","endLine":4,"endColumn":36},{"ruleId":"297","severity":1,"message":"298","line":21,"column":25,"nodeType":"299","endLine":21,"endColumn":78},{"ruleId":"292","severity":1,"message":"379","line":1,"column":31,"nodeType":"294","messageId":"295","endLine":1,"endColumn":40},{"ruleId":"292","severity":1,"message":"369","line":5,"column":8,"nodeType":"294","messageId":"295","endLine":5,"endColumn":20},{"ruleId":"292","severity":1,"message":"370","line":6,"column":9,"nodeType":"294","messageId":"295","endLine":6,"endColumn":17},{"ruleId":"292","severity":1,"message":"371","line":8,"column":10,"nodeType":"294","messageId":"295","endLine":8,"endColumn":25},{"ruleId":"292","severity":1,"message":"372","line":13,"column":26,"nodeType":"294","messageId":"295","endLine":13,"endColumn":53},{"ruleId":"297","severity":1,"message":"298","line":66,"column":33,"nodeType":"299","endLine":66,"endColumn":98},{"ruleId":"292","severity":1,"message":"370","line":3,"column":9,"nodeType":"294","messageId":"295","endLine":3,"endColumn":17},{"ruleId":"292","severity":1,"message":"372","line":5,"column":26,"nodeType":"294","messageId":"295","endLine":5,"endColumn":53},{"ruleId":"292","severity":1,"message":"380","line":20,"column":12,"nodeType":"294","messageId":"295","endLine":20,"endColumn":17},{"ruleId":"292","severity":1,"message":"381","line":36,"column":11,"nodeType":"294","messageId":"295","endLine":36,"endColumn":37},"no-native-reassign",["382"],"no-negated-in-lhs",["383"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'fail' is assigned a value but never used.","'time' is assigned a value but never used.","no-new-object","The object literal notation {} is preferrable.","NewExpression","preferLiteral","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'events' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","'fetchData' is assigned a value but never used.","'useParams' is defined but never used.","Assignments to the 'srcs' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has a missing dependency: 'requestOptions'. Either include it or remove the dependency array.","ArrayExpression",["384"],["385"],"'authorized' is assigned a value but never used.","'setAuthorized' is assigned a value but never used.","'loading' is assigned a value but never used.","'history' is assigned a value but never used.","'result' is assigned a value but never used.","'firstname' is assigned a value but never used.","'timer' is assigned a value but never used.","'handleCloseMenu' is assigned a value but never used.","'toggleMenu' is assigned a value but never used.","Assignments to the 'data' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ObjectExpression","React Hook useEffect has a missing dependency: '_id'. Either include it or remove the dependency array.",["386"],"'isLoading' is assigned a value but never used.","'myHeaders' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'updateViews'. Either include it or remove the dependency array.",["387"],"'erro' is assigned a value but never used.",["388"],"'umass_logo' is defined but never used.","'Redirect' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["389"],"'Container' is defined but never used.","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.",["390"],"'highlight' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'success' is assigned a value but never used.","'setSuccess' is assigned a value but never used.","'failed' is assigned a value but never used.","'setFailed' is assigned a value but never used.","'setInputKey' is assigned a value but never used.","'showChangePw' is assigned a value but never used.","'setShowChangePw' is assigned a value but never used.","'value' is assigned a value but never used.","'val' is assigned a value but never used.","'Button' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","'divStyle' is assigned a value but never used.","'listStlye' is assigned a value but never used.","'token' is assigned a value but never used.","'user' is assigned a value but never used.","'selectedAll' is assigned a value but never used.","'setSelectedAll' is assigned a value but never used.","'FileUploader' is defined but never used.","'CgCloseR' is defined but never used.","'CustomContainer' is defined but never used.","'RiCheckboxMultipleBlankLine' is defined but never used.","'setOldFiles' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array. You can also do a functional update 'setData(d => ...)' if you only need 'data' in the 'setData' call.",["391"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["392"],"'AiOutlineFile' is defined but never used.","'useEffect' is defined but never used.","'alert' is assigned a value but never used.","'handleLargeFilesAlertClose' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"393","fix":"394"},{"desc":"393","fix":"395"},{"desc":"396","fix":"397"},{"desc":"398","fix":"399"},{"desc":"398","fix":"400"},{"desc":"401","fix":"402"},{"desc":"403","fix":"404"},{"desc":"405","fix":"406"},{"desc":"407","fix":"408"},"Update the dependencies array to be: [requestOptions]",{"range":"409","text":"410"},{"range":"411","text":"410"},"Update the dependencies array to be: [_id]",{"range":"412","text":"413"},"Update the dependencies array to be: [updateViews]",{"range":"414","text":"415"},{"range":"416","text":"415"},"Update the dependencies array to be: [history]",{"range":"417","text":"418"},"Update the dependencies array to be: [url]",{"range":"419","text":"420"},"Update the dependencies array to be: [data, deletedFiles]",{"range":"421","text":"422"},"Update the dependencies array to be: [fetchData, inputKey]",{"range":"423","text":"424"},[1821,1823],"[requestOptions]",[2305,2307],[4881,4883],"[_id]",[4828,4830],"[updateViews]",[5408,5410],[269,271],"[history]",[929,931],"[url]",[5712,5726],"[data, deletedFiles]",[3293,3303],"[fetchData, inputKey]"]