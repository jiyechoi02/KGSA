{"ast":null,"code":"var _jsxFileName = \"/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/pages/Housing.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Row, Col, Modal } from 'react-bootstrap';\nimport { CustomContainer as Container } from '../CustomContainer';\nimport MyTable from \"../MyTable\";\nimport { StyledButton as Button } from \"../Styles\";\nimport { getToken, getUser } from \"../../services/LoginHelper\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport ViewPost from '../ViewPost';\nimport Comments from '../Comments';\nimport { RiArrowGoBackFill } from 'react-icons/ri';\nimport MyModal from '../MyModal';\nimport Editor from \"../Editor\";\nimport { useFetch } from \"../../services/UseAPIs\";\nimport MySpinner from \"../MySpinner\";\nimport MyDiv from \"../MyDiv\";\nimport EditPost from \"../EditPost\";\nimport { url } from '../../services/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst user = getUser();\nconst token = getToken();\nexport const HousingEditPost = () => {\n  _s();\n\n  /*\n      Edit page for Hosuing.\n      When a user clicks a the user's post and edits it, \n      it fetchs data and Call Editor component by passing the orignal data and submit function.\n  */\n  //    const data = \n  const {\n    _id\n  } = useParams();\n  let data = null;\n  const {\n    response,\n    isLoading,\n    error\n  } = useFetch(`${url}housing/posts/${_id}`);\n  useEffect(() => {\n    if (response) {\n      if (response.success) {\n        data = {\n          title: response.data.title,\n          contents: response.data.contents,\n          address: response.data.address,\n          price: response.data.price,\n          username: response.data.username,\n          keys: response.data.keys\n        };\n      }\n    }\n  }, [response]);\n\n  const updataData = (dataToUpdate, dispatch) => {\n    var requestOptions = {\n      method: 'PUT',\n      body: dataToUpdate,\n      redirect: 'follow'\n    };\n    fetch(`${url}housing/${_id}`, requestOptions).then(res => res.json()).then(res => {\n      if (res.success) {\n        dispatch({\n          type: \"success\",\n          value: true\n        });\n      } else dispatch({\n        type: \"fail\",\n        value: true\n      });\n    }).catch(error => dispatch({\n      type: \"fail\",\n      value: true\n    })).finally(() => {\n      dispatch({\n        type: \"loading\",\n        value: false\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(MyDiv, {\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        containerSize: \"myContainer--small\",\n        children: \"\\uD558\\uC6B0\\uC9D5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), response && /*#__PURE__*/_jsxDEV(EditPost, {\n        onSubmit: updataData,\n        initialData: data,\n        price: true,\n        address: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HousingEditPost, \"nALXCbloNjUMFJcEp+zIFqyNQVA=\", false, function () {\n  return [useParams, useFetch];\n});\n\n_c = HousingEditPost;\nexport const HousingNewPost = () => {\n  /*\n      when a user makes a new post, it call Editor as well but null initial data with user's username, and\n      submit function.\n  */\n  const postData = (data, dispatch) => {\n    var requestOptions = {\n      method: 'POST',\n      body: data,\n      redirect: 'follow'\n    };\n    fetch(url + 'housing', requestOptions).then(res => res.json()).then(res => {\n      if (res.success) {\n        dispatch({\n          type: \"success\",\n          value: true\n        });\n      } else dispatch({\n        type: \"fail\",\n        value: true\n      });\n    }).catch(error => dispatch({\n      type: \"fail\",\n      value: true\n    })).finally(() => {\n      dispatch({\n        type: \"loading\",\n        value: false\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(MyDiv, {\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        containerSize: \"myContainer--small\",\n        children: \"\\uD558\\uC6B0\\uC9D5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        price: true,\n        onSubmit: postData,\n        address: true,\n        initialData: {\n          username: user.username\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};\n_c2 = HousingNewPost;\nexport const HousingPostView = () => {\n  _s2();\n\n  /*\n      this is a housing post view page. \n      when a user clicks a post, it fetchs data with the post id. \n  */\n  const {\n    _id\n  } = useParams(); // const data = props.location.state.data\n\n  let data = null;\n  const [isDeleted, setIsDeleted] = useState(false);\n  const [showConfirm, setShowConfirm] = useState(false);\n  const history = useHistory();\n  const {\n    response,\n    isLoading,\n    error\n  } = useFetch(`${url}housing/posts/${_id}`);\n  useEffect(() => {\n    if (response) {\n      if (response.success) data = response.data;\n    }\n  }, [response]);\n\n  const handleDelete = () => {\n    setShowConfirm(true);\n  };\n\n  const deletePost = () => {\n    var requestOptions = {\n      method: 'DELETE',\n      redirect: 'follow'\n    };\n    fetch(`${url}housing/${data._id}/${user.username}`, requestOptions).then(res => res.text()).then(res => {\n      setIsDeleted(true);\n    }).catch(error => console.log('error', error));\n  };\n\n  const handleUpdate = () => {\n    history.push(`/housing/${data._id}`); // history.push({\n    //     pathname: `/housing/edit/${data._id}`,\n    //     state: { data: data }\n    // })\n  };\n\n  const handleClose = () => {\n    history.goBack();\n  };\n\n  const updateViews = () => {\n    var requestOptions = {\n      method: 'PUT',\n      redirect: 'follow'\n    };\n    fetch(`${url}housing/views/${_id}`, requestOptions).then(res => res.text()).catch(err => console.log('err', err));\n  };\n\n  useEffect(() => {\n    // update the post's Views\n    updateViews();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(MyDiv, {\n      children: !response ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(MySpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Container, {\n          containerSize: \"myContainer--small\",\n          children: \"\\uD558\\uC6B0\\uC9D5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: 5,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClose,\n              children: [/*#__PURE__*/_jsxDEV(RiArrowGoBackFill, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 63\n              }, this), \" Back\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 25\n        }, this), data && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(ViewPost, {\n              data: data,\n              handleDelete: handleDelete,\n              handleUpdate: handleUpdate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Comments, {\n              forumItem: \"housing\",\n              _id: _id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(MyModal, {\n          show: isDeleted,\n          handleOnClick: handleClose,\n          variant: \"success\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"The post has been deleted successfully\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n          show: showConfirm,\n          handleOnClick: () => setShowConfirm(false),\n          children: /*#__PURE__*/_jsxDEV(Modal.Body, {\n            style: {\n              textAlign: \"center\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Are you sure about that??\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              margin: \"0px\",\n              onClick: deletePost,\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 13\n  }, this);\n};\n\n_s2(HousingPostView, \"zBzg84Hp4T1gjWeoxnPaZJM55Ro=\", false, function () {\n  return [useParams, useHistory, useFetch];\n});\n\n_c3 = HousingPostView;\nexport const Housing = () => {\n  _s3();\n\n  /*\n      fetch the whole housing data and pass it to MyTable.\n  */\n  const {\n    response,\n    isLoading,\n    error\n  } = useFetch(url + \"housing\");\n  const history = useHistory();\n\n  const handleClick = () => {\n    history.push(`/housing/post`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: !response ? /*#__PURE__*/_jsxDEV(MySpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(MyDiv, {\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        containerSize: \"myContainer--small\",\n        children: \"\\uD558\\uC6B0\\uC9D5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClick,\n            disabled: !token ? true : false,\n            children: \"New Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: response && /*#__PURE__*/_jsxDEV(MyTable, {\n          simple: false,\n          data: response.posts,\n          notices: response.notices,\n          url: \"housing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 9\n  }, this);\n};\n\n_s3(Housing, \"91AHrFYEUGre8PIR/tUlYskhUmg=\", false, function () {\n  return [useFetch, useHistory];\n});\n\n_c4 = Housing;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"HousingEditPost\");\n$RefreshReg$(_c2, \"HousingNewPost\");\n$RefreshReg$(_c3, \"HousingPostView\");\n$RefreshReg$(_c4, \"Housing\");","map":{"version":3,"sources":["/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/pages/Housing.js"],"names":["useEffect","useState","Row","Col","Modal","CustomContainer","Container","MyTable","StyledButton","Button","getToken","getUser","useHistory","useParams","ViewPost","Comments","RiArrowGoBackFill","MyModal","Editor","useFetch","MySpinner","MyDiv","EditPost","url","user","token","HousingEditPost","_id","data","response","isLoading","error","success","title","contents","address","price","username","keys","updataData","dataToUpdate","dispatch","requestOptions","method","body","redirect","fetch","then","res","json","type","value","catch","finally","HousingNewPost","postData","HousingPostView","isDeleted","setIsDeleted","showConfirm","setShowConfirm","history","handleDelete","deletePost","text","console","log","handleUpdate","push","handleClose","goBack","updateViews","err","textAlign","Housing","handleClick","posts","notices"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport {Row,Col,Modal} from 'react-bootstrap';\nimport { CustomContainer as Container } from '../CustomContainer' ;\nimport MyTable from \"../MyTable\";\nimport { StyledButton as Button} from \"../Styles\";\nimport { getToken,getUser } from \"../../services/LoginHelper\";\nimport { useHistory,useParams } from \"react-router-dom\";\nimport ViewPost from '../ViewPost';\nimport Comments from '../Comments';\nimport {RiArrowGoBackFill} from 'react-icons/ri';\nimport MyModal from '../MyModal';\nimport Editor from \"../Editor\";\nimport { useFetch } from \"../../services/UseAPIs\";\nimport MySpinner from \"../MySpinner\";\nimport MyDiv from \"../MyDiv\";\nimport EditPost from \"../EditPost\";\nimport {url} from '../../services/config';\n\nconst user = getUser();\nconst token = getToken();\n\nexport const HousingEditPost = ()=>{\n    /*\n        Edit page for Hosuing.\n        When a user clicks a the user's post and edits it, \n        it fetchs data and Call Editor component by passing the orignal data and submit function.\n    */\n//    const data = \n    const {_id} = useParams();\n    let data =null;\n    const {response, isLoading, error}= useFetch(`${url}housing/posts/${_id}`)\n\n    useEffect(()=>{\n        if(response){\n            if(response.success){\n                data = { \n                    title : response.data.title,\n                    contents : response.data.contents,\n                    address : response.data.address,\n                    price : response.data.price,\n                    username : response.data.username,\n                    keys : response.data.keys\n                }\n            }\n        }\n        \n    },[response])\n\n    const updataData = (dataToUpdate,dispatch) =>{\n        \n        var requestOptions = {\n            method : 'PUT',\n            body : dataToUpdate,\n            redirect: 'follow'\n        };\n\n        fetch(`${url}housing/${_id}`,requestOptions)\n        .then(res=>res.json())\n        .then(res=>{\n            if(res.success){\n                    dispatch({type:\"success\", value:true})\n            }\n            else dispatch({type:\"fail\", value:true})\n        })\n        .catch(error => dispatch({type:\"fail\", value:true}))\n        .finally(()=>{\n            dispatch({type:\"loading\", value:false})\n        })\n    }\n    \n    return (\n        <Container>\n            <MyDiv>\n                <Container containerSize=\"myContainer--small\">하우징</Container>  \n                {response && <EditPost onSubmit={updataData} initialData={data} price={true} address={true}/>}\n            </MyDiv>\n        </Container>\n    )\n}\n\nexport const HousingNewPost = ()=>{\n    /*\n        when a user makes a new post, it call Editor as well but null initial data with user's username, and\n        submit function.\n    */\n    const postData = (data,dispatch)=>{\n\n        var requestOptions = {\n            method: 'POST', \n            body: data,\n            redirect: 'follow'\n        };\n        fetch(url+'housing', requestOptions)\n        .then(res=>res.json())\n        .then(res=>{\n            if(res.success){\n                    dispatch({type:\"success\", value:true})\n            }\n            else dispatch({type:\"fail\", value:true})\n        })\n        .catch(error => dispatch({type:\"fail\", value:true}))\n        .finally(()=>{\n            dispatch({type:\"loading\", value:false})\n        })\n        \n    }\n\n    return (\n        <Container>\n            <MyDiv>\n                <Container containerSize=\"myContainer--small\">하우징</Container>                \n                <Editor price={true} onSubmit={postData} address={true} initialData={{username:user.username}}/>\n            </MyDiv>\n        </Container>\n    )\n}\n\nexport const HousingPostView = () =>{\n    /*\n        this is a housing post view page. \n        when a user clicks a post, it fetchs data with the post id. \n    */\n    const { _id } = useParams();\n    // const data = props.location.state.data\n    let data = null;\n    const [isDeleted, setIsDeleted] = useState(false);\n    const [ showConfirm, setShowConfirm] = useState(false);\n\n    const history = useHistory();\n    const {response, isLoading, error} = useFetch(`${url}housing/posts/${_id}`)\n    \n    useEffect(()=>{\n        if(response) {\n            if(response.success)\n                data = response.data\n        }\n    },[response])\n\n    const handleDelete = ()=>{\n        setShowConfirm(true);\n    }   \n\n    const deletePost = ()=>{\n        var requestOptions = {\n            method : 'DELETE',\n            redirect: 'follow'\n        };\n        fetch(`${url}housing/${data._id}/${user.username}`,requestOptions)\n        .then(res => res.text())\n        .then((res) => {\n            setIsDeleted(true)\n        })\n        .catch(error => console.log('error', error));\n    }\n    \n    const handleUpdate =()=>{\n        history.push(`/housing/${data._id}`);\n        // history.push({\n        //     pathname: `/housing/edit/${data._id}`,\n        //     state: { data: data }\n        // })\n    }\n\n    const handleClose = ()=>{\n        history.goBack();\n    }\n    const updateViews = ()=>{\n\n        var requestOptions = {\n            method : 'PUT',\n            redirect: 'follow'\n        };\n\n        fetch(`${url}housing/views/${_id}`,requestOptions)\n        .then(res=>res.text())\n        .catch(err=>console.log('err',err));\n\n    }\n    useEffect(()=>{\n        // update the post's Views\n        updateViews();        \n    },[])\n\n    return(\n            <Container>\n                <MyDiv>\n                    {!response? <div><MySpinner/></div>   :\n                    <>\n                        <Container containerSize=\"myContainer--small\">하우징</Container>                \n                        <Row>\n                            <Col lg={5}>\n                                <Button onClick={handleClose}><RiArrowGoBackFill/> Back</Button>\n                            </Col>\n                        </Row>\n                        {data &&\n                            <>\n                                <Row>\n                                    <ViewPost data={data} handleDelete={handleDelete} handleUpdate={handleUpdate}/>\n                                </Row>\n                                <Row>\n                                    <Comments forumItem=\"housing\" _id={_id}/>\n                                </Row>\n                            </>\n                        }    \n                        <MyModal show={isDeleted} handleOnClick={handleClose} variant=\"success\">\n                            <p>The post has been deleted successfully</p>\n                        </MyModal>\n                        <MyModal show={showConfirm} handleOnClick={()=>setShowConfirm(false)}>\n                            <Modal.Body style={{textAlign:\"center\"}}>\n                                <p>Are you sure about that??</p>\n                                <Button margin=\"0px\" onClick={deletePost}>Confirm</Button>\n                            </Modal.Body>\n                        </MyModal>\n                    </>\n                }          \n                </MyDiv>\n            </Container> \n    )\n}\n\nexport const Housing = ()=>{\n    /*\n        fetch the whole housing data and pass it to MyTable.\n    */\n    const {response, isLoading, error} = useFetch(url+\"housing\")\n    const history = useHistory();\n\n    const handleClick = ()=>{\n        history.push(`/housing/post`)\n    }\n    return (\n        <Container>\n            {!response? <MySpinner/>  : \n            <MyDiv>\n                <Container containerSize=\"myContainer--small\">하우징</Container>\n                <Row>\n                    <Col>\n                        <Button onClick={handleClick} disabled={!token? true:false}>New Post</Button>\n                    </Col>\n                </Row>\n                <Row>\n                    {response && <MyTable simple={false} data={response.posts} notices={response.notices} url=\"housing\"/>}\n                </Row>\n            </MyDiv>\n            }\n        </Container>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}