{"ast":null,"code":"var _jsxFileName = \"/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/Editor.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer, useState, useEffect } from 'react';\nimport { Form, Row, Col, ListGroup } from 'react-bootstrap';\nimport '../styles.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport FileUploader from './FileUploader';\nimport { CgCloseR } from 'react-icons/cg';\nimport MyModal from './MyModal';\nimport { CustomContainer } from './CustomContainer';\nimport { StyledButton as Button } from './Styles';\nimport { getUser } from '../services/LoginHelper';\nimport { useHistory } from 'react-router-dom';\nimport { reducer, initialData as initReducerData } from '../services/AlertHelper';\nimport { RiDeleteBin2Line, RiCheckboxMultipleBlankLine } from 'react-icons/ri';\nimport MySpinner from './MySpinner';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledP = styled.p`\n    color : black;\n    font-size : 13pt;\n    &:hover{\n        color : red;\n    }\n`;\n_c = StyledP;\nconst user = getUser();\n\nconst Editor = ({\n  price,\n  address,\n  onSubmit\n}) => {\n  _s();\n\n  const history = useHistory();\n  const [uploadedFiles, setUploadedFiles] = useState([]); // set files \n\n  const [inputKey, setInputKey] = useState(\"formKey\"); // input key for form\n\n  const [inputFileKey, setInputFileKey] = useState(\"formKey\"); // input key for form\n\n  const [alert, setAlert] = useState(false); // alert \n\n  const [data, setData] = useState({\n    username: user.username\n  }); // data if it is editing, initial data is not null.\n\n  const [{\n    success,\n    fail,\n    loading\n  }, dispatch] = useReducer(reducer, initReducerData);\n\n  const handleCancel = () => {\n    history.goBack();\n  };\n\n  const handleFileChange = e => {\n    const files = e.target.files;\n\n    if (files.length > 10) {\n      console.log(\"Too many files\"); // replace it to Alert \n\n      setInputFileKey(new Date()); //set a random key to reset the file form \n    }\n\n    for (let i = 0; i < files.length; i++) {\n      setUploadedFiles(prev => [...prev, files[i]]);\n    }\n\n    setInputFileKey(new Date());\n  };\n\n  const renderUploadedFilesList = () => {\n    if (uploadedFiles) {\n      const list = uploadedFiles.map((item, i) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            fontSize: '10pt'\n          },\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: URL.createObjectURL(item),\n                width: \"50px\",\n                height: \"50px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 6,\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 3,\n              children: /*#__PURE__*/_jsxDEV(StyledP, {\n                onClick: () => handleDeleteUploadFiles(i),\n                children: /*#__PURE__*/_jsxDEV(RiDeleteBin2Line, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 83\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this);\n      });\n      return list;\n    }\n  };\n\n  const handleDeleteUploadFiles = index => {\n    setUploadedFiles(uploadedFiles.filter((item, i) => i !== index));\n  };\n\n  const handleChange = e => {\n    // var value = e.target.name ==\"price\"? Number(e.target.value):e.target.value\n    setData({ ...data,\n      [e.target.name]: e.target.value\n    });\n  };\n  /* ================================= */\n\n\n  const handleLargeFilesAlertClose = () => {\n    setAlert(false);\n    setInputFileKey(new Date());\n  };\n\n  const handleSubmit = async e => {\n    dispatch({\n      type: \"loading\",\n      value: true\n    });\n    e.preventDefault();\n    var formData = new FormData(); // create formdate to append data\n    //Append Data & files\n\n    for (let i = 0; i < Object.keys(data).length; i++) {\n      const key = Object.keys(data)[i];\n      formData.append(key, data[key]);\n    }\n\n    for (let i = 0; i < uploadedFiles.length; i++) {\n      formData.append(\"files\", uploadedFiles[i]);\n    }\n\n    onSubmit(formData, dispatch);\n    setInputFileKey(new Date());\n    setInputKey(new Date());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ListGroup, {\n      children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        variant: \"secondary\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            sm: 3,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleCancel,\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          className: \"editor-form\",\n          onSubmit: handleSubmit,\n          children: [user.admin && /*#__PURE__*/_jsxDEV(Form.Check, {\n            className: \"editor-form-control\",\n            type: \"checkbox\",\n            onChange: handleChange,\n            name: \"notice\",\n            label: \"\\uACF5\\uC9C0\\uC0AC\\uD56D\",\n            value: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 44\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"editor-form-control\",\n            type: \"text\",\n            onChange: handleChange,\n            placeholder: \"Title*\",\n            name: \"title\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }, this), price && /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"editor-form-control\",\n            type: \"number\",\n            placeholder: \"Price\",\n            onChange: handleChange,\n            name: \"price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 33\n          }, this), address && /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"editor-form-control\",\n            type: \"text\",\n            onChange: handleChange,\n            placeholder: \"Address\",\n            name: \"address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"editor-form-control\",\n            as: \"textarea\",\n            placeholder: \"Write Something.. Kindly!*\",\n            onChange: handleChange,\n            style: {\n              minHeight: '300px'\n            },\n            row: 100,\n            name: \"contents\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"editor-form-control\",\n            type: \"file\",\n            multiple: true,\n            onChange: handleFileChange,\n            accept: \"image/jpg, image/jpeg, image/png, image/gif, image/bmp\"\n          }, inputFileKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 29\n          }, this), uploadedFiles && /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              fontSize: '10pt'\n            },\n            children: renderUploadedFilesList()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"justify-content-end\",\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              sm: 2,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 29\n          }, this)]\n        }, inputKey, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      show: success,\n      handleOnClick: () => dispatch({\n        type: 'success',\n        value: false\n      }),\n      variant: \"success\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Completed your request successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      show: fail,\n      handleOnClick: () => dispatch({\n        type: 'fail',\n        value: false\n      }),\n      variant: \"danger\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Oops! Sorry, something is wrong..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please try again..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      show: loading,\n      disableClose: false,\n      children: /*#__PURE__*/_jsxDEV(MySpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      show: alert,\n      handleOnClick: handleLargeFilesAlertClose,\n      variant: \"danger\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Files are too large or too many\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Limit Size is 500MB and 5 files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Editor, \"S5xF9opxERvjNpDl9/BHOEcBThg=\", false, function () {\n  return [useHistory];\n});\n\n_c2 = Editor;\nexport default Editor;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledP\");\n$RefreshReg$(_c2, \"Editor\");","map":{"version":3,"sources":["/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/Editor.js"],"names":["useReducer","useState","useEffect","Form","Row","Col","ListGroup","FileUploader","CgCloseR","MyModal","CustomContainer","StyledButton","Button","getUser","useHistory","reducer","initialData","initReducerData","RiDeleteBin2Line","RiCheckboxMultipleBlankLine","MySpinner","styled","StyledP","p","user","Editor","price","address","onSubmit","history","uploadedFiles","setUploadedFiles","inputKey","setInputKey","inputFileKey","setInputFileKey","alert","setAlert","data","setData","username","success","fail","loading","dispatch","handleCancel","goBack","handleFileChange","e","files","target","length","console","log","Date","i","prev","renderUploadedFilesList","list","map","item","fontSize","URL","createObjectURL","name","handleDeleteUploadFiles","index","filter","handleChange","value","handleLargeFilesAlertClose","handleSubmit","type","preventDefault","formData","FormData","Object","keys","key","append","admin","minHeight"],"mappings":";;;AAAA,SAAQA,UAAR,EAAoBC,QAApB,EAA8BC,SAA9B,QAA8C,OAA9C;AACA,SAAQC,IAAR,EAAaC,GAAb,EAAiBC,GAAjB,EAAsBC,SAAtB,QAAsC,iBAAtC;AACA,OAAO,eAAP;AACA,OAAO,sCAAP;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAAQC,YAAY,IAAIC,MAAxB,QAAqC,UAArC;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,EAAkBC,WAAW,IAAIC,eAAjC,QAAuD,yBAAvD;AACA,SAAQC,gBAAR,EAAyBC,2BAAzB,QAA2D,gBAA3D;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,OAAO,GAAGD,MAAM,CAACE,CAAE;AACzB;AACA;AACA;AACA;AACA;AACA,CANA;KAAMD,O;AAQN,MAAME,IAAI,GAAGX,OAAO,EAApB;;AACA,MAAMY,MAAM,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,OAAR;AAAgBC,EAAAA;AAAhB,CAAD,KAA6B;AAAA;;AACxC,QAAMC,OAAO,GAAGf,UAAU,EAA1B;AACA,QAAM,CAACgB,aAAD,EAAgBC,gBAAhB,IAAoC9B,QAAQ,CAAC,EAAD,CAAlD,CAFwC,CAEgB;;AAExD,QAAM,CAAC+B,QAAD,EAAWC,WAAX,IAA0BhC,QAAQ,CAAC,SAAD,CAAxC,CAJwC,CAIa;;AACrD,QAAM,CAACiC,YAAD,EAAeC,eAAf,IAAkClC,QAAQ,CAAC,SAAD,CAAhD,CALwC,CAKqB;;AAE7D,QAAM,CAACmC,KAAD,EAAQC,QAAR,IAAoBpC,QAAQ,CAAC,KAAD,CAAlC,CAPwC,CAOG;;AAC3C,QAAM,CAACqC,IAAD,EAAOC,OAAP,IAAkBtC,QAAQ,CAAC;AAC7BuC,IAAAA,QAAQ,EAAGhB,IAAI,CAACgB;AADa,GAAD,CAAhC,CARwC,CAUpC;;AACJ,QAAM,CAAC;AAACC,IAAAA,OAAD;AAASC,IAAAA,IAAT;AAAcC,IAAAA;AAAd,GAAD,EAAwBC,QAAxB,IAAoC5C,UAAU,CAACe,OAAD,EAASE,eAAT,CAApD;;AAEA,QAAM4B,YAAY,GAAG,MAAI;AACrBhB,IAAAA,OAAO,CAACiB,MAAR;AACH,GAFD;;AAIA,QAAMC,gBAAgB,GAAIC,CAAD,IAAK;AAC1B,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;;AACA,QAAGA,KAAK,CAACE,MAAN,GAAc,EAAjB,EAAoB;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EADgB,CACc;;AAC9BlB,MAAAA,eAAe,CAAC,IAAImB,IAAJ,EAAD,CAAf,CAFgB,CAEY;AAC/B;;AAED,SAAI,IAAIC,CAAC,GAAE,CAAX,EAAcA,CAAC,GAACN,KAAK,CAACE,MAAtB,EAA8BI,CAAC,EAA/B,EAAkC;AAC9BxB,MAAAA,gBAAgB,CAACyB,IAAI,IAAG,CAAC,GAAGA,IAAJ,EAAUP,KAAK,CAACM,CAAD,CAAf,CAAR,CAAhB;AACH;;AAEDpB,IAAAA,eAAe,CAAC,IAAImB,IAAJ,EAAD,CAAf;AACH,GAZD;;AAeA,QAAMG,uBAAuB,GAAG,MAAI;AAChC,QAAG3B,aAAH,EAAiB;AACb,YAAM4B,IAAI,GAAG5B,aAAa,CAAC6B,GAAd,CAAkB,CAACC,IAAD,EAAML,CAAN,KAAU;AACrC,4BACI;AAAY,UAAA,KAAK,EAAE;AAACM,YAAAA,QAAQ,EAAC;AAAV,WAAnB;AAAA,iCACI,QAAC,GAAD;AAAA,oCACI,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,qCACI;AAAK,gBAAA,GAAG,EAAEC,GAAG,CAACC,eAAJ,CAAoBH,IAApB,CAAV;AAAqC,gBAAA,KAAK,EAAC,MAA3C;AAAkD,gBAAA,MAAM,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,wBACKA,IAAI,CAACI;AADV;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAOI,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,qCACI,QAAC,OAAD;AAAS,gBAAA,OAAO,EAAE,MAAIC,uBAAuB,CAACV,CAAD,CAA7C;AAAA,uCAAkD,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAlD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,WAASA,CAAT;AAAA;AAAA;AAAA;AAAA,gBADJ;AAeH,OAhBY,CAAb;AAkBA,aAAOG,IAAP;AACH;AACJ,GAtBD;;AAwBA,QAAMO,uBAAuB,GAAIC,KAAD,IAAS;AACrCnC,IAAAA,gBAAgB,CAACD,aAAa,CAACqC,MAAd,CAAqB,CAACP,IAAD,EAAML,CAAN,KAAWA,CAAC,KAAIW,KAArC,CAAD,CAAhB;AACH,GAFD;;AAIA,QAAME,YAAY,GAAIpB,CAAD,IAAM;AACvB;AAEAT,IAAAA,OAAO,CAAC,EACJ,GAAGD,IADC;AACI,OAACU,CAAC,CAACE,MAAF,CAASc,IAAV,GAAgBhB,CAAC,CAACE,MAAF,CAASmB;AAD7B,KAAD,CAAP;AAGH,GAND;AAOA;;;AAEA,QAAMC,0BAA0B,GAAE,MAAI;AAClCjC,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAF,IAAAA,eAAe,CAAC,IAAImB,IAAJ,EAAD,CAAf;AACH,GAHD;;AAKA,QAAMiB,YAAY,GAAG,MAAOvB,CAAP,IAAW;AAE5BJ,IAAAA,QAAQ,CAAC;AAAC4B,MAAAA,IAAI,EAAC,SAAN;AAAiBH,MAAAA,KAAK,EAAG;AAAzB,KAAD,CAAR;AACArB,IAAAA,CAAC,CAACyB,cAAF;AACA,QAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf,CAJ4B,CAIG;AAC/B;;AACA,SAAI,IAAIpB,CAAC,GAAE,CAAX,EAAcA,CAAC,GAACqB,MAAM,CAACC,IAAP,CAAYvC,IAAZ,EAAkBa,MAAlC,EAA0CI,CAAC,EAA3C,EAA8C;AAC1C,YAAMuB,GAAG,GAAGF,MAAM,CAACC,IAAP,CAAYvC,IAAZ,EAAkBiB,CAAlB,CAAZ;AACAmB,MAAAA,QAAQ,CAACK,MAAT,CAAgBD,GAAhB,EAAoBxC,IAAI,CAACwC,GAAD,CAAxB;AACH;;AAED,SAAI,IAAIvB,CAAC,GAAE,CAAX,EAAcA,CAAC,GAACzB,aAAa,CAACqB,MAA9B,EAAsCI,CAAC,EAAvC,EAA0C;AACtCmB,MAAAA,QAAQ,CAACK,MAAT,CAAgB,OAAhB,EAAyBjD,aAAa,CAACyB,CAAD,CAAtC;AACH;;AAED3B,IAAAA,QAAQ,CAAC8C,QAAD,EAAU9B,QAAV,CAAR;AACAT,IAAAA,eAAe,CAAC,IAAImB,IAAJ,EAAD,CAAf;AACArB,IAAAA,WAAW,CAAC,IAAIqB,IAAJ,EAAD,CAAX;AACH,GAlBD;;AAoBD,sBACS;AAAA,4BACI,QAAC,SAAD;AAAA,6BACI,QAAC,SAAD,CAAW,IAAX;AAAgB,QAAA,OAAO,EAAC,WAAxB;AAAA,gCACI,QAAC,GAAD;AAAA,iCACI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAA,mCACI,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAET,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQQ,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,aAAhB;AAA8B,UAAA,QAAQ,EAAE0B,YAAxC;AAAA,qBACC/C,IAAI,CAACwD,KAAL,iBAAc,QAAC,IAAD,CAAM,KAAN;AACX,YAAA,SAAS,EAAC,qBADC;AAEX,YAAA,IAAI,EAAC,UAFM;AAGX,YAAA,QAAQ,EAAEZ,YAHC;AAIX,YAAA,IAAI,EAAC,QAJM;AAKX,YAAA,KAAK,EAAC,0BALK;AAMX,YAAA,KAAK,EAAE;AANI;AAAA;AAAA;AAAA;AAAA,kBADf,eASA,QAAC,IAAD,CAAM,OAAN;AACI,YAAA,SAAS,EAAC,qBADd;AAEI,YAAA,IAAI,EAAC,MAFT;AAGI,YAAA,QAAQ,EAAEA,YAHd;AAII,YAAA,WAAW,EAAC,QAJhB;AAKI,YAAA,IAAI,EAAC,OALT;AAMI,YAAA,QAAQ;AANZ;AAAA;AAAA;AAAA;AAAA,kBATA,EAiBC1C,KAAK,iBACF,QAAC,IAAD,CAAM,OAAN;AACI,YAAA,SAAS,EAAC,qBADd;AAEI,YAAA,IAAI,EAAC,QAFT;AAGI,YAAA,WAAW,EAAC,OAHhB;AAII,YAAA,QAAQ,EAAE0C,YAJd;AAKI,YAAA,IAAI,EAAC;AALT;AAAA;AAAA;AAAA;AAAA,kBAlBJ,EAyBCzC,OAAO,iBACJ,QAAC,IAAD,CAAM,OAAN;AACI,YAAA,SAAS,EAAC,qBADd;AAEI,YAAA,IAAI,EAAC,MAFT;AAGI,YAAA,QAAQ,EAAEyC,YAHd;AAII,YAAA,WAAW,EAAC,SAJhB;AAKI,YAAA,IAAI,EAAC;AALT;AAAA;AAAA;AAAA;AAAA,kBA1BJ,eAiCA,QAAC,IAAD,CAAM,OAAN;AACI,YAAA,SAAS,EAAC,qBADd;AAEI,YAAA,EAAE,EAAC,UAFP;AAGI,YAAA,WAAW,EAAC,4BAHhB;AAII,YAAA,QAAQ,EAAEA,YAJd;AAKI,YAAA,KAAK,EAAE;AAACa,cAAAA,SAAS,EAAC;AAAX,aALX;AAMI,YAAA,GAAG,EAAE,GANT;AAOI,YAAA,IAAI,EAAC,UAPT;AAQI,YAAA,QAAQ;AARZ;AAAA;AAAA;AAAA;AAAA,kBAjCA,eAmDA,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,SAAS,EAAC,qBAAxB;AAA+C,YAAA,IAAI,EAAC,MAApD;AAA2D,YAAA,QAAQ,MAAnE;AAAoE,YAAA,QAAQ,EAAElC,gBAA9E;AAAmH,YAAA,MAAM,EAAC;AAA1H,aAAqGb,YAArG;AAAA;AAAA;AAAA;AAAA,kBAnDA,EAoDCJ,aAAa,iBACV;AAAI,YAAA,KAAK,EAAE;AAAC+B,cAAAA,QAAQ,EAAC;AAAV,aAAX;AAAA,sBACKJ,uBAAuB;AAD5B;AAAA;AAAA;AAAA;AAAA,kBArDJ,eAyDA,QAAC,GAAD;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAA,mCACI,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,qCACI,QAAC,MAAD;AAAQ,gBAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAzDA;AAAA,WAA2DzB,QAA3D;AAAA;AAAA;AAAA;AAAA,gBARR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eA6EI,QAAC,OAAD;AAAS,MAAA,IAAI,EAAES,OAAf;AAAwB,MAAA,aAAa,EAAE,MAAIG,QAAQ,CAAC;AAAC4B,QAAAA,IAAI,EAAC,SAAN;AAAiBH,QAAAA,KAAK,EAAC;AAAvB,OAAD,CAAnD;AAAoF,MAAA,OAAO,EAAC,SAA5F;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YA7EJ,eAgFI,QAAC,OAAD;AAAS,MAAA,IAAI,EAAE3B,IAAf;AAAqB,MAAA,aAAa,EAAE,MAAIE,QAAQ,CAAC;AAAC4B,QAAAA,IAAI,EAAC,MAAN;AAAcH,QAAAA,KAAK,EAAC;AAApB,OAAD,CAAhD;AAA8E,MAAA,OAAO,EAAC,QAAtF;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAhFJ,eAoFI,QAAC,OAAD;AAAS,MAAA,IAAI,EAAE1B,OAAf;AAAwB,MAAA,YAAY,EAAE,KAAtC;AAAA,6BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YApFJ,eAuFI,QAAC,OAAD;AAAS,MAAA,IAAI,EAAEP,KAAf;AAAsB,MAAA,aAAa,EAAEkC,0BAArC;AAAiE,MAAA,OAAO,EAAC,QAAzE;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAvFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADT;AA8FF,CA5LD;;GAAM7C,M;UACcX,U;;;MADdW,M;AA8LN,eAAeA,MAAf","sourcesContent":["import {useReducer, useState, useEffect} from 'react';\nimport {Form,Row,Col, ListGroup} from 'react-bootstrap';\nimport '../styles.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport FileUploader from './FileUploader';\nimport {CgCloseR} from 'react-icons/cg';\nimport MyModal from './MyModal';\nimport { CustomContainer } from './CustomContainer';\nimport {StyledButton as Button} from './Styles';\nimport { getUser } from '../services/LoginHelper';\nimport { useHistory } from 'react-router-dom';\nimport { reducer, initialData as initReducerData} from '../services/AlertHelper';\nimport {RiDeleteBin2Line,RiCheckboxMultipleBlankLine} from 'react-icons/ri';\n\nimport MySpinner from './MySpinner';\nimport styled from 'styled-components';\n\nconst StyledP = styled.p`\n    color : black;\n    font-size : 13pt;\n    &:hover{\n        color : red;\n    }\n`\n\nconst user = getUser();\nconst Editor = ({price, address,onSubmit})=>{\n    const history = useHistory(); \n    const [uploadedFiles, setUploadedFiles] = useState([]); // set files \n\n    const [inputKey, setInputKey] = useState(\"formKey\"); // input key for form\n    const [inputFileKey, setInputFileKey] = useState(\"formKey\"); // input key for form\n\n    const [alert, setAlert] = useState(false); // alert \n    const [data, setData] = useState({\n        username : user.username\n    }); // data if it is editing, initial data is not null.\n    const [{success,fail,loading},dispatch] = useReducer(reducer,initReducerData);\n    \n    const handleCancel = ()=>{\n        history.goBack();\n    }\n\n    const handleFileChange = (e)=>{\n        const files = e.target.files\n        if(files.length> 10){\n            console.log(\"Too many files\") // replace it to Alert \n            setInputFileKey(new Date()) //set a random key to reset the file form \n        }\n\n        for(let i =0; i<files.length; i++){\n            setUploadedFiles(prev=> [...prev, files[i]])\n        }\n\n        setInputFileKey(new Date())\n    }\n\n\n    const renderUploadedFilesList = ()=>{\n        if(uploadedFiles){\n            const list = uploadedFiles.map((item,i)=>{\n                return (\n                    <li key={i} style={{fontSize:'10pt'}}>\n                        <Row>\n                            <Col xs={2}>\n                                <img src={URL.createObjectURL(item)} width=\"50px\" height=\"50px\"/>\n                            </Col>\n                            <Col xs={6}>\n                                {item.name}\n                            </Col>\n                            <Col xs={3}>\n                                <StyledP onClick={()=>handleDeleteUploadFiles(i)}><RiDeleteBin2Line/></StyledP>\n                            </Col>\n                        </Row>\n                    </li>\n                )\n            })\n\n            return list\n        }\n    }\n\n    const handleDeleteUploadFiles = (index)=>{\n        setUploadedFiles(uploadedFiles.filter((item,i)=> i!== index));\n    }\n\n    const handleChange = (e) =>{\n        // var value = e.target.name ==\"price\"? Number(e.target.value):e.target.value\n\n        setData({\n            ...data,[e.target.name]:e.target.value\n        })\n    }\n    /* ================================= */\n\n    const handleLargeFilesAlertClose =()=>{\n        setAlert(false)\n        setInputFileKey(new Date())\n    }\n\n    const handleSubmit = async (e)=>{\n\n        dispatch({type:\"loading\", value : true})\n        e.preventDefault();\n        var formData = new FormData(); // create formdate to append data\n        //Append Data & files\n        for(let i =0; i<Object.keys(data).length; i++){\n            const key = Object.keys(data)[i]\n            formData.append(key,data[key]);\n        }\n\n        for(let i =0; i<uploadedFiles.length; i++){\n            formData.append(\"files\", uploadedFiles[i]);\n        }\n        \n        onSubmit(formData,dispatch)\n        setInputFileKey(new Date())\n        setInputKey(new Date())\n    }\n\n   return (\n            <div>\n                <ListGroup>\n                    <ListGroup.Item variant=\"secondary\">\n                        <Row>\n                            <Col sm={3}>\n                                <Button onClick={handleCancel}>\n                                    Back\n                                </Button>\n                            </Col>  \n                        </Row>\n                            <Form className=\"editor-form\" onSubmit={handleSubmit} key={inputKey}>\n                            {user.admin && <Form.Check \n                                className=\"editor-form-control\" \n                                type='checkbox'\n                                onChange={handleChange}\n                                name='notice'\n                                label='공지사항'\n                                value={true}\n                            />}\n                            <Form.Control \n                                className=\"editor-form-control\" \n                                type=\"text\" \n                                onChange={handleChange} \n                                placeholder=\"Title*\"\n                                name=\"title\" \n                                required \n                            />\n                            {price &&\n                                <Form.Control \n                                    className=\"editor-form-control\"  \n                                    type=\"number\" \n                                    placeholder=\"Price\"\n                                    onChange={handleChange} \n                                    name=\"price\" \n                                /> }\n                            {address &&\n                                <Form.Control \n                                    className=\"editor-form-control\"  \n                                    type=\"text\" \n                                    onChange={handleChange} \n                                    placeholder=\"Address\"\n                                    name=\"address\" \n                                /> }\n                            <Form.Control \n                                className=\"editor-form-control\" \n                                as=\"textarea\" \n                                placeholder=\"Write Something.. Kindly!*\"\n                                onChange={handleChange} \n                                style={{minHeight:'300px'}} \n                                row={100} \n                                name=\"contents\" \n                                required\n                            />\n                            {/* <Form.Control\n                                className=\"editor-form-control\" \n                                type=\"file\"\n                                key={inputFilesKey}\n                                multiple\n                                accept=\"\"\n                                onChange={handleFileChange}\n                            />         */}\n                            <Form.Control className=\"editor-form-control\"  type=\"file\" multiple onChange={handleFileChange} key={inputFileKey} accept=\"image/jpg, image/jpeg, image/png, image/gif, image/bmp\"/>  \n                            {uploadedFiles && \n                                <ul style={{fontSize:'10pt'}}>\n                                    {renderUploadedFilesList()}\n                                </ul>\n                            }\n                            <Row className=\"justify-content-end\">                               \n                                <Col sm={2}>\n                                    <Button type=\"submit\">\n                                        Submit\n                                    </Button>                                    \n                                </Col>\n                            </Row>       \n                        </Form>\n                    </ListGroup.Item>\n                </ListGroup>\n                <MyModal show={success} handleOnClick={()=>dispatch({type:'success', value:false})} variant='success'>\n                    <p>Completed your request successfully!</p>\n                </MyModal>\n                <MyModal show={fail} handleOnClick={()=>dispatch({type:'fail', value:false})} variant='danger'>\n                    <p>Oops! Sorry, something is wrong..</p>\n                    <p>Please try again..</p>\n                </MyModal>\n                <MyModal show={loading} disableClose={false}>\n                    <MySpinner/>\n                </MyModal>\n                <MyModal show={alert} handleOnClick={handleLargeFilesAlertClose} variant='danger'>\n                    <p>Files are too large or too many</p>\n                    <p>Limit Size is 500MB and 5 files</p>\n                </MyModal>\n            </div>\n        )\n}\n\nexport default Editor;"]},"metadata":{},"sourceType":"module"}