{"ast":null,"code":"var _jsxFileName = \"/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/Routes/AdminRoutes.js\";\nimport { Route, Redirect } from 'react-router-dom';\nimport { getToken, getUser } from '../services/LoginHelper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdmintRoutes = ({\n  component: Component,\n  ...rest\n}) => {\n  const user = getUser();\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => getToken() && user.admin ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 44\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 70\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_c = AdmintRoutes;\nexport default AdmintRoutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdmintRoutes\");","map":{"version":3,"sources":["/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/Routes/AdminRoutes.js"],"names":["Route","Redirect","getToken","getUser","AdmintRoutes","component","Component","rest","user","props","admin","pathname"],"mappings":";AAAA,SAAQA,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;AACA,SAAQC,QAAR,EAAkBC,OAAlB,QAAiC,yBAAjC;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAGC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAqC;AACtD,QAAMC,IAAI,GAAGL,OAAO,EAApB;AACA,sBACI,QAAC,KAAD,OACQI,IADR;AAEI,IAAA,MAAM,EAAIE,KAAK,IAEXP,QAAQ,MAAMM,IAAI,CAACE,KAAnB,gBAA2B,QAAC,SAAD,OAAeD;AAAf;AAAA;AAAA;AAAA;AAAA,YAA3B,gBAAqD,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAACE,QAAAA,QAAQ,EAAC;AAAV;AAAd;AAAA;AAAA;AAAA;AAAA;AAJ7D;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAVD;;KAAMP,Y;AAYN,eAAeA,YAAf","sourcesContent":["import {Route, Redirect} from 'react-router-dom'\nimport {getToken, getUser } from '../services/LoginHelper';\n\nconst AdmintRoutes = ({component : Component, ...rest}) =>{\n    const user = getUser();\n    return (\n        <Route \n            {...rest}\n            render = {props =>\n            (\n                getToken() && user.admin ? <Component {...props}/> : <Redirect to={{pathname:'/'}}/> \n            )}/>\n    )\n}\n\nexport default AdmintRoutes;"]},"metadata":{},"sourceType":"module"}