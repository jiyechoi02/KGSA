{"ast":null,"code":"var _jsxFileName = \"/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/CustomPagination.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Pagination, Container } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pageContainerStyle = {\n  display: \"flex\",\n  textAlign: \"center\",\n  justifyContent: \"center\",\n  margin: \"10px\"\n};\n\nconst CustomPagination = ({\n  postsPerPage,\n  totalPosts,\n  paginate\n}) => {\n  _s();\n\n  const countePagination = Math.ceil(totalPosts / postsPerPage);\n  const items = [];\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const handleClick = i => {\n    if (i >= 1 && i <= countePagination) {\n      setCurrentPage(i);\n      paginate(i);\n    }\n  };\n\n  for (let i = 1; i < countePagination + 1; i++) {\n    items.push( /*#__PURE__*/_jsxDEV(Pagination.Item, {\n      active: i == currentPage,\n      activeLabel: \"\",\n      onClick: () => {\n        setCurrentPage(i);\n        paginate(i);\n      },\n      children: i\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: pageContainerStyle,\n    children: /*#__PURE__*/_jsxDEV(Pagination, {\n      size: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(Pagination.Prev, {\n        onClick: () => handleClick(currentPage - 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), items, /*#__PURE__*/_jsxDEV(Pagination.Next, {\n        onClick: () => handleClick(currentPage + 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CustomPagination, \"/I5ndIj1DLWdNvrzovVqEm7pTpU=\");\n\n_c = CustomPagination;\nexport default CustomPagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomPagination\");","map":{"version":3,"sources":["/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/CustomPagination.js"],"names":["React","useState","Pagination","Container","pageContainerStyle","display","textAlign","justifyContent","margin","CustomPagination","postsPerPage","totalPosts","paginate","countePagination","Math","ceil","items","currentPage","setCurrentPage","handleClick","i","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,UAAR,EAAoBC,SAApB,QAAoC,iBAApC;AACA,OAAO,sCAAP;;AAEA,MAAMC,kBAAkB,GAAC;AACrBC,EAAAA,OAAO,EAAE,MADY;AAErBC,EAAAA,SAAS,EAAE,QAFU;AAGrBC,EAAAA,cAAc,EAAE,QAHK;AAIrBC,EAAAA,MAAM,EAAE;AAJa,CAAzB;;AAMA,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA,YAAD;AAAeC,EAAAA,UAAf;AAA0BC,EAAAA;AAA1B,CAAD,KAAyC;AAAA;;AAE9D,QAAMC,gBAAgB,GAAGC,IAAI,CAACC,IAAL,CAAUJ,UAAU,GAACD,YAArB,CAAzB;AACA,QAAMM,KAAK,GAAG,EAAd;AACA,QAAM,CAAEC,WAAF,EAAeC,cAAf,IAAkCjB,QAAQ,CAAC,CAAD,CAAhD;;AAEA,QAAMkB,WAAW,GAAGC,CAAD,IAAK;AACpB,QAAGA,CAAC,IAAI,CAAL,IAAUA,CAAC,IAAIP,gBAAlB,EAAoC;AAChCK,MAAAA,cAAc,CAACE,CAAD,CAAd;AACAR,MAAAA,QAAQ,CAACQ,CAAD,CAAR;AACH;AACJ,GALD;;AAMA,OAAI,IAAIA,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAGP,gBAAgB,GAAC,CAAlC,EAAqCO,CAAC,EAAtC,EAAyC;AACrCJ,IAAAA,KAAK,CAACK,IAAN,eACI,QAAC,UAAD,CAAY,IAAZ;AAAyB,MAAA,MAAM,EAAED,CAAC,IAAEH,WAApC;AAAiD,MAAA,WAAW,EAAC,EAA7D;AAAgE,MAAA,OAAO,EAAE,MAAI;AAAEC,QAAAA,cAAc,CAACE,CAAD,CAAd;AAAmBR,QAAAA,QAAQ,CAACQ,CAAD,CAAR;AAAY,OAA9G;AAAA,gBACKA;AADL,OAAsBA,CAAtB;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAED,sBACI,QAAC,SAAD;AAAW,IAAA,KAAK,EAAEhB,kBAAlB;AAAA,2BACI,QAAC,UAAD;AAAY,MAAA,IAAI,EAAC,IAAjB;AAAA,8BACI,QAAC,UAAD,CAAY,IAAZ;AAAiB,QAAA,OAAO,EAAE,MAAIe,WAAW,CAACF,WAAW,GAAC,CAAb;AAAzC;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKD,KAFL,eAGI,QAAC,UAAD,CAAY,IAAZ;AAAiB,QAAA,OAAO,EAAE,MAAIG,WAAW,CAACF,WAAW,GAAC,CAAb;AAAzC;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA7BD;;GAAMR,gB;;KAAAA,gB;AA+BN,eAAeA,gBAAf","sourcesContent":["import React, {useState} from 'react';\nimport {Pagination, Container} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst pageContainerStyle={\n    display: \"flex\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    margin: \"10px\"\n}\nconst CustomPagination = ({postsPerPage, totalPosts,paginate}) => {\n\n    const countePagination = Math.ceil(totalPosts/postsPerPage);\n    const items = [];\n    const [ currentPage, setCurrentPage ] = useState(1);\n\n    const handleClick= (i)=>{\n        if(i >= 1 && i <= countePagination) {\n            setCurrentPage(i);\n            paginate(i);\n        }\n    }\n    for(let i=1; i < countePagination+1; i++){\n        items.push(\n            <Pagination.Item key={i} active={i==currentPage} activeLabel=\"\" onClick={()=>{ setCurrentPage(i); paginate(i)} }>\n                {i}\n            </Pagination.Item>\n        );\n    }\n\n    return (\n        <Container style={pageContainerStyle}>\n            <Pagination size='sm'>\n                <Pagination.Prev onClick={()=>handleClick(currentPage-1)}/>\n                {items}\n                <Pagination.Next onClick={()=>handleClick(currentPage+1)}/>\n            </Pagination>\n        </Container>\n    )\n}\n\nexport default CustomPagination;"]},"metadata":{},"sourceType":"module"}