{"ast":null,"code":"var _jsxFileName = \"/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/MyModal.js\";\nimport { Modal, Alert } from 'react-bootstrap';\nimport { StyledButton as Button } from './Styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalHeaderStyle = {\n  background: '#6A1010',\n  color: '#fff'\n};\n\nconst MyModal = props => {\n  /**\n   * props :\n      * variant : to decide alert variant\n      * closeButton : if it true, the modal has close button \n      * handleOnClick : handle click close or close button \n      * show : when the modal shows \n   * \n   */\n  var variant = props.variant ? props.variant : 'primary';\n  var onHide = props.handleOnClick ? props.handleOnClick : () => {};\n  var disableClose;\n  if (props.disableClose == undefined || props.disableClose) disableClose = true;else disableClose = false;\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: props.show,\n    onHide: onHide,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: disableClose,\n      style: ModalHeaderStyle,\n      children: \"KGSA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      style: {\n        textAlign: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        variant: variant,\n        children: props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), disableClose ? /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        margin: \"0px\",\n        onClick: props.handleOnClick,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MyModal;\nexport default MyModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyModal\");","map":{"version":3,"sources":["/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/components/MyModal.js"],"names":["Modal","Alert","StyledButton","Button","ModalHeaderStyle","background","color","MyModal","props","variant","onHide","handleOnClick","disableClose","undefined","show","textAlign","children"],"mappings":";AAAA,SAAQA,KAAR,EAAcC,KAAd,QAA0B,iBAA1B;AACA,SAAQC,YAAY,IAAIC,MAAxB,QAAqC,UAArC;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,UAAU,EAAG,SADQ;AAErBC,EAAAA,KAAK,EAAG;AAFa,CAAzB;;AAKA,MAAMC,OAAO,GAAIC,KAAD,IAAU;AACtB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AAEI,MAAIC,OAAO,GAAGD,KAAK,CAACC,OAAN,GAAeD,KAAK,CAACC,OAArB,GAA+B,SAA7C;AACA,MAAIC,MAAM,GAAGF,KAAK,CAACG,aAAN,GAAqBH,KAAK,CAACG,aAA3B,GAA2C,MAAI,CAAE,CAA9D;AACA,MAAIC,YAAJ;AACA,MAAGJ,KAAK,CAACI,YAAN,IAAqBC,SAArB,IAAkCL,KAAK,CAACI,YAA3C,EAAyDA,YAAY,GAAG,IAAf,CAAzD,KACKA,YAAY,GAAG,KAAf;AAEL,sBACA,QAAC,KAAD;AAAO,IAAA,IAAI,EAAEJ,KAAK,CAACM,IAAnB;AAAyB,IAAA,MAAM,EAAEJ,MAAjC;AAAA,4BACI,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,EAAEE,YAA3B;AAAyC,MAAA,KAAK,EAAER,gBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,KAAD,CAAO,IAAP;AAAY,MAAA,KAAK,EAAE;AAACW,QAAAA,SAAS,EAAC;AAAX,OAAnB;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEN,OAAhB;AAAA,kBAEKD,KAAK,CAACQ;AAFX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ,EAUKJ,YAAY,gBACT,QAAC,KAAD,CAAO,MAAP;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAC,KAAf;AAAqB,QAAA,OAAO,EAAEJ,KAAK,CAACG,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADS,GAGS,IAb1B;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAkBH,CAlCD;;KAAMJ,O;AAoCN,eAAeA,OAAf","sourcesContent":["import {Modal,Alert} from 'react-bootstrap';\nimport {StyledButton as Button} from './Styles';\n\nconst ModalHeaderStyle = {\n    background : '#6A1010',\n    color : '#fff'\n}\n\nconst MyModal = (props) =>{\n    /**\n     * props :\n        * variant : to decide alert variant\n        * closeButton : if it true, the modal has close button \n        * handleOnClick : handle click close or close button \n        * show : when the modal shows \n     * \n     */\n\n    var variant = props.variant? props.variant : 'primary';\n    var onHide = props.handleOnClick? props.handleOnClick : ()=>{}\n    var disableClose\n    if(props.disableClose== undefined || props.disableClose) disableClose = true\n    else disableClose = false\n\n    return (\n    <Modal show={props.show} onHide={onHide}>\n        <Modal.Header closeButton={disableClose} style={ModalHeaderStyle}>\n            KGSA \n        </Modal.Header>\n        <Modal.Body style={{textAlign:\"center\"}}>\n            <Alert variant={variant}>\n                {/* <p><AiOutlineNotification/></p> */}\n                {props.children}\n            </Alert>\n        </Modal.Body>\n        {disableClose?\n            <Modal.Footer>\n                <Button margin=\"0px\" onClick={props.handleOnClick}>Close</Button>\n            </Modal.Footer> : null\n        }\n    </Modal>\n    )\n}\n\nexport default MyModal;"]},"metadata":{},"sourceType":"module"}