{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nexport const useFetch = url => {\n  _s();\n\n  const [response, setResponse] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    let unsubscribe = false;\n    var requestOptions = {\n      method: 'GET',\n      redirect: 'follow'\n    };\n\n    const fetchData = () => {\n      if (unsubscribe) return;\n      setIsLoading(true);\n      fetch(url, requestOptions).then(res => res.json()).then(res => setResponse(res)).then(setIsLoading(false)).catch(e => {\n        // console.log(e)\n        setError(e);\n        setIsLoading(false);\n      });\n    };\n\n    fetchData();\n    return () => {\n      unsubscribe = true;\n    };\n  }, []);\n  return {\n    response,\n    isLoading,\n    error\n  };\n};\n\n_s(useFetch, \"zUxv8yXGjx9ppy4RLW5wrrHbMfk=\");","map":{"version":3,"sources":["/Users/jiyechoi/Desktop/KGSA_web/kgsa/frontend/src/services/UseAPIs.js"],"names":["useState","useEffect","useFetch","url","response","setResponse","isLoading","setIsLoading","error","setError","unsubscribe","requestOptions","method","redirect","fetchData","fetch","then","res","json","catch","e"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAEA,OAAO,MAAMC,QAAQ,GAAIC,GAAD,IAAQ;AAAA;;AAC5B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,EAAxC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AAGAC,EAAAA,SAAS,CAAC,MAAI;AAEV,QAAIS,WAAW,GAAI,KAAnB;AAEA,QAAIC,cAAc,GAAG;AACjBC,MAAAA,MAAM,EAAE,KADS;AAEjBC,MAAAA,QAAQ,EAAE;AAFO,KAArB;;AAKA,UAAMC,SAAS,GAAG,MAAK;AACnB,UAAGJ,WAAH,EAAgB;AAChBH,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAQ,MAAAA,KAAK,CAACZ,GAAD,EAAKQ,cAAL,CAAL,CACKK,IADL,CACUC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EADf,EAEKF,IAFL,CAEUC,GAAG,IAAEZ,WAAW,CAACY,GAAD,CAF1B,EAGKD,IAHL,CAGUT,YAAY,CAAC,KAAD,CAHtB,EAIKY,KAJL,CAIWC,CAAC,IAAE;AACN;AACAX,QAAAA,QAAQ,CAACW,CAAD,CAAR;AACAb,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,OARL;AASH,KAZD;;AAcAO,IAAAA,SAAS;AAET,WAAO,MAAK;AACRJ,MAAAA,WAAW,GAAG,IAAd;AACH,KAFD;AAGH,GA5BQ,EA4BP,EA5BO,CAAT;AA8BA,SAAO;AAACN,IAAAA,QAAD;AAAUE,IAAAA,SAAV;AAAoBE,IAAAA;AAApB,GAAP;AACH,CArCM;;GAAMN,Q","sourcesContent":["import {useState, useEffect} from 'react'\n\nexport const useFetch = (url) =>{\n    const [response, setResponse] = useState();\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    \n    useEffect(()=>{\n\n        let unsubscribe  = false;\n\n        var requestOptions = {\n            method: 'GET',\n            redirect: 'follow'\n          };\n          \n        const fetchData = () =>{\n            if(unsubscribe) return;\n            setIsLoading(true);\n            fetch(url,requestOptions)\n                .then(res=>res.json())\n                .then(res=>setResponse(res))\n                .then(setIsLoading(false))\n                .catch(e=>{ \n                    // console.log(e)\n                    setError(e);\n                    setIsLoading(false)\n                })\n        }\n\n        fetchData();\n\n        return () =>{\n            unsubscribe = true;\n        }\n    },[])\n\n    return {response,isLoading,error};\n}   \n\n\n"]},"metadata":{},"sourceType":"module"}